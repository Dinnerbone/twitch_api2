var searchIndex = JSON.parse('{\
"twitch_api2":{"doc":"github crates-io docs-rs-big","i":[[3,"HelixClient","twitch_api2","Client for Helix or the New Twitch API",null,null],[3,"TMIClient","","Client for the twitch TMI endpoint, almost entirely…",null,null],[3,"TwitchClient","","Client for Twitch APIs.",null,null],[12,"helix","","Helix endpoint. See [helix]",0,null],[12,"tmi","","TMI endpoint. See [tmi]",0,null],[0,"types","","Twitch types",null,null],[3,"TwitchCategory","twitch_api2::types","A game or category as defined by Twitch",null,null],[4,"SubscriptionTier","","Subscription tiers",null,null],[13,"Tier1","","Tier 1. $4.99",1,null],[13,"Tier2","","Tier 1. $9.99",1,null],[13,"Tier3","","Tier 1. $24.99",1,null],[13,"Other","","Other",1,null],[4,"BroadcasterType","","Broadcaster types: \\\"partner\\\", \\\"affiliated\\\", or \\\"\\\".",null,null],[13,"Partner","","Partner",2,null],[13,"Affiliated","","Affiliated",2,null],[13,"None","","None",2,null],[4,"UserType","","User types: \\\"staff\\\", \\\"admin\\\", \\\"global_mod\\\", or \\\"\\\".",null,null],[13,"Staff","","Staff",3,null],[13,"Admin","","Admin",3,null],[13,"GlobalMod","","Global Moderator",3,null],[13,"None","","None",3,null],[6,"UserId","","A user ID.",null,null],[6,"UserName","","A username, also specified as login. Should not be…",null,null],[6,"DisplayName","","A users display name",null,null],[6,"Nickname","","A nickname, not capitalized.",null,null],[6,"Timestamp","","RFC3339 timestamp",null,null],[6,"CategoryId","","A game or category ID",null,null],[6,"TagId","","A tag ID",null,null],[6,"VideoId","","A video ID",null,null],[0,"helix","twitch_api2","Helix endpoints or the New Twitch API",null,null],[3,"HelixClient","twitch_api2::helix","Client for Helix or the New Twitch API",null,null],[3,"Response","","Response retrieved from endpoint. Data is the type in…",null,null],[12,"data","","Twitch\'s response field for `data`.",4,null],[12,"pagination","","A cursor value, to be used in a subsequent request to…",4,null],[12,"request","","The request that was sent, used for [Paginated]",4,null],[3,"HelixRequestPutError","","helix returned error {status:?} - {error}: {message:?}…",null,null],[3,"HelixRequestPatchError","","helix returned error {status:?}: {message:?} when calling…",null,null],[4,"SerializeError","","Errors from the query serializer",null,null],[13,"Custom","","{0}",5,null],[13,"TopLevelNotSupported","","serializer only supports structs and maps on top-level",5,null],[12,"location","twitch_api2::helix::SerializeError","Location where this was triggered",6,null],[13,"FieldNotSupported","twitch_api2::helix","field serializer only supports strings, sequences,…",5,null],[12,"location","twitch_api2::helix::SerializeError","Location where this was triggered",7,null],[13,"PairNotSupported","twitch_api2::helix","pair serializer only supports strings, integers, floats,…",5,null],[12,"location","twitch_api2::helix::SerializeError","Location where this was triggered",8,null],[13,"ValueNotSupported","twitch_api2::helix","value serializer only supports primitive types",5,null],[12,"location","twitch_api2::helix::SerializeError","Location where this was triggered",9,null],[4,"ClientRequestError","twitch_api2::helix","Errors for [HelixClient::req_get] and similar functions.",null,null],[13,"RequestError","","request failed from reqwests side",10,null],[13,"NoPage","","no pagination found",10,null],[13,"CreateRequestError","","Could not create request",10,null],[13,"HelixRequestGetError","","Could not parse GET response",10,null],[13,"HelixRequestPutError","","Could not parse PUT response",10,null],[13,"HelixRequestPostError","","Could not parse POST response",10,null],[13,"HelixRequestPatchError","","Could not parse PATCH response",10,null],[13,"HelixRequestDeleteError","","Could not parse DELETE response",10,null],[13,"Custom","","{0}",10,null],[4,"CreateRequestError","","Could not create request",null,null],[13,"HttpError","","http crate returned an error",11,null],[13,"SerializeError","","serialization of body failed",11,null],[13,"InvalidUri","","Could not assemble URI for request",11,null],[13,"Custom","","{0}",11,null],[4,"InvalidUri","","Errors that can happen when creating [http::Uri] for…",null,null],[13,"UriParseError","","URI could not be parsed",12,null],[13,"QuerySerializeError","","Could not serialize request to query",12,null],[4,"HelixRequestGetError","","Could not parse GET response",null,null],[13,"Error","","helix returned error {status:?} - {error}: {message:?}…",13,null],[12,"error","twitch_api2::helix::HelixRequestGetError","Error message related to status code",14,null],[12,"status","","Status code of error, usually 400-499",14,null],[12,"message","","Error message from Twitch",14,null],[12,"uri","","URI to the endpoint",14,null],[13,"Utf8Error","twitch_api2::helix","could not parse body as utf8: {1}",13,null],[13,"DeserializeError","","deserialization failed when processing request result",13,null],[4,"HelixRequestPostError","","Could not parse POST response",null,null],[13,"Error","","helix returned error {status:?} - {error}: {message:?}…",15,null],[12,"error","twitch_api2::helix::HelixRequestPostError","Error message related to status code",16,null],[12,"status","","Status code of error, usually 400-499",16,null],[12,"message","","Error message from Twitch",16,null],[12,"uri","","URI to the endpoint",16,null],[12,"body","","Body sent with POST",16,null],[13,"Utf8Error","twitch_api2::helix","could not parse body as utf8: {1}",15,null],[13,"DeserializeError","","deserialization failed when processing request result",15,null],[4,"HelixRequestDeleteError","","Could not parse DELETE response",null,null],[13,"Error","","helix returned error {status:?}- {error}: {message:?} when…",17,null],[12,"error","twitch_api2::helix::HelixRequestDeleteError","Error message related to status code",18,null],[12,"status","","Status code of error, usually 400-499",18,null],[12,"message","","Error message from Twitch",18,null],[12,"uri","","URI to the endpoint",18,null],[13,"Utf8Error","twitch_api2::helix","could not parse body as utf8: {1}",17,null],[0,"channels","","Endpoints regarding channels",null,null],[3,"ChannelInformation","twitch_api2::helix::channels","Return Values for Get Channel Information",null,null],[12,"broadcaster_id","","Twitch User ID of this channel owner",19,null],[12,"game_id","","Current game ID being played on the channel",19,null],[12,"broadcaster_language","","Language of the channel",19,null],[12,"title","","Title of the stream",19,null],[12,"description","","Description of the stream",19,null],[3,"GetChannelInformationRequest","","Query Parameters for Get Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",20,null],[3,"ModifyChannelInformationBody","","Body Parameters for Modify Channel Information",null,null],[12,"game_id","","Current game ID being played on the channel",21,null],[12,"broadcaster_language","","Language of the channel",21,null],[12,"title","","Title of the stream",21,null],[3,"ModifyChannelInformationRequest","","Query Parameters for Modify Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",22,null],[3,"StartCommercial","","Return Values for Start Commercial",null,null],[12,"length","","Length of the triggered commercial",23,null],[12,"message","","Provides contextual information on why the request failed",23,null],[12,"retry_after","","Seconds until the next commercial can be served on this…",23,null],[3,"StartCommercialBody","","Body Parameters for Start Commercial",null,null],[12,"broadcaster_id","","ID of the channel requesting a commercial",24,null],[12,"length","","Desired length of the commercial in seconds. Valid options…",24,null],[3,"StartCommercialRequest","","Query Parameters for Start Commercial",null,null],[4,"ModifyChannelInformation","","Return Values for Modify Channel Information",null,null],[13,"Success","","204 - Channel/Stream updated successfully",25,null],[13,"MissingQuery","","400 - Missing Query Parameter",25,null],[13,"InternalServerError","","Internal Server Error; Failed to update channel",25,null],[4,"CommercialLength","","Length of the commercial in seconds",null,null],[13,"Length30","","30s",26,null],[13,"Length60","","60s",26,null],[13,"Length90","","90s",26,null],[13,"Length120","","120s",26,null],[13,"Length150","","150s",26,null],[13,"Length180","","180s",26,null],[0,"get_channel_information","","Gets channel information for users.…",null,null],[3,"GetChannelInformationRequest","twitch_api2::helix::channels::get_channel_information","Query Parameters for Get Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",20,null],[3,"ChannelInformation","","Return Values for Get Channel Information",null,null],[12,"broadcaster_id","","Twitch User ID of this channel owner",19,null],[12,"game_id","","Current game ID being played on the channel",19,null],[12,"broadcaster_language","","Language of the channel",19,null],[12,"title","","Title of the stream",19,null],[12,"description","","Description of the stream",19,null],[11,"builder","","Create a builder for building…",20,[[],["getchannelinformationrequestbuilder",3]]],[0,"modify_channel_information","twitch_api2::helix::channels","Modify channel information for users.…",null,null],[3,"ModifyChannelInformationRequest","twitch_api2::helix::channels::modify_channel_information","Query Parameters for Modify Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",22,null],[3,"ModifyChannelInformationBody","","Body Parameters for Modify Channel Information",null,null],[12,"game_id","","Current game ID being played on the channel",21,null],[12,"broadcaster_language","","Language of the channel",21,null],[12,"title","","Title of the stream",21,null],[4,"ModifyChannelInformation","","Return Values for Modify Channel Information",null,null],[13,"Success","","204 - Channel/Stream updated successfully",25,null],[13,"MissingQuery","","400 - Missing Query Parameter",25,null],[13,"InternalServerError","","Internal Server Error; Failed to update channel",25,null],[11,"builder","","Create a builder for building…",22,[[],["modifychannelinformationrequestbuilder",3]]],[11,"builder","","Create a builder for building…",21,[[],["modifychannelinformationbodybuilder",3]]],[0,"start_commercial","twitch_api2::helix::channels","Starts a commercial on a specified channel.…",null,null],[3,"StartCommercialRequest","twitch_api2::helix::channels::start_commercial","Query Parameters for Start Commercial",null,null],[3,"StartCommercialBody","","Body Parameters for Start Commercial",null,null],[12,"broadcaster_id","","ID of the channel requesting a commercial",24,null],[12,"length","","Desired length of the commercial in seconds. Valid options…",24,null],[3,"StartCommercial","","Return Values for Start Commercial",null,null],[12,"length","","Length of the triggered commercial",23,null],[12,"message","","Provides contextual information on why the request failed",23,null],[12,"retry_after","","Seconds until the next commercial can be served on this…",23,null],[4,"CommercialLength","","Length of the commercial in seconds",null,null],[13,"Length30","","30s",26,null],[13,"Length60","","60s",26,null],[13,"Length90","","90s",26,null],[13,"Length120","","120s",26,null],[13,"Length150","","150s",26,null],[13,"Length180","","180s",26,null],[4,"CommercialLengthParseError","","Error for the `TryFrom` on [CommercialLength]",null,null],[13,"InvalidLength","","invalid length of {0}",27,null],[11,"new","","Create a new [StartCommercialRequest]",28,[[]]],[11,"builder","","Create a builder for building `StartCommercialBody`. On…",24,[[],["startcommercialbodybuilder",3]]],[0,"clips","twitch_api2::helix","Endpoints regarding clips",null,null],[3,"Clip","twitch_api2::helix::clips","Return Values for Get Clips",null,null],[12,"broadcaster_id","","User ID of the stream from which the clip was created.",29,null],[12,"broadcaster_name","","Display name corresponding to broadcaster_id.",29,null],[12,"created_at","","Date when the clip was created.",29,null],[12,"creator_id","","ID of the user who created the clip.",29,null],[12,"creator_name","","Display name corresponding to creator_id.",29,null],[12,"embed_url","","URL to embed the clip.",29,null],[12,"game_id","","ID of the game assigned to the stream when the clip was…",29,null],[12,"id","","ID of the clip being queried.",29,null],[12,"language","","Language of the stream from which the clip was created.",29,null],[12,"thumbnail_url","","URL of the clip thumbnail.",29,null],[12,"title","","Title of the clip.",29,null],[12,"url","","URL where the clip can be viewed.",29,null],[12,"video_id","","ID of the video from which the clip was created.",29,null],[12,"view_count","","Number of times the clip has been viewed.",29,null],[3,"GetClipsRequest","","Query Parameters for Get Clips",null,null],[12,"broadcaster_id","","ID of the broadcaster for whom clips are returned. The…",30,null],[12,"game_id","","ID of the game for which clips are returned. The number of…",30,null],[12,"id","","ID of the clip being queried. Limit: 100.",30,null],[12,"after","","Cursor for forward pagination: tells the server where to…",30,null],[12,"before","","Cursor for backward pagination: tells the server where to…",30,null],[12,"ended_at","","Ending date/time for returned clips, in RFC3339 format.…",30,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",30,null],[12,"started_at","","Starting date/time for returned clips, in RFC3339 format.…",30,null],[0,"get_clips","","Gets clip information by clip ID (one or more),…",null,null],[3,"GetClipsRequest","twitch_api2::helix::clips::get_clips","Query Parameters for Get Clips",null,null],[12,"broadcaster_id","","ID of the broadcaster for whom clips are returned. The…",30,null],[12,"game_id","","ID of the game for which clips are returned. The number of…",30,null],[12,"id","","ID of the clip being queried. Limit: 100.",30,null],[12,"after","","Cursor for forward pagination: tells the server where to…",30,null],[12,"before","","Cursor for backward pagination: tells the server where to…",30,null],[12,"ended_at","","Ending date/time for returned clips, in RFC3339 format.…",30,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",30,null],[12,"started_at","","Starting date/time for returned clips, in RFC3339 format.…",30,null],[3,"Clip","","Return Values for Get Clips",null,null],[12,"broadcaster_id","","User ID of the stream from which the clip was created.",29,null],[12,"broadcaster_name","","Display name corresponding to broadcaster_id.",29,null],[12,"created_at","","Date when the clip was created.",29,null],[12,"creator_id","","ID of the user who created the clip.",29,null],[12,"creator_name","","Display name corresponding to creator_id.",29,null],[12,"embed_url","","URL to embed the clip.",29,null],[12,"game_id","","ID of the game assigned to the stream when the clip was…",29,null],[12,"id","","ID of the clip being queried.",29,null],[12,"language","","Language of the stream from which the clip was created.",29,null],[12,"thumbnail_url","","URL of the clip thumbnail.",29,null],[12,"title","","Title of the clip.",29,null],[12,"url","","URL where the clip can be viewed.",29,null],[12,"video_id","","ID of the video from which the clip was created.",29,null],[12,"view_count","","Number of times the clip has been viewed.",29,null],[11,"builder","","Create a builder for building `GetClipsRequest`. On the…",30,[[],["getclipsrequestbuilder",3]]],[0,"games","twitch_api2::helix","Endpoints regarding games",null,null],[3,"GetGamesRequest","twitch_api2::helix::games","Query Parameters for Get Games",null,null],[3,"GetTopGamesRequest","","Query Parameters for Get Games",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",31,null],[12,"before","","Cursor for backward pagination: tells the server where to…",31,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",31,null],[0,"get_games","","Gets game information by game ID or name. `get-games`",null,null],[3,"GetGamesRequest","twitch_api2::helix::games::get_games","Query Parameters for Get Games",null,null],[6,"Game","","Return Values for Get Games",null,null],[11,"builder","","Create a builder for building `GetGamesRequest`. On the…",32,[[],["getgamesrequestbuilder",3]]],[0,"get_top_games","twitch_api2::helix::games","Gets games sorted by number of current viewers on Twitch,…",null,null],[3,"GetTopGamesRequest","twitch_api2::helix::games::get_top_games","Query Parameters for Get Games",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",31,null],[12,"before","","Cursor for backward pagination: tells the server where to…",31,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",31,null],[6,"Game","","Return Values for Get Games",null,null],[11,"builder","","Create a builder for building `GetTopGamesRequest`. On the…",31,[[],["gettopgamesrequestbuilder",3]]],[0,"moderation","twitch_api2::helix","Endpoints regarding moderation",null,null],[3,"CheckAutoModStatus","twitch_api2::helix::moderation","Return Values for Check AutoMod Status",null,null],[12,"msg_id","","The msg_id passed in the body of the POST message. Maps…",33,null],[12,"is_permitted","","Indicates if this message meets AutoMod requirements.",33,null],[3,"CheckAutoModStatusBody","","Body Parameters for Check AutoMod Status",null,null],[12,"msg_id","","Developer-generated identifier for mapping messages to…",34,null],[12,"msg_text","","Message text.",34,null],[12,"user_id","","User ID of the sender.",34,null],[3,"CheckAutoModStatusRequest","","Query Parameters for Check AutoMod Status",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",35,null],[3,"BannedEvents","","Return Values for Get Banned Events",null,null],[12,"id","","Event ID",36,null],[12,"event_type","","Displays `moderation.user.ban` or `moderation.user.unban`",36,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",36,null],[12,"version","","Returns the version of the endpoint.",36,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",36,null],[3,"GetBannedEventsRequest","","Query Parameters for Get Banned Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",37,null],[12,"user_id","","Filters the results and only returns a status object for…",37,null],[12,"after","","Cursor for forward pagination: tells the server where to…",37,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",37,null],[3,"BannedUsers","","Return Values for Get Banned Users",null,null],[12,"user_id","","User ID of a user who has been banned.",38,null],[12,"user_name","","Display name of a user who has been banned.",38,null],[12,"expires_at","","RFC3339 formatted timestamp for timeouts; empty string for…",38,null],[3,"GetBannedUsersRequest","","Query Parameters for Get Banned Users",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",39,null],[12,"user_id","","Filters the results and only returns a status object for…",39,null],[12,"after","","Cursor for forward pagination: tells the server where to…",39,null],[3,"GetModeratorEventsRequest","","Query Parameters for Get Moderators Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",40,null],[12,"user_id","","Filters the results and only returns a status object for…",40,null],[12,"after","","Cursor for forward pagination: tells the server where to…",40,null],[3,"ModeratorEvents","","Return Values for Get Moderators Events",null,null],[12,"id","","Event ID",41,null],[12,"event_type","","Displays `moderation.moderator.add` or…",41,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",41,null],[12,"version","","Returns the version of the endpoint.",41,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",41,null],[3,"GetModeratorsRequest","","Query Parameters for Get Moderators",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",42,null],[12,"after","","Cursor for forward pagination: tells the server where to…",42,null],[3,"Moderators","","Return Values for Get Moderators",null,null],[0,"get_moderators","","Returns all moderators in a channel. `get-moderators`",null,null],[3,"GetModeratorsRequest","twitch_api2::helix::moderation::get_moderators","Query Parameters for Get Moderators",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",42,null],[12,"after","","Cursor for forward pagination: tells the server where to…",42,null],[3,"Moderators","","Return Values for Get Moderators",null,null],[11,"builder","","Create a builder for building `GetModeratorsRequest`. On…",42,[[],["getmoderatorsrequestbuilder",3]]],[0,"get_moderator_events","twitch_api2::helix::moderation","Returns a list of moderators or users added and removed as…",null,null],[3,"GetModeratorEventsRequest","twitch_api2::helix::moderation::get_moderator_events","Query Parameters for Get Moderators Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",40,null],[12,"user_id","","Filters the results and only returns a status object for…",40,null],[12,"after","","Cursor for forward pagination: tells the server where to…",40,null],[3,"ModeratorEvents","","Return Values for Get Moderators Events",null,null],[12,"id","","Event ID",41,null],[12,"event_type","","Displays `moderation.moderator.add` or…",41,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",41,null],[12,"version","","Returns the version of the endpoint.",41,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",41,null],[11,"builder","","Create a builder for building `GetModeratorEventsRequest`.…",40,[[],["getmoderatoreventsrequestbuilder",3]]],[0,"get_banned_users","twitch_api2::helix::moderation","Returns all banned and timed-out users in a channel.…",null,null],[3,"GetBannedUsersRequest","twitch_api2::helix::moderation::get_banned_users","Query Parameters for Get Banned Users",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",39,null],[12,"user_id","","Filters the results and only returns a status object for…",39,null],[12,"after","","Cursor for forward pagination: tells the server where to…",39,null],[3,"BannedUsers","","Return Values for Get Banned Users",null,null],[12,"user_id","","User ID of a user who has been banned.",38,null],[12,"user_name","","Display name of a user who has been banned.",38,null],[12,"expires_at","","RFC3339 formatted timestamp for timeouts; empty string for…",38,null],[11,"builder","","Create a builder for building `GetBannedUsersRequest`. On…",39,[[],["getbannedusersrequestbuilder",3]]],[0,"get_banned_events","twitch_api2::helix::moderation","Returns all banned and timed-out users in a channel.…",null,null],[3,"GetBannedEventsRequest","twitch_api2::helix::moderation::get_banned_events","Query Parameters for Get Banned Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",37,null],[12,"user_id","","Filters the results and only returns a status object for…",37,null],[12,"after","","Cursor for forward pagination: tells the server where to…",37,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",37,null],[3,"BannedEvents","","Return Values for Get Banned Events",null,null],[12,"id","","Event ID",36,null],[12,"event_type","","Displays `moderation.user.ban` or `moderation.user.unban`",36,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",36,null],[12,"version","","Returns the version of the endpoint.",36,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",36,null],[11,"builder","","Create a builder for building `GetBannedEventsRequest`. On…",37,[[],["getbannedeventsrequestbuilder",3]]],[0,"check_automod_status","twitch_api2::helix::moderation","Determines whether a string message meets the channel’s…",null,null],[3,"CheckAutoModStatusRequest","twitch_api2::helix::moderation::check_automod_status","Query Parameters for Check AutoMod Status",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",35,null],[3,"CheckAutoModStatusBody","","Body Parameters for Check AutoMod Status",null,null],[12,"msg_id","","Developer-generated identifier for mapping messages to…",34,null],[12,"msg_text","","Message text.",34,null],[12,"user_id","","User ID of the sender.",34,null],[3,"CheckAutoModStatus","","Return Values for Check AutoMod Status",null,null],[12,"msg_id","","The msg_id passed in the body of the POST message. Maps…",33,null],[12,"is_permitted","","Indicates if this message meets AutoMod requirements.",33,null],[11,"builder","","Create a builder for building `CheckAutoModStatusRequest`.…",35,[[],["checkautomodstatusrequestbuilder",3]]],[11,"builder","","Create a builder for building `CheckAutoModStatusBody`. On…",34,[[],["checkautomodstatusbodybuilder",3]]],[0,"search","twitch_api2::helix","Endpoints regarding search",null,null],[3,"SearchCategoriesRequest","twitch_api2::helix::search","Query Parameters for Search Categories",null,null],[12,"query","","URL encoded search query",43,null],[12,"after","","Cursor for forward pagination: tells the server where to…",43,null],[12,"before","","Cursor for backward pagination: tells the server where to…",43,null],[3,"Channels","","Return Values for Search Channels",null,null],[3,"SearchChannelsRequest","","Query Parameters for Search Channels",null,null],[12,"query","","URL encoded search query",44,null],[12,"after","","Cursor for forward pagination: tells the server where to…",44,null],[12,"first","","Maximum number of objects to return. Maximum: 100 Default:…",44,null],[12,"live_only","","Filter results for live streams only. Default: false",44,null],[0,"search_categories","","Returns a list of games or categories that match the query…",null,null],[3,"SearchCategoriesRequest","twitch_api2::helix::search::search_categories","Query Parameters for Search Categories",null,null],[12,"query","","URL encoded search query",43,null],[12,"after","","Cursor for forward pagination: tells the server where to…",43,null],[12,"before","","Cursor for backward pagination: tells the server where to…",43,null],[6,"Categories","","Return Values for Search Categories",null,null],[11,"builder","","Create a builder for building `SearchCategoriesRequest`.…",43,[[],["searchcategoriesrequestbuilder",3]]],[0,"search_channels","twitch_api2::helix::search","Returns a list of channels (users who have streamed within…",null,null],[3,"SearchChannelsRequest","twitch_api2::helix::search::search_channels","Query Parameters for Search Channels",null,null],[12,"query","","URL encoded search query",44,null],[12,"after","","Cursor for forward pagination: tells the server where to…",44,null],[12,"first","","Maximum number of objects to return. Maximum: 100 Default:…",44,null],[12,"live_only","","Filter results for live streams only. Default: false",44,null],[3,"Channels","","Return Values for Search Channels",null,null],[11,"builder","","Create a builder for building `SearchChannelsRequest`. On…",44,[[],["searchchannelsrequestbuilder",3]]],[6,"Categories","twitch_api2::helix::search","Return Values for Search Categories",null,null],[0,"streams","twitch_api2::helix","Endpoints regarding streams",null,null],[3,"GetStreamsRequest","twitch_api2::helix::streams","Query Parameters for Get Streams",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",45,null],[12,"before","","Cursor for backward pagination: tells the server where to…",45,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",45,null],[12,"game_id","","Returns streams broadcasting a specified game ID. You can…",45,null],[12,"language","","Stream language. You can specify up to 100 languages.",45,null],[12,"user_id","","Returns streams broadcast by one or more specified user…",45,null],[12,"user_login","","Returns streams broadcast by one or more specified user…",45,null],[3,"Stream","","Return Values for Get Streams",null,null],[12,"game_id","","ID of the game being played on the stream.",46,null],[12,"id","","Stream ID.",46,null],[12,"language","","Stream language.",46,null],[12,"started_at","","UTC timestamp.",46,null],[12,"tag_ids","","Shows tag IDs that apply to the stream.",46,null],[12,"thumbnail_url","","Thumbnail URL of the stream. All image URLs have variable…",46,null],[12,"title","","Stream title.",46,null],[12,"type_","","Stream type: \\\"live\\\" or \\\"\\\" (in case of error).",46,null],[12,"user_id","","ID of the user who is streaming.",46,null],[12,"user_name","","Display name corresponding to user_id.",46,null],[12,"viewer_count","","Number of viewers watching the stream at the time of the…",46,null],[3,"GetStreamTagsRequest","","Query Parameters for Get Stream Tags",null,null],[12,"broadcaster_id","","ID of the stream whose tags are going to be fetched",47,null],[4,"StreamType","","Gotten from Stream.type_",null,null],[13,"Live","","Stream is live.",48,null],[13,"NotLive","","Stream not live",48,null],[0,"get_streams","","Gets information about active streams. `get-streams`",null,null],[3,"GetStreamsRequest","twitch_api2::helix::streams::get_streams","Query Parameters for Get Streams",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",45,null],[12,"before","","Cursor for backward pagination: tells the server where to…",45,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",45,null],[12,"game_id","","Returns streams broadcasting a specified game ID. You can…",45,null],[12,"language","","Stream language. You can specify up to 100 languages.",45,null],[12,"user_id","","Returns streams broadcast by one or more specified user…",45,null],[12,"user_login","","Returns streams broadcast by one or more specified user…",45,null],[3,"Stream","","Return Values for Get Streams",null,null],[12,"game_id","","ID of the game being played on the stream.",46,null],[12,"id","","Stream ID.",46,null],[12,"language","","Stream language.",46,null],[12,"started_at","","UTC timestamp.",46,null],[12,"tag_ids","","Shows tag IDs that apply to the stream.",46,null],[12,"thumbnail_url","","Thumbnail URL of the stream. All image URLs have variable…",46,null],[12,"title","","Stream title.",46,null],[12,"type_","","Stream type: \\\"live\\\" or \\\"\\\" (in case of error).",46,null],[12,"user_id","","ID of the user who is streaming.",46,null],[12,"user_name","","Display name corresponding to user_id.",46,null],[12,"viewer_count","","Number of viewers watching the stream at the time of the…",46,null],[11,"builder","","Create a builder for building `GetStreamsRequest`. On the…",45,[[],["getstreamsrequestbuilder",3]]],[0,"get_stream_tags","twitch_api2::helix::streams","Gets information about active streams. `get-stream-tags`",null,null],[3,"GetStreamTagsRequest","twitch_api2::helix::streams::get_stream_tags","Query Parameters for Get Stream Tags",null,null],[12,"broadcaster_id","","ID of the stream whose tags are going to be fetched",47,null],[6,"Tag","","Return Values for Get Stream Tags",null,null],[11,"builder","","Create a builder for building `GetStreamTagsRequest`. On…",47,[[],["getstreamtagsrequestbuilder",3]]],[6,"Tag","twitch_api2::helix::streams","Return Values for Get Stream Tags",null,null],[11,"is_live","","Check if the stream is live or not",48,[[]]],[0,"subscriptions","twitch_api2::helix","Endpoints regarding subscriptions",null,null],[3,"BroadcasterSubscriptions","twitch_api2::helix::subscriptions","Return Values for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster.",49,null],[12,"broadcaster_name","","Display name of the broadcaster.",49,null],[12,"is_gift","","Determines if the subscription is a gift subscription.",49,null],[12,"tier","","Type of subscription (Tier 1, Tier 2, Tier 3). 1000 = Tier…",49,null],[12,"plan_name","","Name of the subscription.",49,null],[12,"user_id","","ID of the subscribed user.",49,null],[12,"user_name","","Display name of the subscribed user.",49,null],[3,"GetBroadcasterSubscriptionsRequest","","Query Parameters for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster. Must match the User ID in the…",50,null],[12,"user_id","","Unique identifier of account to get subscription status…",50,null],[12,"after","","Cursor for forward pagination: tells the server where to…",50,null],[0,"get_broadcaster_subscriptions","","Get all of a broadcaster’s subscriptions.…",null,null],[3,"GetBroadcasterSubscriptionsRequest","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","Query Parameters for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster. Must match the User ID in the…",50,null],[12,"user_id","","Unique identifier of account to get subscription status…",50,null],[12,"after","","Cursor for forward pagination: tells the server where to…",50,null],[3,"BroadcasterSubscriptions","","Return Values for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster.",49,null],[12,"broadcaster_name","","Display name of the broadcaster.",49,null],[12,"is_gift","","Determines if the subscription is a gift subscription.",49,null],[12,"tier","","Type of subscription (Tier 1, Tier 2, Tier 3). 1000 = Tier…",49,null],[12,"plan_name","","Name of the subscription.",49,null],[12,"user_id","","ID of the subscribed user.",49,null],[12,"user_name","","Display name of the subscribed user.",49,null],[11,"builder","","Create a builder for building…",50,[[],["getbroadcastersubscriptionsrequestbuilder",3]]],[0,"tags","twitch_api2::helix","Endpoints regarding tags",null,null],[3,"GetAllStreamTagsRequest","twitch_api2::helix::tags","Query Parameters for Get All Stream Tags",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",51,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",51,null],[12,"tag_id","","ID of a tag. Multiple IDs can be specified. If provided,…",51,null],[3,"TwitchTag","","A stream tag as defined by Twitch.",null,null],[12,"id","","ID of the tag.",52,null],[12,"is_auto","","true if the tag is auto-generated; otherwise, false . An…",52,null],[12,"localization_names","","All localized names of the tag.",52,null],[12,"localization_descriptions","","All localized descriptions of the tag.",52,null],[4,"AutoGenerated","","Tag is auto-generated or not.",null,null],[13,"True","","Was auto-generated",53,null],[13,"False","","Was not auto-generated",53,null],[0,"get_all_stream_tags","","Gets the list of all stream tags defined by Twitch,…",null,null],[3,"GetAllStreamTagsRequest","twitch_api2::helix::tags::get_all_stream_tags","Query Parameters for Get All Stream Tags",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",51,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",51,null],[12,"tag_id","","ID of a tag. Multiple IDs can be specified. If provided,…",51,null],[6,"Tag","","Return Values for Get All Stream Tags",null,null],[11,"builder","","Create a builder for building `GetAllStreamTagsRequest`.…",51,[[],["getallstreamtagsrequestbuilder",3]]],[6,"Tag","twitch_api2::helix::tags","Return Values for Get All Stream Tags",null,null],[6,"TagLanguage","","Language code, formatted as 2 letter language by ISO…",null,null],[0,"users","twitch_api2::helix","Endpoints regarding users",null,null],[3,"GetUsersRequest","twitch_api2::helix::users","Query Parameters for Get Users",null,null],[12,"id","","User ID. Multiple user IDs can be specified. Limit: 100.",54,null],[12,"login","","User login name. Multiple login names can be specified.…",54,null],[3,"User","","Return Values for Get Users",null,null],[12,"broadcaster_type","","User’s broadcaster type: \\\"partner\\\", \\\"affiliate\\\", or \\\"\\\".",55,null],[12,"description","","User’s channel description.",55,null],[12,"display_name","","User’s display name.",55,null],[12,"email","","User’s email address. Returned if the request includes the…",55,null],[12,"id","","User’s ID.",55,null],[12,"login","","User’s login name.",55,null],[12,"offline_image_url","","URL of the user’s offline image.",55,null],[12,"profile_image_url","","URL of the user’s profile image.",55,null],[12,"type_","","User’s type: \\\"staff\\\", \\\"admin\\\", \\\"global_mod\\\", or \\\"\\\".",55,null],[12,"view_count","","Total number of views of the user’s channel.",55,null],[3,"GetUsersFollowsRequest","","Query Parameters for Get Users Follows",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",56,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",56,null],[12,"from_id","","User ID. The request returns information about users who…",56,null],[12,"to_id","","User ID. The request returns information about users who…",56,null],[3,"UsersFollows","","Return Values for Get Users Follows",null,null],[12,"followed_at","","Date and time when the from_id user followed the to_id user.",57,null],[12,"from_id","","ID of the user following the to_id user.",57,null],[12,"from_name","","Display name corresponding to from_id.",57,null],[12,"to_id","","ID of the user being followed by the from_id user.",57,null],[12,"to_name","","Display name corresponding to to_id.",57,null],[12,"total","","Total number of items returned.",57,null],[3,"DeleteUserFollowsRequest","","Query Parameters for Delete Users Follows",null,null],[12,"from_id","","User ID of the follower",58,null],[12,"to_id","","Channel to be unfollowed by the user",58,null],[3,"CreateUserFollowsBody","","Body Parameters for Create User Follows",null,null],[12,"from_id","","User ID of the follower",59,null],[12,"to_id","","ID of the channel to be followed by the user",59,null],[3,"CreateUserFollowsRequest","","Query Parameters for Create User Follows",null,null],[4,"DeleteUserFollows","","Return Values for [Delete Users Follows",null,null],[13,"Success","","204 - User successfully deleted from list of channel…",60,null],[13,"MissingQuery","","400 - Missing Query Parameter",60,null],[13,"ProcessingError","","422 - Entity cannot be processed",60,null],[4,"CreateUserFollows","","Return Values for Create User Follows",null,null],[13,"Success","","204 or 200 - Successfully created follows",61,null],[13,"MissingQuery","","400 - Missing Query Parameter",61,null],[13,"ProcessingError","","422 - Entity cannot be processed",61,null],[0,"get_users","","Gets information about one or more specified Twitch users.…",null,null],[3,"GetUsersRequest","twitch_api2::helix::users::get_users","Query Parameters for Get Users",null,null],[12,"id","","User ID. Multiple user IDs can be specified. Limit: 100.",54,null],[12,"login","","User login name. Multiple login names can be specified.…",54,null],[3,"User","","Return Values for Get Users",null,null],[12,"broadcaster_type","","User’s broadcaster type: \\\"partner\\\", \\\"affiliate\\\", or \\\"\\\".",55,null],[12,"description","","User’s channel description.",55,null],[12,"display_name","","User’s display name.",55,null],[12,"email","","User’s email address. Returned if the request includes the…",55,null],[12,"id","","User’s ID.",55,null],[12,"login","","User’s login name.",55,null],[12,"offline_image_url","","URL of the user’s offline image.",55,null],[12,"profile_image_url","","URL of the user’s profile image.",55,null],[12,"type_","","User’s type: \\\"staff\\\", \\\"admin\\\", \\\"global_mod\\\", or \\\"\\\".",55,null],[12,"view_count","","Total number of views of the user’s channel.",55,null],[11,"builder","","Create a builder for building `GetUsersRequest`. On the…",54,[[],["getusersrequestbuilder",3]]],[0,"get_users_follows","twitch_api2::helix::users","Gets information on follow relationships between two…",null,null],[3,"GetUsersFollowsRequest","twitch_api2::helix::users::get_users_follows","Query Parameters for Get Users Follows",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",56,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",56,null],[12,"from_id","","User ID. The request returns information about users who…",56,null],[12,"to_id","","User ID. The request returns information about users who…",56,null],[3,"UsersFollows","","Return Values for Get Users Follows",null,null],[12,"followed_at","","Date and time when the from_id user followed the to_id user.",57,null],[12,"from_id","","ID of the user following the to_id user.",57,null],[12,"from_name","","Display name corresponding to from_id.",57,null],[12,"to_id","","ID of the user being followed by the from_id user.",57,null],[12,"to_name","","Display name corresponding to to_id.",57,null],[12,"total","","Total number of items returned.",57,null],[11,"builder","","Create a builder for building `GetUsersFollowsRequest`. On…",56,[[],["getusersfollowsrequestbuilder",3]]],[0,"delete_user_follows","twitch_api2::helix::users","Deletes a specified user from the followers of a specified…",null,null],[3,"DeleteUserFollowsRequest","twitch_api2::helix::users::delete_user_follows","Query Parameters for Delete Users Follows",null,null],[12,"from_id","","User ID of the follower",58,null],[12,"to_id","","Channel to be unfollowed by the user",58,null],[4,"DeleteUserFollows","","Return Values for [Delete Users Follows",null,null],[13,"Success","","204 - User successfully deleted from list of channel…",60,null],[13,"MissingQuery","","400 - Missing Query Parameter",60,null],[13,"ProcessingError","","422 - Entity cannot be processed",60,null],[11,"builder","","Create a builder for building `DeleteUserFollowsRequest`.…",58,[[],["deleteuserfollowsrequestbuilder",3]]],[0,"create_user_follows","twitch_api2::helix::users","Adds a specified user to the followers of a specified…",null,null],[3,"CreateUserFollowsRequest","twitch_api2::helix::users::create_user_follows","Query Parameters for Create User Follows",null,null],[3,"CreateUserFollowsBody","","Body Parameters for Create User Follows",null,null],[12,"from_id","","User ID of the follower",59,null],[12,"to_id","","ID of the channel to be followed by the user",59,null],[4,"CreateUserFollows","","Return Values for Create User Follows",null,null],[13,"Success","","204 or 200 - Successfully created follows",61,null],[13,"MissingQuery","","400 - Missing Query Parameter",61,null],[13,"ProcessingError","","422 - Entity cannot be processed",61,null],[11,"builder","","Create a builder for building `CreateUserFollowsRequest`.…",62,[[],["createuserfollowsrequestbuilder",3]]],[11,"builder","","Create a builder for building `CreateUserFollowsBody`. On…",59,[[],["createuserfollowsbodybuilder",3]]],[0,"videos","twitch_api2::helix","Endpoints regarding videos",null,null],[3,"GetVideosRequest","twitch_api2::helix::videos","Query Parameters for Get Videos",null,null],[12,"id","","ID of the video being queried. Limit: 100. If this is…",63,null],[12,"user_id","","ID of the user who owns the video.",63,null],[12,"game_id","","ID of the game the video is of.",63,null],[12,"after","","Cursor for forward pagination: tells the server where to…",63,null],[12,"before","","Cursor for backward pagination: tells the server where to…",63,null],[12,"first","","Number of values to be returned when getting videos by…",63,null],[12,"language","","Language of the video being queried. Limit: 1.",63,null],[12,"period","","Period during which the video was created. Valid values:…",63,null],[12,"sort","","Sort order of the videos. Valid values: \\\"time\\\",…",63,null],[12,"type_","","Type of video. Valid values: \\\"all\\\", \\\"upload\\\", \\\"archive\\\",…",63,null],[3,"Video","","Return Values for Get Videos",null,null],[4,"Sort","","Sort order of the videos",null,null],[13,"Time","","Sort by time",64,null],[13,"Trending","","Sort by trending",64,null],[13,"Views","","Sort by views",64,null],[4,"VideoPeriod","","Period during which the video was created",null,null],[13,"All","","Filter by all. Effectively a no-op",65,null],[13,"Day","","Filter by from this day only",65,null],[13,"Week","","Filter by this week",65,null],[13,"Month","","Filter by this month",65,null],[4,"VideoType","","Type of video",null,null],[13,"All","","All video types",66,null],[13,"Upload","","A uploaded video",66,null],[13,"Archive","","An archived video",66,null],[13,"Highlight","","A highlight",66,null],[4,"VideoPrivacy","","Type of video",null,null],[13,"Public","","Video is public",67,null],[13,"Private","","Video is private",67,null],[0,"get_videos","","Gets video information by video ID (one or more), user ID…",null,null],[3,"GetVideosRequest","twitch_api2::helix::videos::get_videos","Query Parameters for Get Videos",null,null],[12,"id","","ID of the video being queried. Limit: 100. If this is…",63,null],[12,"user_id","","ID of the user who owns the video.",63,null],[12,"game_id","","ID of the game the video is of.",63,null],[12,"after","","Cursor for forward pagination: tells the server where to…",63,null],[12,"before","","Cursor for backward pagination: tells the server where to…",63,null],[12,"first","","Number of values to be returned when getting videos by…",63,null],[12,"language","","Language of the video being queried. Limit: 1.",63,null],[12,"period","","Period during which the video was created. Valid values:…",63,null],[12,"sort","","Sort order of the videos. Valid values: \\\"time\\\",…",63,null],[12,"type_","","Type of video. Valid values: \\\"all\\\", \\\"upload\\\", \\\"archive\\\",…",63,null],[3,"Video","","Return Values for Get Videos",null,null],[11,"builder","","Create a builder for building `GetVideosRequest`. On the…",63,[[],["getvideosrequestbuilder",3]]],[6,"Cursor","twitch_api2::helix","A cursor is a pointer to the current \\\"page\\\" in the twitch…",null,null],[8,"Request","","A request is a Twitch endpoint, see New Twitch API reference",null,null],[18,"PATH","","The path to the endpoint relative to the helix root. eg.…",68,null],[18,"SCOPE","","Scopes needed by this endpoint",68,null],[18,"OPT_SCOPE","","Optional scopes needed by this endpoint",68,null],[16,"Response","","Response type. twitch\'s response will  deserialize to this.",68,null],[11,"query","","Defines layout of the url parameters.",68,[[],[["error",4],["result",4],["string",3]]]],[11,"get_uri","","Returns full URI for the request, including query…",68,[[],[["uri",3],["result",4],["invaliduri",4]]]],[8,"RequestPost","","Helix endpoint POSTs information",null,null],[16,"Body","","Body parameters",69,null],[11,"body","","Create body text from [RequestPost::Body]",69,[[],[["error",3],["result",4],["string",3]]]],[11,"create_request","","Create a [http::Request] from this [Request] in your client",69,[[],[["request",3],["createrequesterror",4],["result",4]]]],[11,"parse_response","","Parse response. Override for different behavior",69,[[["uri",3],["vec",3],["response",3]],[["response",3],["result",4],["helixrequestposterror",4]]]],[8,"RequestPatch","","Helix endpoint PATCHs information",null,null],[16,"Body","","Body parameters",70,null],[11,"body","","Create body text from [RequestPost::Body]",70,[[],[["error",3],["result",4],["string",3]]]],[11,"create_request","","Create a [http::Request] from this [Request] in your client",70,[[],[["request",3],["createrequesterror",4],["result",4]]]],[11,"parse_response","","Parse response. Override for different behavior",70,[[["uri",3],["vec",3],["response",3]],[["result",4],["helixrequestpatcherror",3]]]],[8,"RequestDelete","","Helix endpoint DELETEs information",null,null],[11,"create_request","","Create a [http::Request] from this [Request] in your client",71,[[],[["request",3],["createrequesterror",4],["result",4]]]],[11,"parse_response","","Parse response. Override for different behavior",71,[[["uri",3],["vec",3],["response",3]],[["helixrequestdeleteerror",4],["result",4]]]],[8,"RequestGet","","Helix endpoint GETs information",null,null],[11,"create_request","","Create a [http::Request] from this [Request] in your client",72,[[],[["request",3],["createrequesterror",4],["result",4]]]],[11,"parse_response","","Parse response. Override for different behavior",72,[[["uri",3],["vec",3],["response",3]],[["response",3],["result",4],["helixrequestgeterror",4]]]],[8,"Paginated","","Request can be paginated with a cursor",null,null],[10,"set_pagination","","Should returns the current pagination cursor.",73,[[["option",4],["cursor",6]]]],[11,"with_client","","Create a new client with an existing client",74,[[],["helixclient",3]]],[11,"new","","Create a new [HelixClient] with a default…",74,[[],["helixclient",3]]],[11,"clone_client","","Retrieve a clone of the [HttpClient][crate::HttpClient]…",74,[[]]],[11,"req_get","","Request on a valid [RequestGet] endpoint",74,[[]]],[11,"req_post","","Request on a valid [RequestPost] endpoint",74,[[]]],[11,"req_patch","","Request on a valid [RequestPatch] endpoint",74,[[]]],[11,"req_delete","","Request on a valid [RequestDelete] endpoint",74,[[]]],[11,"get_next","","Get the next page in the responses.",4,[[["helixclient",3]]]],[0,"tmi","twitch_api2","TMI Endpoint, twitch\'s unsupported api for better chatters…",null,null],[3,"TMIClient","twitch_api2::tmi","Client for the twitch TMI endpoint, almost entirely…",null,null],[3,"GetChatters","","Returned by TMI at…",null,null],[12,"chatter_count","","Amount of connected users",75,null],[12,"chatters","","Lists of users in their \\\"rank\\\"",75,null],[3,"Chatters","","List of \\\"rank\\\"s and what users are in them. A user can…",null,null],[12,"broadcaster","","Broadcaster, can (probably) only be one",76,null],[12,"vips","","VIPS in the chat, have the VIP badge and are set with…",76,null],[12,"moderators","","Moderators in the chat, have a moderator badge and are set…",76,null],[12,"staff","","Twitch Staff in the chat, have a staff badge.",76,null],[12,"admins","","Twitch Admins in the chat, have an admin badge, akin to…",76,null],[12,"global_mods","","Twitch Global Moderators in the chat, have an admin badge,…",76,null],[12,"viewers","","Regular viewer in the chat, includes followers and…",76,null],[3,"GetHosts","","Returned by TMI at `https://tmi.twitch.tv/hosts`",null,null],[12,"hosts","","List of host records. `len()` will be 1 if successfully…",77,null],[3,"Host","","A host record returned by TMI at https://tmi.twitch.tv/hosts",null,null],[12,"host_id","","User ID of the hosting channel",78,null],[12,"target_id","","User ID of the hosted channel. Will be missing if the…",78,null],[12,"host_login","","Login of the hosting channel, if requested with…",78,null],[12,"target_login","","Login of the hosted channel, if requested with…",78,null],[12,"host_display_name","","Display name of the hosting channel, if requested with…",78,null],[12,"target_display_name","","Display name of the hosted channel, if requested with…",78,null],[4,"HostsRequestId","","Possible options for a [TMIClient::get_hosts] request.",null,null],[13,"Host","","Request the broadcaster that a given channel is hosting.",79,null],[13,"Target","","Request a list of channels hosting a target broadcaster.",79,null],[4,"RequestError","","Errors for [TMIClient] requests",null,null],[13,"HttpError","","http crate returned an error",80,null],[13,"DeserializeError","","deserialization failed",80,null],[13,"RequestError","","request failed",80,null],[13,"Utf8Error","","could not parse body as utf8: {1}",80,null],[6,"UserId","","User ID",null,null],[11,"new","","Create a new client with a default",81,[[],["tmiclient",3]]],[11,"with_client","","Create a new [TMIClient] with an existing…",81,[[],["tmiclient",3]]],[11,"clone_client","","Retrieve a clone of the [HttpClient][crate::HttpClient]…",81,[[]]],[11,"get_chatters","","Get all the chatters in the chat",81,[[]]],[11,"get_hosts","","Get the broadcaster that a given channel is hosting, or…",81,[[["hostsrequestid",4]]]],[0,"client","twitch_api2","Different clients you can use with this crate to call the…",null,null],[3,"DummyHttpClient","twitch_api2::client","A client that will never work, used to trick documentation…",null,null],[4,"SurfError","","Possible errors from [Client::req()] when using…",null,null],[13,"Surf","","surf failed to do the request: {0}",82,null],[13,"InvalidHeaderValue","","could not construct header value",82,null],[13,"InvalidHeaderName","","could not construct header name",82,null],[13,"UrlError","","uri could not be translated into an url.",82,null],[6,"BoxedFuture","","A boxed future, mimics `futures::future::BoxFuture`",null,null],[6,"Req","","The request type we\'re expecting with body.",null,null],[6,"Response","","The response type we\'re expecting with body",null,null],[8,"Client","","A client that can do requests",null,null],[16,"Error","","Error returned by the client",83,null],[10,"req","","Send a request",83,[[["req",6]],[["boxedfuture",6],["result",4]]]],[7,"TWITCH_HELIX_URL","twitch_api2","Location of Twitch Helix",null,null],[7,"TWITCH_TMI_URL","","Location of Twitch TMI",null,null],[11,"new","","Create a new [TwitchClient]",0,[[],["twitchclient",3]]],[11,"with_client","","Create a new [TwitchClient] with an existing [HttpClient]",0,[[],["twitchclient",3]]],[11,"from","twitch_api2::helix","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","twitch_api2::tmi","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","twitch_api2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","twitch_api2::types","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","twitch_api2::helix","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","twitch_api2::helix::channels::get_channel_information","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","twitch_api2::helix::channels::modify_channel_information","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","twitch_api2::helix::channels::start_commercial","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","twitch_api2::helix::channels::modify_channel_information","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","twitch_api2::helix::channels::start_commercial","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","twitch_api2::helix::clips::get_clips","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","twitch_api2::helix::games::get_games","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","twitch_api2::helix::games::get_top_games","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","twitch_api2::helix::moderation::check_automod_status","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","twitch_api2::helix::moderation::get_banned_events","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","twitch_api2::helix::moderation::get_banned_users","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","twitch_api2::helix::moderation::get_moderator_events","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","twitch_api2::helix::moderation::get_moderators","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","twitch_api2::helix::search::search_categories","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","twitch_api2::helix::search::search_channels","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","twitch_api2::helix::streams::get_streams","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","twitch_api2::helix::streams::get_stream_tags","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","twitch_api2::helix::streams","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","twitch_api2::helix::tags::get_all_stream_tags","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","twitch_api2::helix::tags","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"equivalent","","",53,[[]]],[11,"vzip","","",53,[[]]],[11,"from","twitch_api2::helix::users::get_users","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","twitch_api2::helix::users::get_users_follows","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","twitch_api2::helix::users::delete_user_follows","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","twitch_api2::helix::users::create_user_follows","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","twitch_api2::helix::users::delete_user_follows","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","twitch_api2::helix::users::create_user_follows","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","twitch_api2::helix::videos::get_videos","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","twitch_api2::helix::videos","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","twitch_api2::tmi","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","twitch_api2::client","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"to_string","","",90,[[],["string",3]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"body","twitch_api2::helix::moderation::check_automod_status","",35,[[],[["error",3],["result",4],["string",3]]]],[11,"parse_response","twitch_api2::helix::users::create_user_follows","",62,[[["uri",3],["vec",3],["response",3]],[["helixrequestposterror",4],["result",4],["response",3]]]],[11,"parse_response","twitch_api2::helix::channels::get_channel_information","",20,[[["uri",3],["vec",3],["response",3]],[["result",4],["response",3],["helixrequestgeterror",4]]]],[11,"set_pagination","twitch_api2::helix::clips::get_clips","",30,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::games::get_top_games","",31,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_moderators","",42,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_moderator_events","",40,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_banned_users","",39,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_banned_events","",37,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::search::search_categories","",43,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::search::search_channels","",44,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::streams::get_streams","",45,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",50,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::tags::get_all_stream_tags","",51,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::users::get_users_follows","",56,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::videos::get_videos","",63,[[["cursor",6],["option",4]]]],[11,"req","twitch_api2::client","",90,[[["req",6]],[["result",4],["boxedfuture",6]]]],[11,"from","twitch_api2::helix::tags","",53,[[]]],[11,"from","twitch_api2::helix","",10,[[["createrequesterror",4]]]],[11,"from","","",10,[[["helixrequestgeterror",4]]]],[11,"from","","",10,[[["helixrequestputerror",3]]]],[11,"from","","",10,[[["helixrequestposterror",4]]]],[11,"from","","",10,[[["helixrequestpatcherror",3]]]],[11,"from","","",10,[[["helixrequestdeleteerror",4]]]],[11,"from","","",11,[[["error",3]]]],[11,"from","","",11,[[["error",3]]]],[11,"from","","",11,[[["invaliduri",4]]]],[11,"from","","",12,[[["invaliduri",3]]]],[11,"from","","",12,[[["error",4]]]],[11,"from","","",13,[[["error",3]]]],[11,"from","","",15,[[["error",3]]]],[11,"from","twitch_api2::tmi","",80,[[["error",3]]]],[11,"from","","",80,[[["error",3]]]],[11,"from","","",80,[[["box",3]]]],[11,"from","twitch_api2::client","",82,[[["invalidheadervalue",3]]]],[11,"from","","",82,[[["invalidheadername",3]]]],[11,"from","","",82,[[["parseerror",4]]]],[11,"clone","twitch_api2::types","",84,[[],["twitchcategory",3]]],[11,"clone","","",1,[[],["subscriptiontier",4]]],[11,"clone","","",2,[[],["broadcastertype",4]]],[11,"clone","","",3,[[],["usertype",4]]],[11,"clone","twitch_api2::helix::channels::get_channel_information","",20,[[],["getchannelinformationrequest",3]]],[11,"clone","","",19,[[],["channelinformation",3]]],[11,"clone","twitch_api2::helix::channels::modify_channel_information","",22,[[],["modifychannelinformationrequest",3]]],[11,"clone","","",21,[[],["modifychannelinformationbody",3]]],[11,"clone","","",25,[[],["modifychannelinformation",4]]],[11,"clone","twitch_api2::helix::channels::start_commercial","",26,[[],["commerciallength",4]]],[11,"clone","","",28,[[],["startcommercialrequest",3]]],[11,"clone","","",24,[[],["startcommercialbody",3]]],[11,"clone","","",23,[[],["startcommercial",3]]],[11,"clone","twitch_api2::helix::clips::get_clips","",30,[[],["getclipsrequest",3]]],[11,"clone","","",29,[[],["clip",3]]],[11,"clone","twitch_api2::helix::games::get_games","",32,[[],["getgamesrequest",3]]],[11,"clone","twitch_api2::helix::games::get_top_games","",31,[[],["gettopgamesrequest",3]]],[11,"clone","twitch_api2::helix::moderation::get_moderators","",42,[[],["getmoderatorsrequest",3]]],[11,"clone","","",87,[[],["moderators",3]]],[11,"clone","twitch_api2::helix::moderation::get_moderator_events","",40,[[],["getmoderatoreventsrequest",3]]],[11,"clone","","",41,[[],["moderatorevents",3]]],[11,"clone","twitch_api2::helix::moderation::get_banned_users","",39,[[],["getbannedusersrequest",3]]],[11,"clone","","",38,[[],["bannedusers",3]]],[11,"clone","twitch_api2::helix::moderation::get_banned_events","",37,[[],["getbannedeventsrequest",3]]],[11,"clone","","",36,[[],["bannedevents",3]]],[11,"clone","twitch_api2::helix::moderation::check_automod_status","",35,[[],["checkautomodstatusrequest",3]]],[11,"clone","","",34,[[],["checkautomodstatusbody",3]]],[11,"clone","","",33,[[],["checkautomodstatus",3]]],[11,"clone","twitch_api2::helix::search::search_categories","",43,[[],["searchcategoriesrequest",3]]],[11,"clone","twitch_api2::helix::search::search_channels","",44,[[],["searchchannelsrequest",3]]],[11,"clone","","",88,[[],["channels",3]]],[11,"clone","twitch_api2::helix::streams","",48,[[],["streamtype",4]]],[11,"clone","twitch_api2::helix::streams::get_streams","",45,[[],["getstreamsrequest",3]]],[11,"clone","","",46,[[],["stream",3]]],[11,"clone","twitch_api2::helix::streams::get_stream_tags","",47,[[],["getstreamtagsrequest",3]]],[11,"clone","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",50,[[],["getbroadcastersubscriptionsrequest",3]]],[11,"clone","","",49,[[],["broadcastersubscriptions",3]]],[11,"clone","twitch_api2::helix::tags","",53,[[],["autogenerated",4]]],[11,"clone","","",52,[[],["twitchtag",3]]],[11,"clone","twitch_api2::helix::tags::get_all_stream_tags","",51,[[],["getallstreamtagsrequest",3]]],[11,"clone","twitch_api2::helix::users::get_users","",54,[[],["getusersrequest",3]]],[11,"clone","","",55,[[],["user",3]]],[11,"clone","twitch_api2::helix::users::get_users_follows","",56,[[],["getusersfollowsrequest",3]]],[11,"clone","","",57,[[],["usersfollows",3]]],[11,"clone","twitch_api2::helix::users::delete_user_follows","",58,[[],["deleteuserfollowsrequest",3]]],[11,"clone","","",60,[[],["deleteuserfollows",4]]],[11,"clone","twitch_api2::helix::users::create_user_follows","",62,[[],["createuserfollowsrequest",3]]],[11,"clone","","",59,[[],["createuserfollowsbody",3]]],[11,"clone","","",61,[[],["createuserfollows",4]]],[11,"clone","twitch_api2::helix::videos","",64,[[],["sort",4]]],[11,"clone","","",65,[[],["videoperiod",4]]],[11,"clone","","",66,[[],["videotype",4]]],[11,"clone","","",67,[[],["videoprivacy",4]]],[11,"clone","twitch_api2::helix::videos::get_videos","",63,[[],["getvideosrequest",3]]],[11,"clone","","",89,[[],["video",3]]],[11,"clone","twitch_api2::helix","",74,[[],["helixclient",3]]],[11,"clone","twitch_api2::tmi","",81,[[],["tmiclient",3]]],[11,"clone","twitch_api2::client","",90,[[],["dummyhttpclient",3]]],[11,"clone","twitch_api2","",0,[[],["twitchclient",3]]],[11,"default","twitch_api2::helix::channels::start_commercial","",28,[[]]],[11,"default","twitch_api2::helix::moderation::check_automod_status","",34,[[],["checkautomodstatusbody",3]]],[11,"default","twitch_api2::helix::users::create_user_follows","",62,[[],["createuserfollowsrequest",3]]],[11,"default","","",59,[[],["createuserfollowsbody",3]]],[11,"default","twitch_api2::helix","",74,[[],["helixclient",3]]],[11,"default","twitch_api2::tmi","",81,[[],["tmiclient",3]]],[11,"default","twitch_api2::client","",90,[[],["dummyhttpclient",3]]],[11,"default","twitch_api2","",0,[[],["twitchclient",3]]],[11,"eq","twitch_api2::types","",84,[[["twitchcategory",3]]]],[11,"ne","","",84,[[["twitchcategory",3]]]],[11,"eq","","",1,[[["subscriptiontier",4]]]],[11,"ne","","",1,[[["subscriptiontier",4]]]],[11,"eq","","",2,[[["broadcastertype",4]]]],[11,"eq","","",3,[[["usertype",4]]]],[11,"eq","twitch_api2::helix::channels::get_channel_information","",20,[[["getchannelinformationrequest",3]]]],[11,"ne","","",20,[[["getchannelinformationrequest",3]]]],[11,"eq","","",19,[[["channelinformation",3]]]],[11,"ne","","",19,[[["channelinformation",3]]]],[11,"eq","twitch_api2::helix::channels::modify_channel_information","",22,[[["modifychannelinformationrequest",3]]]],[11,"ne","","",22,[[["modifychannelinformationrequest",3]]]],[11,"eq","","",21,[[["modifychannelinformationbody",3]]]],[11,"ne","","",21,[[["modifychannelinformationbody",3]]]],[11,"eq","","",25,[[["modifychannelinformation",4]]]],[11,"eq","twitch_api2::helix::channels::start_commercial","",26,[[["commerciallength",4]]]],[11,"eq","","",28,[[["startcommercialrequest",3]]]],[11,"eq","","",24,[[["startcommercialbody",3]]]],[11,"ne","","",24,[[["startcommercialbody",3]]]],[11,"eq","","",23,[[["startcommercial",3]]]],[11,"ne","","",23,[[["startcommercial",3]]]],[11,"eq","twitch_api2::helix::clips::get_clips","",30,[[["getclipsrequest",3]]]],[11,"ne","","",30,[[["getclipsrequest",3]]]],[11,"eq","","",29,[[["clip",3]]]],[11,"ne","","",29,[[["clip",3]]]],[11,"eq","twitch_api2::helix::games::get_games","",32,[[["getgamesrequest",3]]]],[11,"ne","","",32,[[["getgamesrequest",3]]]],[11,"eq","twitch_api2::helix::games::get_top_games","",31,[[["gettopgamesrequest",3]]]],[11,"ne","","",31,[[["gettopgamesrequest",3]]]],[11,"eq","twitch_api2::helix::moderation::get_moderators","",42,[[["getmoderatorsrequest",3]]]],[11,"ne","","",42,[[["getmoderatorsrequest",3]]]],[11,"eq","","",87,[[["moderators",3]]]],[11,"ne","","",87,[[["moderators",3]]]],[11,"eq","twitch_api2::helix::moderation::get_moderator_events","",40,[[["getmoderatoreventsrequest",3]]]],[11,"ne","","",40,[[["getmoderatoreventsrequest",3]]]],[11,"eq","","",41,[[["moderatorevents",3]]]],[11,"ne","","",41,[[["moderatorevents",3]]]],[11,"eq","twitch_api2::helix::moderation::get_banned_users","",39,[[["getbannedusersrequest",3]]]],[11,"ne","","",39,[[["getbannedusersrequest",3]]]],[11,"eq","","",38,[[["bannedusers",3]]]],[11,"ne","","",38,[[["bannedusers",3]]]],[11,"eq","twitch_api2::helix::moderation::get_banned_events","",37,[[["getbannedeventsrequest",3]]]],[11,"ne","","",37,[[["getbannedeventsrequest",3]]]],[11,"eq","","",36,[[["bannedevents",3]]]],[11,"ne","","",36,[[["bannedevents",3]]]],[11,"eq","twitch_api2::helix::moderation::check_automod_status","",35,[[["checkautomodstatusrequest",3]]]],[11,"ne","","",35,[[["checkautomodstatusrequest",3]]]],[11,"eq","","",34,[[["checkautomodstatusbody",3]]]],[11,"ne","","",34,[[["checkautomodstatusbody",3]]]],[11,"eq","","",33,[[["checkautomodstatus",3]]]],[11,"ne","","",33,[[["checkautomodstatus",3]]]],[11,"eq","twitch_api2::helix::search::search_categories","",43,[[["searchcategoriesrequest",3]]]],[11,"ne","","",43,[[["searchcategoriesrequest",3]]]],[11,"eq","twitch_api2::helix::search::search_channels","",44,[[["searchchannelsrequest",3]]]],[11,"ne","","",44,[[["searchchannelsrequest",3]]]],[11,"eq","","",88,[[["channels",3]]]],[11,"ne","","",88,[[["channels",3]]]],[11,"eq","twitch_api2::helix::streams","",48,[[["streamtype",4]]]],[11,"eq","twitch_api2::helix::streams::get_streams","",45,[[["getstreamsrequest",3]]]],[11,"ne","","",45,[[["getstreamsrequest",3]]]],[11,"eq","","",46,[[["stream",3]]]],[11,"ne","","",46,[[["stream",3]]]],[11,"eq","twitch_api2::helix::streams::get_stream_tags","",47,[[["getstreamtagsrequest",3]]]],[11,"ne","","",47,[[["getstreamtagsrequest",3]]]],[11,"eq","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",50,[[["getbroadcastersubscriptionsrequest",3]]]],[11,"ne","","",50,[[["getbroadcastersubscriptionsrequest",3]]]],[11,"eq","","",49,[[["broadcastersubscriptions",3]]]],[11,"ne","","",49,[[["broadcastersubscriptions",3]]]],[11,"eq","twitch_api2::helix::tags","",53,[[["autogenerated",4]]]],[11,"eq","","",52,[[["twitchtag",3]]]],[11,"ne","","",52,[[["twitchtag",3]]]],[11,"eq","twitch_api2::helix::tags::get_all_stream_tags","",51,[[["getallstreamtagsrequest",3]]]],[11,"ne","","",51,[[["getallstreamtagsrequest",3]]]],[11,"eq","twitch_api2::helix::users::get_users","",54,[[["getusersrequest",3]]]],[11,"ne","","",54,[[["getusersrequest",3]]]],[11,"eq","","",55,[[["user",3]]]],[11,"ne","","",55,[[["user",3]]]],[11,"eq","twitch_api2::helix::users::get_users_follows","",56,[[["getusersfollowsrequest",3]]]],[11,"ne","","",56,[[["getusersfollowsrequest",3]]]],[11,"eq","","",57,[[["usersfollows",3]]]],[11,"ne","","",57,[[["usersfollows",3]]]],[11,"eq","twitch_api2::helix::users::delete_user_follows","",58,[[["deleteuserfollowsrequest",3]]]],[11,"ne","","",58,[[["deleteuserfollowsrequest",3]]]],[11,"eq","","",60,[[["deleteuserfollows",4]]]],[11,"eq","twitch_api2::helix::users::create_user_follows","",62,[[["createuserfollowsrequest",3]]]],[11,"eq","","",59,[[["createuserfollowsbody",3]]]],[11,"ne","","",59,[[["createuserfollowsbody",3]]]],[11,"eq","","",61,[[["createuserfollows",4]]]],[11,"eq","twitch_api2::helix::videos","",64,[[["sort",4]]]],[11,"eq","","",65,[[["videoperiod",4]]]],[11,"eq","","",66,[[["videotype",4]]]],[11,"eq","","",67,[[["videoprivacy",4]]]],[11,"eq","twitch_api2::helix::videos::get_videos","",63,[[["getvideosrequest",3]]]],[11,"ne","","",63,[[["getvideosrequest",3]]]],[11,"eq","","",89,[[["video",3]]]],[11,"ne","","",89,[[["video",3]]]],[11,"eq","twitch_api2::helix","",4,[[["response",3]]]],[11,"ne","","",4,[[["response",3]]]],[11,"partial_cmp","twitch_api2::helix::tags","",53,[[["autogenerated",4]],[["option",4],["ordering",4]]]],[11,"fmt","twitch_api2::types","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::channels::get_channel_information","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::channels::modify_channel_information","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::channels::start_commercial","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::clips::get_clips","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::games::get_games","",32,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::games::get_top_games","",31,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_moderators","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_moderator_events","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_banned_users","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_banned_events","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::check_automod_status","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::search::search_categories","",43,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::search::search_channels","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::streams","",48,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::streams::get_streams","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::streams::get_stream_tags","",47,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::tags","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::tags::get_all_stream_tags","",51,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::users::get_users","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::users::get_users_follows","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::users::delete_user_follows","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::users::create_user_follows","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::videos","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::videos::get_videos","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::tmi","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::client","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::channels::start_commercial","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::tmi","",80,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::client","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"try_from","twitch_api2::helix::channels::modify_channel_information","",25,[[["statuscode",3]],["result",4]]],[11,"try_from","twitch_api2::helix::channels::start_commercial","",26,[[],["result",4]]],[11,"try_from","twitch_api2::helix::users::delete_user_follows","",60,[[["statuscode",3]],["result",4]]],[11,"try_from","twitch_api2::helix::users::create_user_follows","",61,[[["statuscode",3]],["result",4]]],[11,"source","twitch_api2::helix","",10,[[],[["error",8],["option",4]]]],[11,"source","","",11,[[],[["error",8],["option",4]]]],[11,"source","","",12,[[],[["error",8],["option",4]]]],[11,"source","","",13,[[],[["error",8],["option",4]]]],[11,"source","","",15,[[],[["error",8],["option",4]]]],[11,"source","twitch_api2::tmi","",80,[[],[["error",8],["option",4]]]],[11,"source","twitch_api2::client","",82,[[],[["error",8],["option",4]]]],[11,"custom","twitch_api2::helix","",5,[[["display",8]]]],[11,"serialize","twitch_api2::types","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","twitch_api2::helix::channels::get_channel_information","",20,[[],["result",4]]],[11,"serialize","twitch_api2::helix::channels::modify_channel_information","",22,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","twitch_api2::helix::channels::start_commercial","",26,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","twitch_api2::helix::clips::get_clips","",30,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","twitch_api2::helix::games::get_games","",32,[[],["result",4]]],[11,"serialize","twitch_api2::helix::games::get_top_games","",31,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_moderators","",42,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_moderator_events","",40,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_banned_users","",39,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_banned_events","",37,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::check_automod_status","",35,[[],["result",4]]],[11,"serialize","","",34,[[],["result",4]]],[11,"serialize","twitch_api2::helix::search::search_categories","",43,[[],["result",4]]],[11,"serialize","twitch_api2::helix::search::search_channels","",44,[[],["result",4]]],[11,"serialize","twitch_api2::helix::streams","",48,[[],["result",4]]],[11,"serialize","twitch_api2::helix::streams::get_streams","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","twitch_api2::helix::streams::get_stream_tags","",47,[[],["result",4]]],[11,"serialize","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",50,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","twitch_api2::helix::tags","",53,[[],["result",4]]],[11,"serialize","twitch_api2::helix::tags::get_all_stream_tags","",51,[[],["result",4]]],[11,"serialize","twitch_api2::helix::users::get_users","",54,[[],["result",4]]],[11,"serialize","twitch_api2::helix::users::get_users_follows","",56,[[],["result",4]]],[11,"serialize","twitch_api2::helix::users::delete_user_follows","",58,[[],["result",4]]],[11,"serialize","twitch_api2::helix::users::create_user_follows","",62,[[],["result",4]]],[11,"serialize","","",59,[[],["result",4]]],[11,"serialize","twitch_api2::helix::videos","",64,[[],["result",4]]],[11,"serialize","","",65,[[],["result",4]]],[11,"serialize","","",66,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","twitch_api2::helix::videos::get_videos","",63,[[],["result",4]]],[11,"serialize","twitch_api2::tmi","",75,[[],["result",4]]],[11,"serialize","","",76,[[],["result",4]]],[11,"serialize","","",77,[[],["result",4]]],[11,"serialize","","",78,[[],["result",4]]],[11,"deserialize","twitch_api2::types","",84,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::channels::get_channel_information","",20,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::channels::modify_channel_information","",22,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::channels::start_commercial","",26,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::clips::get_clips","",30,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::games::get_games","",32,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::games::get_top_games","",31,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_moderators","",42,[[],["result",4]]],[11,"deserialize","","",87,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_moderator_events","",40,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_banned_users","",39,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_banned_events","",37,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::check_automod_status","",35,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::search::search_categories","",43,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::search::search_channels","",44,[[],["result",4]]],[11,"deserialize","","",88,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::streams","",48,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::streams::get_streams","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::streams::get_stream_tags","",47,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",50,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::tags","",53,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::tags::get_all_stream_tags","",51,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::users::get_users","",54,[[],["result",4]]],[11,"deserialize","","",55,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::users::get_users_follows","",56,[[],["result",4]]],[11,"deserialize","","",57,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::users::delete_user_follows","",58,[[],["result",4]]],[11,"deserialize","","",60,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::users::create_user_follows","",62,[[],["result",4]]],[11,"deserialize","","",59,[[],["result",4]]],[11,"deserialize","","",61,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::videos","",64,[[],["result",4]]],[11,"deserialize","","",65,[[],["result",4]]],[11,"deserialize","","",66,[[],["result",4]]],[11,"deserialize","","",67,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::videos::get_videos","",63,[[],["result",4]]],[11,"deserialize","","",89,[[],["result",4]]],[11,"deserialize","twitch_api2::tmi","",75,[[],["result",4]]],[11,"deserialize","","",76,[[],["result",4]]],[11,"deserialize","","",77,[[],["result",4]]],[11,"deserialize","","",78,[[],["result",4]]]],"p":[[3,"TwitchClient"],[4,"SubscriptionTier"],[4,"BroadcasterType"],[4,"UserType"],[3,"Response"],[4,"SerializeError"],[13,"TopLevelNotSupported"],[13,"FieldNotSupported"],[13,"PairNotSupported"],[13,"ValueNotSupported"],[4,"ClientRequestError"],[4,"CreateRequestError"],[4,"InvalidUri"],[4,"HelixRequestGetError"],[13,"Error"],[4,"HelixRequestPostError"],[13,"Error"],[4,"HelixRequestDeleteError"],[13,"Error"],[3,"ChannelInformation"],[3,"GetChannelInformationRequest"],[3,"ModifyChannelInformationBody"],[3,"ModifyChannelInformationRequest"],[3,"StartCommercial"],[3,"StartCommercialBody"],[4,"ModifyChannelInformation"],[4,"CommercialLength"],[4,"CommercialLengthParseError"],[3,"StartCommercialRequest"],[3,"Clip"],[3,"GetClipsRequest"],[3,"GetTopGamesRequest"],[3,"GetGamesRequest"],[3,"CheckAutoModStatus"],[3,"CheckAutoModStatusBody"],[3,"CheckAutoModStatusRequest"],[3,"BannedEvents"],[3,"GetBannedEventsRequest"],[3,"BannedUsers"],[3,"GetBannedUsersRequest"],[3,"GetModeratorEventsRequest"],[3,"ModeratorEvents"],[3,"GetModeratorsRequest"],[3,"SearchCategoriesRequest"],[3,"SearchChannelsRequest"],[3,"GetStreamsRequest"],[3,"Stream"],[3,"GetStreamTagsRequest"],[4,"StreamType"],[3,"BroadcasterSubscriptions"],[3,"GetBroadcasterSubscriptionsRequest"],[3,"GetAllStreamTagsRequest"],[3,"TwitchTag"],[4,"AutoGenerated"],[3,"GetUsersRequest"],[3,"User"],[3,"GetUsersFollowsRequest"],[3,"UsersFollows"],[3,"DeleteUserFollowsRequest"],[3,"CreateUserFollowsBody"],[4,"DeleteUserFollows"],[4,"CreateUserFollows"],[3,"CreateUserFollowsRequest"],[3,"GetVideosRequest"],[4,"Sort"],[4,"VideoPeriod"],[4,"VideoType"],[4,"VideoPrivacy"],[8,"Request"],[8,"RequestPost"],[8,"RequestPatch"],[8,"RequestDelete"],[8,"RequestGet"],[8,"Paginated"],[3,"HelixClient"],[3,"GetChatters"],[3,"Chatters"],[3,"GetHosts"],[3,"Host"],[4,"HostsRequestId"],[4,"RequestError"],[3,"TMIClient"],[4,"SurfError"],[8,"Client"],[3,"TwitchCategory"],[3,"HelixRequestPutError"],[3,"HelixRequestPatchError"],[3,"Moderators"],[3,"Channels"],[3,"Video"],[3,"DummyHttpClient"]]},\
"twitch_oauth2":{"doc":"github crates-io docs-rs","i":[[3,"AppAccessToken","twitch_oauth2","An App Access Token from the OAuth client credentials flow",null,null],[3,"UserToken","","An User Token from the OAuth implicit code flow or OAuth…",null,null],[3,"ValidatedToken","","Token validation returned from…",null,null],[12,"client_id","","Client ID associated with the token. Twitch requires this…",0,null],[12,"login","","Username associated with the token",0,null],[12,"user_id","","User ID associated with the token",0,null],[12,"scopes","","Scopes attached to the token.",0,null],[4,"Scope","","Scopes for twitch.",null,null],[13,"AnalyticsReadExtensions","","View analytics data for your extensions.",1,null],[13,"AnalyticsReadGames","","View analytics data for your games.",1,null],[13,"BitsRead","","View bits information for your channel.",1,null],[13,"ChannelSubscriptions","","[DEPRECATED] Read all subscribers to your channel.",1,null],[13,"ChannelEditCommercial","","Start a commercial on authorized channels",1,null],[13,"ChannelManageBroadcast","","Manage your channel’s broadcast configuration, including…",1,null],[13,"ChannelManageExtension","","Manage your channel’s extension configuration, including…",1,null],[13,"ChannelModerate","","Perform moderation actions in a channel",1,null],[13,"ChannelReadHypeTrain","","Read hype trains",1,null],[13,"ChannelReadRedemptions","","View your channel points custom reward redemptions",1,null],[13,"ChannelReadSubscriptions","","Get a list of all subscribers to your channel and check if…",1,null],[13,"ChatEdit","","Send live Stream Chat and Rooms messages",1,null],[13,"ChatRead","","View live Stream Chat and Rooms messages",1,null],[13,"ClipsEdit","","Create and edit clips as a specific user.",1,null],[13,"ModerationRead","","View your channel\'s moderation data including Moderators,…",1,null],[13,"UserEdit","","Manage a user object.",1,null],[13,"UserEditBroadcast","","Edit your channel\'s broadcast configuration, including…",1,null],[13,"UserEditFollows","","Edit your follows.",1,null],[13,"UserReadBroadcast","","View your broadcasting configuration, including extension…",1,null],[13,"UserReadEmail","","Read authorized user\'s email address.",1,null],[13,"UserReadStreamKey","","Read authorized user’s stream key.",1,null],[13,"WhispersEdit","","Send whisper messages.",1,null],[13,"WhispersRead","","View your whisper messages.",1,null],[13,"Other","","Other scope that is not implemented.",1,null],[5,"validate_token","","Validate this token.",null,[[["accesstoken",3]]]],[5,"revoke_token","","Revoke the token.",null,[[["clientid",3],["accesstoken",3]]]],[5,"refresh_token","","Refresh the token, call if it has expired.",null,[[["clientid",3],["clientsecret",3],["refreshtoken",3]]]],[0,"client","","Provides different http clients",null,null],[5,"reqwest_http_client","twitch_oauth2::client","Asynchronous HTTP client.",null,[[["httprequest",3]]]],[4,"SurfError","","Possible errors for [surf_http_client][http_client]",null,null],[13,"Surf","","surf failed to do the request: {0}",2,null],[13,"InvalidHeaderValue","","could not construct header value",2,null],[13,"InvalidHeaderName","","could not construct header name",2,null],[5,"surf_http_client","","Asynchronous HTTP client using [Surf][surf::Client]",null,[[["httprequest",3]]]],[0,"id","twitch_oauth2","Representation of oauth2 flow in `id.twitch.tv`",null,null],[3,"TwitchTokenResponse","twitch_oauth2::id","Twitch\'s representation of the oauth flow.",null,null],[12,"access_token","","Access token",3,null],[12,"token_type","","Token type",3,null],[12,"expires_in","","Time (in seconds) until token expires",3,null],[12,"refresh_token","","Token that can be used to refresh",3,null],[12,"scopes","","Scopes attached to token",3,null],[12,"extra_fields","","Extras",3,null],[3,"TwitchTokenErrorResponse","","Twitch\'s representation of the oauth flow for errors",null,null],[12,"status","","Status code of error",4,null],[12,"message","","Message attached to error",4,null],[6,"TwitchClient","","Client for Twitch OAuth2",null,null],[0,"scopes","twitch_oauth2","Module for all possible scopes in twitch.",null,null],[4,"Scope","twitch_oauth2::scopes","Scopes for twitch.",null,null],[13,"AnalyticsReadExtensions","","View analytics data for your extensions.",1,null],[13,"AnalyticsReadGames","","View analytics data for your games.",1,null],[13,"BitsRead","","View bits information for your channel.",1,null],[13,"ChannelSubscriptions","","[DEPRECATED] Read all subscribers to your channel.",1,null],[13,"ChannelEditCommercial","","Start a commercial on authorized channels",1,null],[13,"ChannelManageBroadcast","","Manage your channel’s broadcast configuration, including…",1,null],[13,"ChannelManageExtension","","Manage your channel’s extension configuration, including…",1,null],[13,"ChannelModerate","","Perform moderation actions in a channel",1,null],[13,"ChannelReadHypeTrain","","Read hype trains",1,null],[13,"ChannelReadRedemptions","","View your channel points custom reward redemptions",1,null],[13,"ChannelReadSubscriptions","","Get a list of all subscribers to your channel and check if…",1,null],[13,"ChatEdit","","Send live Stream Chat and Rooms messages",1,null],[13,"ChatRead","","View live Stream Chat and Rooms messages",1,null],[13,"ClipsEdit","","Create and edit clips as a specific user.",1,null],[13,"ModerationRead","","View your channel\'s moderation data including Moderators,…",1,null],[13,"UserEdit","","Manage a user object.",1,null],[13,"UserEditBroadcast","","Edit your channel\'s broadcast configuration, including…",1,null],[13,"UserEditFollows","","Edit your follows.",1,null],[13,"UserReadBroadcast","","View your broadcasting configuration, including extension…",1,null],[13,"UserReadEmail","","Read authorized user\'s email address.",1,null],[13,"UserReadStreamKey","","Read authorized user’s stream key.",1,null],[13,"WhispersEdit","","Send whisper messages.",1,null],[13,"WhispersRead","","View your whisper messages.",1,null],[13,"Other","","Other scope that is not implemented.",1,null],[11,"all","","Get a vec of all defined twitch [Scopes][Scope].",1,[[],[["vec",3],["scope",4]]]],[11,"parse","","Make a scope from string",1,[[],["scope",4]]],[11,"as_oauth_scope","","Get [Scope] as an oauth2 Scope",1,[[],["scope",3]]],[0,"tokens","twitch_oauth2","Twitch token types",null,null],[3,"AppAccessToken","twitch_oauth2::tokens","An App Access Token from the OAuth client credentials flow",null,null],[3,"UserToken","","An User Token from the OAuth implicit code flow or OAuth…",null,null],[3,"ValidatedToken","","Token validation returned from…",null,null],[12,"client_id","","Client ID associated with the token. Twitch requires this…",0,null],[12,"login","","Username associated with the token",0,null],[12,"user_id","","User ID associated with the token",0,null],[12,"scopes","","Scopes attached to the token.",0,null],[11,"from_existing_unchecked","twitch_oauth2","Assemble token without checks.",5,[[["option",4],["option",4],["accesstoken",3],["vec",3],["string",3]],["appaccesstoken",3]]],[11,"from_existing","","Assemble token and validate it. Retrieves `client_id` and…",5,[[["accesstoken",3],["clientsecret",3]]]],[11,"get_app_access_token","","Generate app access token via OAuth client credentials flow",5,[[["clientid",3],["scope",4],["vec",3],["clientsecret",3]]]],[0,"errors","twitch_oauth2::tokens","Errors",null,null],[4,"TokenError","twitch_oauth2::tokens::errors","General errors for talking with twitch, currently only…",null,null],[13,"Request","","request for token failed. {0}",6,null],[13,"ParseError","","could not parse url",6,null],[13,"ValidationError","","could not get validation for token",6,null],[4,"ValidationError","","Errors for [validate_token][crate::validate_token]",null,null],[13,"DeserializeError","","deserializations failed",7,null],[13,"NotAuthorized","","token is not authorized for use",7,null],[13,"TwitchError","","twitch returned an unexpected status: {0}",7,null],[13,"Request","","failed to request validation: {0}",7,null],[4,"RevokeTokenError","","Errors for [revoke_token][crate::revoke_token]",null,null],[13,"BadRequest","","400 Bad Request: {0}",8,null],[13,"RequestError","","failed to do revokation: {0}",8,null],[13,"Other","","got unexpected return: {0:?}",8,null],[4,"RefreshTokenError","","Errors for…",null,null],[13,"RequestError","","request for token failed. {0}",9,null],[13,"ParseError","","could not parse url",9,null],[13,"NoRefreshToken","","no refresh token found",9,null],[11,"from_existing_unchecked","twitch_oauth2","Assemble token without checks.",10,[[["option",4],["option",4],["vec",3],["string",3]],["usertoken",3]]],[11,"from_existing","","Assemble token and validate it. Retrieves `login`,…",10,[[["accesstoken",3]]]],[8,"TwitchToken","twitch_oauth2::tokens","Trait for twitch tokens to get fields and generalize over…",null,null],[10,"client_id","","Get the client-id. Twitch requires this in all helix api…",11,[[],["clientid",3]]],[10,"token","","Get the [AccessToken] for authenticating",11,[[],["accesstoken",3]]],[10,"login","","Get the username associated to this token",11,[[],["option",4]]],[10,"refresh_token","","Refresh this token, changing the token to a newer one",11,[[],[["pin",3],["box",3]]]],[10,"expires","","Get instant when token will expire.",11,[[],[["option",4],["instant",3]]]],[10,"scopes","","Retrieve scopes attached to the token",11,[[],["option",4]]],[11,"validate_token","","Validate this token. Should be checked on regularly,…",11,[[],[["box",3],["pin",3]]]],[11,"revoke_token","","Revoke the token. See…",11,[[],[["pin",3],["box",3]]]],[8,"TwitchToken","twitch_oauth2","Trait for twitch tokens to get fields and generalize over…",null,null],[10,"client_id","","Get the client-id. Twitch requires this in all helix api…",11,[[],["clientid",3]]],[10,"token","","Get the [AccessToken] for authenticating",11,[[],["accesstoken",3]]],[10,"login","","Get the username associated to this token",11,[[],["option",4]]],[10,"refresh_token","","Refresh this token, changing the token to a newer one",11,[[],[["pin",3],["box",3]]]],[10,"expires","","Get instant when token will expire.",11,[[],[["option",4],["instant",3]]]],[10,"scopes","","Retrieve scopes attached to the token",11,[[],["option",4]]],[11,"validate_token","","Validate this token. Should be checked on regularly,…",11,[[],[["box",3],["pin",3]]]],[11,"revoke_token","","Revoke the token. See…",11,[[],[["pin",3],["box",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","twitch_oauth2::tokens","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","twitch_oauth2::scopes","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","twitch_oauth2::client","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","twitch_oauth2::id","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","twitch_oauth2::tokens::errors","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"client_id","twitch_oauth2","",5,[[],["clientid",3]]],[11,"token","","",5,[[],["accesstoken",3]]],[11,"login","","",5,[[],["option",4]]],[11,"refresh_token","","",5,[[],[["pin",3],["box",3]]]],[11,"expires","","",5,[[],[["option",4],["instant",3]]]],[11,"scopes","","",5,[[],["option",4]]],[11,"client_id","","",10,[[],["clientid",3]]],[11,"token","","",10,[[],["accesstoken",3]]],[11,"login","","",10,[[],["option",4]]],[11,"refresh_token","","",10,[[],[["pin",3],["box",3]]]],[11,"expires","","",10,[[],[["option",4],["instant",3]]]],[11,"scopes","","",10,[[],["option",4]]],[11,"from","twitch_oauth2::client","",2,[[["invalidheadervalue",3]]]],[11,"from","","",2,[[["invalidheadername",3]]]],[11,"from","twitch_oauth2::scopes","",1,[[["scope",3]]]],[11,"from","","",1,[[["string",3]]]],[11,"from","twitch_oauth2::tokens::errors","",6,[[["parseerror",4]]]],[11,"from","","",6,[[["validationerror",4]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",9,[[["parseerror",4]]]],[11,"clone","twitch_oauth2::id","",3,[[],["twitchtokenresponse",3]]],[11,"clone","","",4,[[],["twitchtokenerrorresponse",3]]],[11,"clone","twitch_oauth2::scopes","",1,[[],["scope",4]]],[11,"clone","twitch_oauth2","",5,[[],["appaccesstoken",3]]],[11,"clone","","",10,[[],["usertoken",3]]],[11,"clone","twitch_oauth2::tokens","",0,[[],["validatedtoken",3]]],[11,"eq","twitch_oauth2::scopes","",1,[[["scope",4]]]],[11,"ne","","",1,[[["scope",4]]]],[11,"fmt","twitch_oauth2::client","",2,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::id","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::scopes","",1,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2","",5,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::tokens::errors","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2","",10,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::tokens","",0,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::client","",2,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::id","",4,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::scopes","",1,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::tokens::errors","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"source","twitch_oauth2::client","",2,[[],[["error",8],["option",4]]]],[11,"source","twitch_oauth2::tokens::errors","",6,[[],[["error",8],["option",4]]]],[11,"source","","",7,[[],[["error",8],["option",4]]]],[11,"source","","",8,[[],[["error",8],["option",4]]]],[11,"source","","",9,[[],[["error",8],["option",4]]]],[11,"deserialize","twitch_oauth2::id","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","twitch_oauth2::scopes","",1,[[],["result",4]]],[11,"deserialize","twitch_oauth2::tokens","",0,[[],["result",4]]],[11,"serialize","twitch_oauth2::id","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","twitch_oauth2::scopes","",1,[[],["result",4]]],[11,"access_token","twitch_oauth2::id","",3,[[],["accesstoken",3]]],[11,"token_type","","",3,[[]]],[11,"expires_in","","",3,[[],[["option",4],["duration",3]]]],[11,"refresh_token","","",3,[[],[["option",4],["refreshtoken",3]]]],[11,"scopes","","",3,[[],[["option",4],["vec",3]]]]],"p":[[3,"ValidatedToken"],[4,"Scope"],[4,"SurfError"],[3,"TwitchTokenResponse"],[3,"TwitchTokenErrorResponse"],[3,"AppAccessToken"],[4,"TokenError"],[4,"ValidationError"],[4,"RevokeTokenError"],[4,"RefreshTokenError"],[3,"UserToken"],[8,"TwitchToken"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);