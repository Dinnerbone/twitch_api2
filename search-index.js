var searchIndex = JSON.parse('{\
"twitch_api2":{"doc":"github crates-io docs-rs","i":[[3,"HelixClient","twitch_api2","Client for Helix or the New Twitch API",null,null],[3,"TMIClient","","Client for the twitch TMI endpoint, almost entirely…",null,null],[3,"TwitchClient","","Client for Twitch APIs.",null,null],[12,"helix","","Helix endpoint. See [helix]",0,null],[12,"tmi","","TMI endpoint. See [tmi]",0,null],[0,"helix","","Helix endpoints or the New Twitch API",null,null],[3,"HelixClient","twitch_api2::helix","Client for Helix or the New Twitch API",null,null],[3,"Response","","Response retrieved from endpoint. Data is the type in…",null,null],[12,"data","","Twitch\'s response field for `data`.",1,null],[12,"pagination","","A cursor value, to be used in a subsequent request to…",1,null],[12,"request","","The request that was sent, used for [Paginated]",1,null],[3,"HelixRequestPutError","","helix returned error {status:?} - {error}: {message:?}…",null,null],[3,"HelixRequestPatchError","","helix returned error {status:?}: {message:?} when calling…",null,null],[4,"SerializeError","","Errors from the query serializer",null,null],[13,"Custom","","{0}",2,null],[13,"TopLevelNotSupported","","serializer only supports structs and maps on top-level",2,null],[12,"location","twitch_api2::helix::SerializeError","Location where this was triggered",3,null],[13,"FieldNotSupported","twitch_api2::helix","field serializer only supports strings, sequences,…",2,null],[12,"location","twitch_api2::helix::SerializeError","Location where this was triggered",4,null],[13,"PairNotSupported","twitch_api2::helix","pair serializer only supports strings, integers, floats,…",2,null],[12,"location","twitch_api2::helix::SerializeError","Location where this was triggered",5,null],[13,"ValueNotSupported","twitch_api2::helix","value serializer only supports primitive types",2,null],[12,"location","twitch_api2::helix::SerializeError","Location where this was triggered",6,null],[4,"ClientRequestError","twitch_api2::helix","Errors for [HelixClient::req_get] and similar functions.",null,null],[13,"RequestError","","request failed from reqwests side",7,null],[13,"NoPage","","no pagination found",7,null],[13,"CreateRequestError","","Could not create request",7,null],[13,"HelixRequestGetError","","Could not parse GET response",7,null],[13,"HelixRequestPutError","","Could not parse PUT response",7,null],[13,"HelixRequestPostError","","Could not parse POST response",7,null],[13,"HelixRequestPatchError","","Could not parse PATCH response",7,null],[13,"HelixRequestDeleteError","","Could not parse DELETE response",7,null],[13,"Custom","","{0}",7,null],[4,"CreateRequestError","","Could not create request",null,null],[13,"HttpError","","http crate returned an error",8,null],[13,"SerializeError","","serialization of body failed",8,null],[13,"InvalidUri","","Could not assemble URI for request",8,null],[13,"Custom","","{0}",8,null],[4,"InvalidUri","","Errors that can happen when creating [http::Uri] for…",null,null],[13,"UriParseError","","URI could not be parsed",9,null],[13,"QuerySerializeError","","Could not serialize request to query",9,null],[4,"HelixRequestGetError","","Could not parse GET response",null,null],[13,"Error","","helix returned error {status:?} - {error}: {message:?}…",10,null],[12,"error","twitch_api2::helix::HelixRequestGetError","Error message related to status code",11,null],[12,"status","","Status code of error, usually 400-499",11,null],[12,"message","","Error message from Twitch",11,null],[12,"uri","","URI to the endpoint",11,null],[13,"Utf8Error","twitch_api2::helix","could not parse body as utf8: {1}",10,null],[13,"DeserializeError","","deserialization failed when processing request result",10,null],[4,"HelixRequestPostError","","Could not parse POST response",null,null],[13,"Error","","helix returned error {status:?} - {error}: {message:?}…",12,null],[12,"error","twitch_api2::helix::HelixRequestPostError","Error message related to status code",13,null],[12,"status","","Status code of error, usually 400-499",13,null],[12,"message","","Error message from Twitch",13,null],[12,"uri","","URI to the endpoint",13,null],[12,"body","","Body sent with POST",13,null],[13,"Utf8Error","twitch_api2::helix","could not parse body as utf8: {1}",12,null],[13,"DeserializeError","","deserialization failed when processing request result",12,null],[4,"HelixRequestDeleteError","","Could not parse DELETE response",null,null],[13,"Error","","helix returned error {status:?}- {error}: {message:?} when…",14,null],[12,"error","twitch_api2::helix::HelixRequestDeleteError","Error message related to status code",15,null],[12,"status","","Status code of error, usually 400-499",15,null],[12,"message","","Error message from Twitch",15,null],[12,"uri","","URI to the endpoint",15,null],[13,"Utf8Error","twitch_api2::helix","could not parse body as utf8: {1}",14,null],[0,"channels","","Endpoints regarding channels",null,null],[3,"ChannelInformation","twitch_api2::helix::channels","Return Values for Get Channel Information",null,null],[12,"broadcaster_id","","Twitch User ID of this channel owner",16,null],[12,"game_id","","Current game ID being played on the channel",16,null],[12,"broadcaster_language","","Language of the channel",16,null],[12,"title","","Title of the stream",16,null],[12,"description","","Description of the stream",16,null],[3,"GetChannelInformationRequest","","Query Parameters for Get Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",17,null],[3,"ModifyChannelInformationBody","","Body Parameters for Modify Channel Information",null,null],[12,"game_id","","Current game ID being played on the channel",18,null],[12,"broadcaster_language","","Language of the channel",18,null],[12,"title","","Title of the stream",18,null],[3,"ModifyChannelInformationRequest","","Query Parameters for Modify Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",19,null],[3,"StartCommercial","","Return Values for Start Commercial",null,null],[12,"length","","Length of the triggered commercial",20,null],[12,"message","","Provides contextual information on why the request failed",20,null],[12,"retry_after","","Seconds until the next commercial can be served on this…",20,null],[3,"StartCommercialBody","","Body Parameters for Start Commercial",null,null],[12,"broadcaster_id","","ID of the channel requesting a commercial",21,null],[12,"length","","Desired length of the commercial in seconds. Valid options…",21,null],[3,"StartCommercialRequest","","Query Parameters for Start Commercial",null,null],[4,"ModifyChannelInformation","","Return Values for Modify Channel Information",null,null],[13,"Success","","204 - Channel/Stream updated successfully",22,null],[13,"MissingQuery","","400 - Missing Query Parameter",22,null],[13,"InternalServerError","","Internal Server Error; Failed to update channel",22,null],[4,"CommercialLength","","Length of the commercial in seconds",null,null],[13,"Length30","","30s",23,null],[13,"Length60","","60s",23,null],[13,"Length90","","90s",23,null],[13,"Length120","","120s",23,null],[13,"Length150","","150s",23,null],[13,"Length180","","180s",23,null],[0,"get_channel_information","","Gets channel information for users.…",null,null],[3,"GetChannelInformationRequest","twitch_api2::helix::channels::get_channel_information","Query Parameters for Get Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",17,null],[3,"ChannelInformation","","Return Values for Get Channel Information",null,null],[12,"broadcaster_id","","Twitch User ID of this channel owner",16,null],[12,"game_id","","Current game ID being played on the channel",16,null],[12,"broadcaster_language","","Language of the channel",16,null],[12,"title","","Title of the stream",16,null],[12,"description","","Description of the stream",16,null],[11,"builder","","Create a builder for building…",17,[[],["getchannelinformationrequestbuilder",3]]],[0,"modify_channel_information","twitch_api2::helix::channels","Modify channel information for users.…",null,null],[3,"ModifyChannelInformationRequest","twitch_api2::helix::channels::modify_channel_information","Query Parameters for Modify Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",19,null],[3,"ModifyChannelInformationBody","","Body Parameters for Modify Channel Information",null,null],[12,"game_id","","Current game ID being played on the channel",18,null],[12,"broadcaster_language","","Language of the channel",18,null],[12,"title","","Title of the stream",18,null],[4,"ModifyChannelInformation","","Return Values for Modify Channel Information",null,null],[13,"Success","","204 - Channel/Stream updated successfully",22,null],[13,"MissingQuery","","400 - Missing Query Parameter",22,null],[13,"InternalServerError","","Internal Server Error; Failed to update channel",22,null],[11,"builder","","Create a builder for building…",19,[[],["modifychannelinformationrequestbuilder",3]]],[11,"builder","","Create a builder for building…",18,[[],["modifychannelinformationbodybuilder",3]]],[0,"start_commercial","twitch_api2::helix::channels","Starts a commercial on a specified channel.…",null,null],[3,"StartCommercialRequest","twitch_api2::helix::channels::start_commercial","Query Parameters for Start Commercial",null,null],[3,"StartCommercialBody","","Body Parameters for Start Commercial",null,null],[12,"broadcaster_id","","ID of the channel requesting a commercial",21,null],[12,"length","","Desired length of the commercial in seconds. Valid options…",21,null],[3,"StartCommercial","","Return Values for Start Commercial",null,null],[12,"length","","Length of the triggered commercial",20,null],[12,"message","","Provides contextual information on why the request failed",20,null],[12,"retry_after","","Seconds until the next commercial can be served on this…",20,null],[4,"CommercialLength","","Length of the commercial in seconds",null,null],[13,"Length30","","30s",23,null],[13,"Length60","","60s",23,null],[13,"Length90","","90s",23,null],[13,"Length120","","120s",23,null],[13,"Length150","","150s",23,null],[13,"Length180","","180s",23,null],[4,"CommercialLengthParseError","","Error for the `TryFrom` on [CommercialLength]",null,null],[13,"InvalidLength","","invalid length of {0}",24,null],[11,"new","","Create a new [StartCommercialRequest]",25,[[]]],[11,"builder","","Create a builder for building `StartCommercialBody`. On…",21,[[],["startcommercialbodybuilder",3]]],[0,"clips","twitch_api2::helix","Endpoints regarding clips",null,null],[3,"Clip","twitch_api2::helix::clips","Return Values for Get Clips",null,null],[12,"broadcaster_id","","User ID of the stream from which the clip was created.",26,null],[12,"broadcaster_name","","Display name corresponding to broadcaster_id.",26,null],[12,"created_at","","Date when the clip was created.",26,null],[12,"creator_id","","ID of the user who created the clip.",26,null],[12,"creator_name","","Display name corresponding to creator_id.",26,null],[12,"embed_url","","URL to embed the clip.",26,null],[12,"game_id","","ID of the game assigned to the stream when the clip was…",26,null],[12,"id","","ID of the clip being queried.",26,null],[12,"language","","Language of the stream from which the clip was created.",26,null],[12,"thumbnail_url","","URL of the clip thumbnail.",26,null],[12,"title","","Title of the clip.",26,null],[12,"url","","URL where the clip can be viewed.",26,null],[12,"video_id","","ID of the video from which the clip was created.",26,null],[12,"view_count","","Number of times the clip has been viewed.",26,null],[3,"GetClipsRequest","","Query Parameters for Get Clips",null,null],[12,"broadcaster_id","","ID of the broadcaster for whom clips are returned. The…",27,null],[12,"game_id","","ID of the game for which clips are returned. The number of…",27,null],[12,"id","","ID of the clip being queried. Limit: 100.",27,null],[12,"after","","Cursor for forward pagination: tells the server where to…",27,null],[12,"before","","Cursor for backward pagination: tells the server where to…",27,null],[12,"ended_at","","Ending date/time for returned clips, in RFC3339 format.…",27,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",27,null],[12,"started_at","","Starting date/time for returned clips, in RFC3339 format.…",27,null],[0,"get_clips","","Gets clip information by clip ID (one or more),…",null,null],[3,"GetClipsRequest","twitch_api2::helix::clips::get_clips","Query Parameters for Get Clips",null,null],[12,"broadcaster_id","","ID of the broadcaster for whom clips are returned. The…",27,null],[12,"game_id","","ID of the game for which clips are returned. The number of…",27,null],[12,"id","","ID of the clip being queried. Limit: 100.",27,null],[12,"after","","Cursor for forward pagination: tells the server where to…",27,null],[12,"before","","Cursor for backward pagination: tells the server where to…",27,null],[12,"ended_at","","Ending date/time for returned clips, in RFC3339 format.…",27,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",27,null],[12,"started_at","","Starting date/time for returned clips, in RFC3339 format.…",27,null],[3,"Clip","","Return Values for Get Clips",null,null],[12,"broadcaster_id","","User ID of the stream from which the clip was created.",26,null],[12,"broadcaster_name","","Display name corresponding to broadcaster_id.",26,null],[12,"created_at","","Date when the clip was created.",26,null],[12,"creator_id","","ID of the user who created the clip.",26,null],[12,"creator_name","","Display name corresponding to creator_id.",26,null],[12,"embed_url","","URL to embed the clip.",26,null],[12,"game_id","","ID of the game assigned to the stream when the clip was…",26,null],[12,"id","","ID of the clip being queried.",26,null],[12,"language","","Language of the stream from which the clip was created.",26,null],[12,"thumbnail_url","","URL of the clip thumbnail.",26,null],[12,"title","","Title of the clip.",26,null],[12,"url","","URL where the clip can be viewed.",26,null],[12,"video_id","","ID of the video from which the clip was created.",26,null],[12,"view_count","","Number of times the clip has been viewed.",26,null],[11,"builder","","Create a builder for building `GetClipsRequest`. On the…",27,[[],["getclipsrequestbuilder",3]]],[0,"games","twitch_api2::helix","Endpoints regarding games",null,null],[3,"GetGamesRequest","twitch_api2::helix::games","Query Parameters for Get Games",null,null],[3,"GetTopGamesRequest","","Query Parameters for Get Games",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",28,null],[12,"before","","Cursor for backward pagination: tells the server where to…",28,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",28,null],[3,"TwitchGame","","A game as defined by Twitch",null,null],[0,"get_games","","Gets game information by game ID or name. `get-games`",null,null],[3,"GetGamesRequest","twitch_api2::helix::games::get_games","Query Parameters for Get Games",null,null],[6,"Game","","Return Values for Get Games",null,null],[11,"builder","","Create a builder for building `GetGamesRequest`. On the…",29,[[],["getgamesrequestbuilder",3]]],[0,"get_top_games","twitch_api2::helix::games","Gets games sorted by number of current viewers on Twitch,…",null,null],[3,"GetTopGamesRequest","twitch_api2::helix::games::get_top_games","Query Parameters for Get Games",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",28,null],[12,"before","","Cursor for backward pagination: tells the server where to…",28,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",28,null],[6,"Game","","Return Values for Get Games",null,null],[11,"builder","","Create a builder for building `GetTopGamesRequest`. On the…",28,[[],["gettopgamesrequestbuilder",3]]],[0,"moderation","twitch_api2::helix","Endpoints regarding moderation",null,null],[3,"CheckAutoModStatus","twitch_api2::helix::moderation","Return Values for Check AutoMod Status",null,null],[12,"msg_id","","The msg_id passed in the body of the POST message. Maps…",30,null],[12,"is_permitted","","Indicates if this message meets AutoMod requirements.",30,null],[3,"CheckAutoModStatusBody","","Body Parameters for Check AutoMod Status",null,null],[12,"msg_id","","Developer-generated identifier for mapping messages to…",31,null],[12,"msg_text","","Message text.",31,null],[12,"user_id","","User ID of the sender.",31,null],[3,"CheckAutoModStatusRequest","","Query Parameters for Check AutoMod Status",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",32,null],[3,"BannedEvents","","Return Values for Get Banned Events",null,null],[12,"id","","Event ID",33,null],[12,"event_type","","Displays `moderation.user.ban` or `moderation.user.unban`",33,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",33,null],[12,"version","","Returns the version of the endpoint.",33,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",33,null],[3,"GetBannedEventsRequest","","Query Parameters for Get Banned Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",34,null],[12,"user_id","","Filters the results and only returns a status object for…",34,null],[12,"after","","Cursor for forward pagination: tells the server where to…",34,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",34,null],[3,"BannedUsers","","Return Values for Get Banned Users",null,null],[12,"user_id","","User ID of a user who has been banned.",35,null],[12,"user_name","","Display name of a user who has been banned.",35,null],[12,"expires_at","","RFC3339 formatted timestamp for timeouts; empty string for…",35,null],[3,"GetBannedUsersRequest","","Query Parameters for Get Banned Users",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",36,null],[12,"user_id","","Filters the results and only returns a status object for…",36,null],[12,"after","","Cursor for forward pagination: tells the server where to…",36,null],[3,"GetModeratorEventsRequest","","Query Parameters for Get Moderators Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",37,null],[12,"user_id","","Filters the results and only returns a status object for…",37,null],[12,"after","","Cursor for forward pagination: tells the server where to…",37,null],[3,"ModeratorEvents","","Return Values for Get Moderators Events",null,null],[12,"id","","Event ID",38,null],[12,"event_type","","Displays `moderation.moderator.add` or…",38,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",38,null],[12,"version","","Returns the version of the endpoint.",38,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",38,null],[3,"GetModeratorsRequest","","Query Parameters for Get Moderators",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",39,null],[12,"after","","Cursor for forward pagination: tells the server where to…",39,null],[3,"Moderators","","Return Values for Get Moderators",null,null],[0,"get_moderators","","Returns all moderators in a channel. `get-moderators`",null,null],[3,"GetModeratorsRequest","twitch_api2::helix::moderation::get_moderators","Query Parameters for Get Moderators",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",39,null],[12,"after","","Cursor for forward pagination: tells the server where to…",39,null],[3,"Moderators","","Return Values for Get Moderators",null,null],[11,"builder","","Create a builder for building `GetModeratorsRequest`. On…",39,[[],["getmoderatorsrequestbuilder",3]]],[0,"get_moderator_events","twitch_api2::helix::moderation","Returns a list of moderators or users added and removed as…",null,null],[3,"GetModeratorEventsRequest","twitch_api2::helix::moderation::get_moderator_events","Query Parameters for Get Moderators Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",37,null],[12,"user_id","","Filters the results and only returns a status object for…",37,null],[12,"after","","Cursor for forward pagination: tells the server where to…",37,null],[3,"ModeratorEvents","","Return Values for Get Moderators Events",null,null],[12,"id","","Event ID",38,null],[12,"event_type","","Displays `moderation.moderator.add` or…",38,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",38,null],[12,"version","","Returns the version of the endpoint.",38,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",38,null],[11,"builder","","Create a builder for building `GetModeratorEventsRequest`.…",37,[[],["getmoderatoreventsrequestbuilder",3]]],[0,"get_banned_users","twitch_api2::helix::moderation","Returns all banned and timed-out users in a channel.…",null,null],[3,"GetBannedUsersRequest","twitch_api2::helix::moderation::get_banned_users","Query Parameters for Get Banned Users",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",36,null],[12,"user_id","","Filters the results and only returns a status object for…",36,null],[12,"after","","Cursor for forward pagination: tells the server where to…",36,null],[3,"BannedUsers","","Return Values for Get Banned Users",null,null],[12,"user_id","","User ID of a user who has been banned.",35,null],[12,"user_name","","Display name of a user who has been banned.",35,null],[12,"expires_at","","RFC3339 formatted timestamp for timeouts; empty string for…",35,null],[11,"builder","","Create a builder for building `GetBannedUsersRequest`. On…",36,[[],["getbannedusersrequestbuilder",3]]],[0,"get_banned_events","twitch_api2::helix::moderation","Returns all banned and timed-out users in a channel.…",null,null],[3,"GetBannedEventsRequest","twitch_api2::helix::moderation::get_banned_events","Query Parameters for Get Banned Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",34,null],[12,"user_id","","Filters the results and only returns a status object for…",34,null],[12,"after","","Cursor for forward pagination: tells the server where to…",34,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",34,null],[3,"BannedEvents","","Return Values for Get Banned Events",null,null],[12,"id","","Event ID",33,null],[12,"event_type","","Displays `moderation.user.ban` or `moderation.user.unban`",33,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",33,null],[12,"version","","Returns the version of the endpoint.",33,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",33,null],[11,"builder","","Create a builder for building `GetBannedEventsRequest`. On…",34,[[],["getbannedeventsrequestbuilder",3]]],[0,"check_automod_status","twitch_api2::helix::moderation","Determines whether a string message meets the channel’s…",null,null],[3,"CheckAutoModStatusRequest","twitch_api2::helix::moderation::check_automod_status","Query Parameters for Check AutoMod Status",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",32,null],[3,"CheckAutoModStatusBody","","Body Parameters for Check AutoMod Status",null,null],[12,"msg_id","","Developer-generated identifier for mapping messages to…",31,null],[12,"msg_text","","Message text.",31,null],[12,"user_id","","User ID of the sender.",31,null],[3,"CheckAutoModStatus","","Return Values for Check AutoMod Status",null,null],[12,"msg_id","","The msg_id passed in the body of the POST message. Maps…",30,null],[12,"is_permitted","","Indicates if this message meets AutoMod requirements.",30,null],[11,"builder","","Create a builder for building `CheckAutoModStatusRequest`.…",32,[[],["checkautomodstatusrequestbuilder",3]]],[11,"builder","","Create a builder for building `CheckAutoModStatusBody`. On…",31,[[],["checkautomodstatusbodybuilder",3]]],[0,"streams","twitch_api2::helix","Endpoints regarding streams",null,null],[3,"GetStreamsRequest","twitch_api2::helix::streams","Query Parameters for Get Streams",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",40,null],[12,"before","","Cursor for backward pagination: tells the server where to…",40,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",40,null],[12,"game_id","","Returns streams broadcasting a specified game ID. You can…",40,null],[12,"language","","Stream language. You can specify up to 100 languages.",40,null],[12,"user_id","","Returns streams broadcast by one or more specified user…",40,null],[12,"user_login","","Returns streams broadcast by one or more specified user…",40,null],[3,"Stream","","Return Values for Get Streams",null,null],[12,"game_id","","ID of the game being played on the stream.",41,null],[12,"id","","Stream ID.",41,null],[12,"language","","Stream language.",41,null],[12,"started_at","","UTC timestamp.",41,null],[12,"tag_ids","","Shows tag IDs that apply to the stream.",41,null],[12,"thumbnail_url","","Thumbnail URL of the stream. All image URLs have variable…",41,null],[12,"title","","Stream title.",41,null],[12,"type_","","Stream type: \\\"live\\\" or \\\"\\\" (in case of error).",41,null],[12,"user_id","","ID of the user who is streaming.",41,null],[12,"user_name","","Display name corresponding to user_id.",41,null],[12,"viewer_count","","Number of viewers watching the stream at the time of the…",41,null],[3,"GetStreamTagsRequest","","Query Parameters for Get Stream Tags",null,null],[12,"broadcaster_id","","ID of the stream whose tags are going to be fetched",42,null],[4,"StreamType","","Gotten from Stream.type_",null,null],[13,"Live","","Stream is live.",43,null],[13,"NotLive","","Stream not live",43,null],[0,"get_streams","","Gets information about active streams. `get-streams`",null,null],[3,"GetStreamsRequest","twitch_api2::helix::streams::get_streams","Query Parameters for Get Streams",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",40,null],[12,"before","","Cursor for backward pagination: tells the server where to…",40,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",40,null],[12,"game_id","","Returns streams broadcasting a specified game ID. You can…",40,null],[12,"language","","Stream language. You can specify up to 100 languages.",40,null],[12,"user_id","","Returns streams broadcast by one or more specified user…",40,null],[12,"user_login","","Returns streams broadcast by one or more specified user…",40,null],[3,"Stream","","Return Values for Get Streams",null,null],[12,"game_id","","ID of the game being played on the stream.",41,null],[12,"id","","Stream ID.",41,null],[12,"language","","Stream language.",41,null],[12,"started_at","","UTC timestamp.",41,null],[12,"tag_ids","","Shows tag IDs that apply to the stream.",41,null],[12,"thumbnail_url","","Thumbnail URL of the stream. All image URLs have variable…",41,null],[12,"title","","Stream title.",41,null],[12,"type_","","Stream type: \\\"live\\\" or \\\"\\\" (in case of error).",41,null],[12,"user_id","","ID of the user who is streaming.",41,null],[12,"user_name","","Display name corresponding to user_id.",41,null],[12,"viewer_count","","Number of viewers watching the stream at the time of the…",41,null],[11,"builder","","Create a builder for building `GetStreamsRequest`. On the…",40,[[],["getstreamsrequestbuilder",3]]],[0,"get_stream_tags","twitch_api2::helix::streams","Gets information about active streams. `get-stream-tags`",null,null],[3,"GetStreamTagsRequest","twitch_api2::helix::streams::get_stream_tags","Query Parameters for Get Stream Tags",null,null],[12,"broadcaster_id","","ID of the stream whose tags are going to be fetched",42,null],[6,"Tag","","Return Values for Get Stream Tags",null,null],[11,"builder","","Create a builder for building `GetStreamTagsRequest`. On…",42,[[],["getstreamtagsrequestbuilder",3]]],[6,"Tag","twitch_api2::helix::streams","Return Values for Get Stream Tags",null,null],[11,"is_live","","Check if the stream is live or not",43,[[]]],[0,"subscriptions","twitch_api2::helix","Endpoints regarding subscriptions",null,null],[3,"BroadcasterSubscriptions","twitch_api2::helix::subscriptions","Return Values for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster.",44,null],[12,"broadcaster_name","","Display name of the broadcaster.",44,null],[12,"is_gift","","Determines if the subscription is a gift subscription.",44,null],[12,"tier","","Type of subscription (Tier 1, Tier 2, Tier 3). 1000 = Tier…",44,null],[12,"plan_name","","Name of the subscription.",44,null],[12,"user_id","","ID of the subscribed user.",44,null],[12,"user_name","","Display name of the subscribed user.",44,null],[3,"GetBroadcasterSubscriptionsRequest","","Query Parameters for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster. Must match the User ID in the…",45,null],[12,"user_id","","Unique identifier of account to get subscription status…",45,null],[12,"after","","Cursor for forward pagination: tells the server where to…",45,null],[0,"get_broadcaster_subscriptions","","Get all of a broadcaster’s subscriptions.…",null,null],[3,"GetBroadcasterSubscriptionsRequest","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","Query Parameters for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster. Must match the User ID in the…",45,null],[12,"user_id","","Unique identifier of account to get subscription status…",45,null],[12,"after","","Cursor for forward pagination: tells the server where to…",45,null],[3,"BroadcasterSubscriptions","","Return Values for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster.",44,null],[12,"broadcaster_name","","Display name of the broadcaster.",44,null],[12,"is_gift","","Determines if the subscription is a gift subscription.",44,null],[12,"tier","","Type of subscription (Tier 1, Tier 2, Tier 3). 1000 = Tier…",44,null],[12,"plan_name","","Name of the subscription.",44,null],[12,"user_id","","ID of the subscribed user.",44,null],[12,"user_name","","Display name of the subscribed user.",44,null],[11,"builder","","Create a builder for building…",45,[[],["getbroadcastersubscriptionsrequestbuilder",3]]],[0,"tags","twitch_api2::helix","Endpoints regarding tags",null,null],[3,"GetAllStreamTagsRequest","twitch_api2::helix::tags","Query Parameters for Get All Stream Tags",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",46,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",46,null],[12,"tag_id","","ID of a tag. Multiple IDs can be specified. If provided,…",46,null],[3,"TwitchTag","","A stream tag as defined by Twitch.",null,null],[12,"id","","ID of the tag.",47,null],[12,"is_auto","","true if the tag is auto-generated; otherwise, false . An…",47,null],[12,"localization_names","","All localized names of the tag.",47,null],[12,"localization_descriptions","","All localized descriptions of the tag.",47,null],[4,"AutoGenerated","","Tag is auto-generated or not.",null,null],[13,"True","","Was auto-generated",48,null],[13,"False","","Was not auto-generated",48,null],[0,"get_all_stream_tags","","Gets the list of all stream tags defined by Twitch,…",null,null],[3,"GetAllStreamTagsRequest","twitch_api2::helix::tags::get_all_stream_tags","Query Parameters for Get All Stream Tags",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",46,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",46,null],[12,"tag_id","","ID of a tag. Multiple IDs can be specified. If provided,…",46,null],[6,"Tag","","Return Values for Get All Stream Tags",null,null],[11,"builder","","Create a builder for building `GetAllStreamTagsRequest`.…",46,[[],["getallstreamtagsrequestbuilder",3]]],[6,"Tag","twitch_api2::helix::tags","Return Values for Get All Stream Tags",null,null],[6,"Language","","Language code, formatted as 2 letter language by ISO…",null,null],[0,"users","twitch_api2::helix","Endpoints regarding users",null,null],[3,"GetUsersRequest","twitch_api2::helix::users","Query Parameters for Get Users",null,null],[12,"id","","User ID. Multiple user IDs can be specified. Limit: 100.",49,null],[12,"login","","User login name. Multiple login names can be specified.…",49,null],[3,"User","","Return Values for Get Users",null,null],[12,"broadcaster_type","","User’s broadcaster type: \\\"partner\\\", \\\"affiliate\\\", or \\\"\\\".",50,null],[12,"description","","User’s channel description.",50,null],[12,"display_name","","User’s display name.",50,null],[12,"email","","User’s email address. Returned if the request includes the…",50,null],[12,"id","","User’s ID.",50,null],[12,"login","","User’s login name.",50,null],[12,"offline_image_url","","URL of the user’s offline image.",50,null],[12,"profile_image_url","","URL of the user’s profile image.",50,null],[12,"type_","","User’s type: \\\"staff\\\", \\\"admin\\\", \\\"global_mod\\\", or \\\"\\\".",50,null],[12,"view_count","","Total number of views of the user’s channel.",50,null],[3,"GetUsersFollowsRequest","","Query Parameters for Get Users Follows",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",51,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",51,null],[12,"from_id","","User ID. The request returns information about users who…",51,null],[12,"to_id","","User ID. The request returns information about users who…",51,null],[3,"UsersFollows","","Return Values for Get Users Follows",null,null],[12,"followed_at","","Date and time when the from_id user followed the to_id user.",52,null],[12,"from_id","","ID of the user following the to_id user.",52,null],[12,"from_name","","Display name corresponding to from_id.",52,null],[12,"to_id","","ID of the user being followed by the from_id user.",52,null],[12,"to_name","","Display name corresponding to to_id.",52,null],[12,"total","","Total number of items returned.",52,null],[3,"DeleteUserFollowsRequest","","Query Parameters for Delete Users Follows",null,null],[12,"from_id","","User ID of the follower",53,null],[12,"to_id","","Channel to be unfollowed by the user",53,null],[3,"CreateUserFollowsBody","","Body Parameters for Create User Follows",null,null],[12,"from_id","","User ID of the follower",54,null],[12,"to_id","","ID of the channel to be followed by the user",54,null],[3,"CreateUserFollowsRequest","","Query Parameters for Create User Follows",null,null],[4,"DeleteUserFollows","","Return Values for [Delete Users Follows",null,null],[13,"Success","","204 - User successfully deleted from list of channel…",55,null],[13,"MissingQuery","","400 - Missing Query Parameter",55,null],[13,"ProcessingError","","422 - Entity cannot be processed",55,null],[4,"CreateUserFollows","","Return Values for Create User Follows",null,null],[13,"Success","","204 or 200 - Successfully created follows",56,null],[13,"MissingQuery","","400 - Missing Query Parameter",56,null],[13,"ProcessingError","","422 - Entity cannot be processed",56,null],[0,"get_users","","Gets information about one or more specified Twitch users.…",null,null],[3,"GetUsersRequest","twitch_api2::helix::users::get_users","Query Parameters for Get Users",null,null],[12,"id","","User ID. Multiple user IDs can be specified. Limit: 100.",49,null],[12,"login","","User login name. Multiple login names can be specified.…",49,null],[3,"User","","Return Values for Get Users",null,null],[12,"broadcaster_type","","User’s broadcaster type: \\\"partner\\\", \\\"affiliate\\\", or \\\"\\\".",50,null],[12,"description","","User’s channel description.",50,null],[12,"display_name","","User’s display name.",50,null],[12,"email","","User’s email address. Returned if the request includes the…",50,null],[12,"id","","User’s ID.",50,null],[12,"login","","User’s login name.",50,null],[12,"offline_image_url","","URL of the user’s offline image.",50,null],[12,"profile_image_url","","URL of the user’s profile image.",50,null],[12,"type_","","User’s type: \\\"staff\\\", \\\"admin\\\", \\\"global_mod\\\", or \\\"\\\".",50,null],[12,"view_count","","Total number of views of the user’s channel.",50,null],[11,"builder","","Create a builder for building `GetUsersRequest`. On the…",49,[[],["getusersrequestbuilder",3]]],[0,"get_users_follows","twitch_api2::helix::users","Gets information on follow relationships between two…",null,null],[3,"GetUsersFollowsRequest","twitch_api2::helix::users::get_users_follows","Query Parameters for Get Users Follows",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",51,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",51,null],[12,"from_id","","User ID. The request returns information about users who…",51,null],[12,"to_id","","User ID. The request returns information about users who…",51,null],[3,"UsersFollows","","Return Values for Get Users Follows",null,null],[12,"followed_at","","Date and time when the from_id user followed the to_id user.",52,null],[12,"from_id","","ID of the user following the to_id user.",52,null],[12,"from_name","","Display name corresponding to from_id.",52,null],[12,"to_id","","ID of the user being followed by the from_id user.",52,null],[12,"to_name","","Display name corresponding to to_id.",52,null],[12,"total","","Total number of items returned.",52,null],[11,"builder","","Create a builder for building `GetUsersFollowsRequest`. On…",51,[[],["getusersfollowsrequestbuilder",3]]],[0,"delete_user_follows","twitch_api2::helix::users","Deletes a specified user from the followers of a specified…",null,null],[3,"DeleteUserFollowsRequest","twitch_api2::helix::users::delete_user_follows","Query Parameters for Delete Users Follows",null,null],[12,"from_id","","User ID of the follower",53,null],[12,"to_id","","Channel to be unfollowed by the user",53,null],[4,"DeleteUserFollows","","Return Values for [Delete Users Follows",null,null],[13,"Success","","204 - User successfully deleted from list of channel…",55,null],[13,"MissingQuery","","400 - Missing Query Parameter",55,null],[13,"ProcessingError","","422 - Entity cannot be processed",55,null],[11,"builder","","Create a builder for building `DeleteUserFollowsRequest`.…",53,[[],["deleteuserfollowsrequestbuilder",3]]],[0,"create_user_follows","twitch_api2::helix::users","Adds a specified user to the followers of a specified…",null,null],[3,"CreateUserFollowsRequest","twitch_api2::helix::users::create_user_follows","Query Parameters for Create User Follows",null,null],[3,"CreateUserFollowsBody","","Body Parameters for Create User Follows",null,null],[12,"from_id","","User ID of the follower",54,null],[12,"to_id","","ID of the channel to be followed by the user",54,null],[4,"CreateUserFollows","","Return Values for Create User Follows",null,null],[13,"Success","","204 or 200 - Successfully created follows",56,null],[13,"MissingQuery","","400 - Missing Query Parameter",56,null],[13,"ProcessingError","","422 - Entity cannot be processed",56,null],[11,"builder","","Create a builder for building `CreateUserFollowsRequest`.…",57,[[],["createuserfollowsrequestbuilder",3]]],[11,"builder","","Create a builder for building `CreateUserFollowsBody`. On…",54,[[],["createuserfollowsbodybuilder",3]]],[6,"Cursor","twitch_api2::helix","A cursor is a pointer to the current \\\"page\\\" in the twitch…",null,null],[8,"Request","","A request is a Twitch endpoint, see New Twitch API reference",null,null],[18,"PATH","","The path to the endpoint relative to the helix root. eg.…",58,null],[18,"SCOPE","","Scopes needed by this endpoint",58,null],[18,"OPT_SCOPE","","Optional scopes needed by this endpoint",58,null],[16,"Response","","Response type. twitch\'s response will  deserialize to this.",58,null],[11,"query","","Defines layout of the url parameters.",58,[[],[["result",4],["error",4],["string",3]]]],[11,"get_uri","","Returns full URI for the request, including query…",58,[[],[["result",4],["uri",3],["invaliduri",4]]]],[8,"RequestPost","","Helix endpoint POSTs information",null,null],[16,"Body","","Body parameters",59,null],[11,"body","","Create body text from [RequestPost::Body]",59,[[],[["error",3],["result",4],["string",3]]]],[11,"create_request","","Create a [http::Request] from this [Request] in your client",59,[[],[["request",3],["createrequesterror",4],["result",4]]]],[11,"parse_response","","Parse response. Override for different behavior",59,[[["response",3],["vec",3],["uri",3]],[["response",3],["helixrequestposterror",4],["result",4]]]],[8,"RequestPatch","","Helix endpoint PATCHs information",null,null],[16,"Body","","Body parameters",60,null],[11,"body","","Create body text from [RequestPost::Body]",60,[[],[["error",3],["result",4],["string",3]]]],[11,"create_request","","Create a [http::Request] from this [Request] in your client",60,[[],[["request",3],["createrequesterror",4],["result",4]]]],[11,"parse_response","","Parse response. Override for different behavior",60,[[["response",3],["vec",3],["uri",3]],[["result",4],["helixrequestpatcherror",3]]]],[8,"RequestDelete","","Helix endpoint DELETEs information",null,null],[11,"create_request","","Create a [http::Request] from this [Request] in your client",61,[[],[["request",3],["createrequesterror",4],["result",4]]]],[11,"parse_response","","Parse response. Override for different behavior",61,[[["response",3],["vec",3],["uri",3]],[["result",4],["helixrequestdeleteerror",4]]]],[8,"RequestGet","","Helix endpoint GETs information",null,null],[11,"create_request","","Create a [http::Request] from this [Request] in your client",62,[[],[["request",3],["createrequesterror",4],["result",4]]]],[11,"parse_response","","Parse response. Override for different behavior",62,[[["response",3],["vec",3],["uri",3]],[["result",4],["helixrequestgeterror",4],["response",3]]]],[8,"Paginated","","Request can be paginated with a cursor",null,null],[10,"set_pagination","","Should returns the current pagination cursor.",63,[[["option",4],["cursor",6]]]],[11,"with_client","","Create a new client with an existing client",64,[[],["helixclient",3]]],[11,"new","","Create a new [HelixClient] with a default…",64,[[],["helixclient",3]]],[11,"clone_client","","Retrieve a clone of the [HttpClient][crate::HttpClient]…",64,[[]]],[11,"req_get","","Request on a valid [RequestGet] endpoint",64,[[]]],[11,"req_post","","Request on a valid [RequestPost] endpoint",64,[[]]],[11,"req_patch","","Request on a valid [RequestPatch] endpoint",64,[[]]],[11,"req_delete","","Request on a valid [RequestDelete] endpoint",64,[[]]],[11,"get_next","","Get the next page in the responses.",1,[[["helixclient",3]]]],[0,"tmi","twitch_api2","TMI Endpoint, twitch\'s unsupported api for better chatters…",null,null],[3,"TMIClient","twitch_api2::tmi","Client for the twitch TMI endpoint, almost entirely…",null,null],[3,"GetChatters","","Returned by TMI at…",null,null],[12,"chatter_count","","Amount of connected users",65,null],[12,"chatters","","Lists of users in their \\\"rank\\\"",65,null],[3,"Chatters","","List of \\\"rank\\\"s and what users are in them. A user can…",null,null],[12,"broadcaster","","Broadcaster, can (probably) only be one",66,null],[12,"vips","","VIPS in the chat, have the VIP badge and are set with…",66,null],[12,"moderators","","Moderators in the chat, have a moderator badge and are set…",66,null],[12,"staff","","Twitch Staff in the chat, have a staff badge.",66,null],[12,"admins","","Twitch Admins in the chat, have an admin badge, akin to…",66,null],[12,"global_mods","","Twitch Global Moderators in the chat, have an admin badge,…",66,null],[12,"viewers","","Regular viewer in the chat, includes followers and…",66,null],[3,"GetHosts","","Returned by TMI at `https://tmi.twitch.tv/hosts`",null,null],[12,"hosts","","List of host records. `len()` will be 1 if successfully…",67,null],[3,"Host","","A host record returned by TMI at https://tmi.twitch.tv/hosts",null,null],[12,"host_id","","User ID of the hosting channel",68,null],[12,"target_id","","User ID of the hosted channel. Will be missing if the…",68,null],[12,"host_login","","Login of the hosting channel, if requested with…",68,null],[12,"target_login","","Login of the hosted channel, if requested with…",68,null],[12,"host_display_name","","Display name of the hosting channel, if requested with…",68,null],[12,"target_display_name","","Display name of the hosted channel, if requested with…",68,null],[4,"HostsRequestId","","Possible options for a [TMIClient::get_hosts] request.",null,null],[13,"Host","","Request the broadcaster that a given channel is hosting.",69,null],[13,"Target","","Request a list of channels hosting a target broadcaster.",69,null],[4,"RequestError","","Errors for [TMIClient] requests",null,null],[13,"HttpError","","http crate returned an error",70,null],[13,"DeserializeError","","deserialization failed",70,null],[13,"RequestError","","request failed",70,null],[13,"Utf8Error","","could not parse body as utf8: {1}",70,null],[6,"Nickname","","Nickname",null,null],[6,"UserId","","User ID",null,null],[11,"new","","Create a new client with a default",71,[[],["tmiclient",3]]],[11,"with_client","","Create a new [TMIClient] with an existing…",71,[[],["tmiclient",3]]],[11,"clone_client","","Retrieve a clone of the [HttpClient][crate::HttpClient]…",71,[[]]],[11,"get_chatters","","Get all the chatters in the chat",71,[[]]],[11,"get_hosts","","Get the broadcaster that a given channel is hosting, or…",71,[[["hostsrequestid",4]]]],[0,"client","twitch_api2","Different clients you can use with this crate to call the…",null,null],[3,"DummyHttpClient","twitch_api2::client","A client that will never work, used to trick documentation…",null,null],[4,"SurfError","","Possible errors from [Client::req()] when using…",null,null],[13,"Surf","","surf failed to do the request: {0}",72,null],[13,"InvalidHeaderValue","","could not construct header value",72,null],[13,"InvalidHeaderName","","could not construct header name",72,null],[13,"UrlError","","uri could not be translated into an url.",72,null],[6,"BoxedFuture","","A boxed future, mimics `futures::future::BoxFuture`",null,null],[6,"Req","","The request type we\'re expecting with body.",null,null],[6,"Response","","The response type we\'re expecting with body",null,null],[8,"Client","","A client that can do requests",null,null],[16,"Error","","Error returned by the client",73,null],[10,"req","","Send a request",73,[[["req",6]],[["boxedfuture",6],["result",4]]]],[7,"TWITCH_HELIX_URL","twitch_api2","Location of Twitch Helix",null,null],[7,"TWITCH_TMI_URL","","Location of Twitch TMI",null,null],[11,"new","","Create a new [TwitchClient]",0,[[],["twitchclient",3]]],[11,"with_client","","Create a new [TwitchClient] with an existing [HttpClient]",0,[[],["twitchclient",3]]],[11,"from","twitch_api2::helix","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","twitch_api2::tmi","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","twitch_api2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","twitch_api2::helix","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","twitch_api2::helix::channels::get_channel_information","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","twitch_api2::helix::channels::modify_channel_information","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","twitch_api2::helix::channels::start_commercial","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","twitch_api2::helix::channels::modify_channel_information","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","twitch_api2::helix::channels::start_commercial","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","twitch_api2::helix::clips::get_clips","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","twitch_api2::helix::games::get_games","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","twitch_api2::helix::games::get_top_games","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","twitch_api2::helix::games","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","twitch_api2::helix::moderation::check_automod_status","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","twitch_api2::helix::moderation::get_banned_events","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","twitch_api2::helix::moderation::get_banned_users","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","twitch_api2::helix::moderation::get_moderator_events","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","twitch_api2::helix::moderation::get_moderators","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","twitch_api2::helix::streams::get_streams","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","twitch_api2::helix::streams::get_stream_tags","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","twitch_api2::helix::streams","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","twitch_api2::helix::tags::get_all_stream_tags","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","twitch_api2::helix::tags","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"equivalent","","",48,[[]]],[11,"vzip","","",48,[[]]],[11,"from","twitch_api2::helix::users::get_users","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","twitch_api2::helix::users::get_users_follows","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","twitch_api2::helix::users::delete_user_follows","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","twitch_api2::helix::users::create_user_follows","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","twitch_api2::helix::users::delete_user_follows","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","twitch_api2::helix::users::create_user_follows","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","twitch_api2::tmi","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","twitch_api2::client","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_string","","",72,[[],["string",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"body","twitch_api2::helix::moderation::check_automod_status","",32,[[],[["error",3],["result",4],["string",3]]]],[11,"parse_response","twitch_api2::helix::users::create_user_follows","",57,[[["response",3],["vec",3],["uri",3]],[["helixrequestposterror",4],["response",3],["result",4]]]],[11,"set_pagination","twitch_api2::helix::clips::get_clips","",27,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::games::get_top_games","",28,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_moderators","",39,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_moderator_events","",37,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_banned_users","",36,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_banned_events","",34,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::streams::get_streams","",40,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",45,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::tags::get_all_stream_tags","",46,[[["cursor",6],["option",4]]]],[11,"set_pagination","twitch_api2::helix::users::get_users_follows","",51,[[["cursor",6],["option",4]]]],[11,"req","twitch_api2::client","",78,[[["req",6]],[["result",4],["boxedfuture",6]]]],[11,"from","twitch_api2::helix::tags","",48,[[]]],[11,"from","twitch_api2::helix","",7,[[["createrequesterror",4]]]],[11,"from","","",7,[[["helixrequestgeterror",4]]]],[11,"from","","",7,[[["helixrequestputerror",3]]]],[11,"from","","",7,[[["helixrequestposterror",4]]]],[11,"from","","",7,[[["helixrequestpatcherror",3]]]],[11,"from","","",7,[[["helixrequestdeleteerror",4]]]],[11,"from","","",8,[[["error",3]]]],[11,"from","","",8,[[["error",3]]]],[11,"from","","",8,[[["invaliduri",4]]]],[11,"from","","",9,[[["invaliduri",3]]]],[11,"from","","",9,[[["error",4]]]],[11,"from","","",10,[[["error",3]]]],[11,"from","","",12,[[["error",3]]]],[11,"from","twitch_api2::tmi","",70,[[["error",3]]]],[11,"from","","",70,[[["error",3]]]],[11,"from","","",70,[[["box",3]]]],[11,"from","twitch_api2::client","",72,[[["invalidheadervalue",3]]]],[11,"from","","",72,[[["invalidheadername",3]]]],[11,"from","","",72,[[["parseerror",4]]]],[11,"clone","twitch_api2::helix::channels::get_channel_information","",17,[[],["getchannelinformationrequest",3]]],[11,"clone","","",16,[[],["channelinformation",3]]],[11,"clone","twitch_api2::helix::channels::modify_channel_information","",19,[[],["modifychannelinformationrequest",3]]],[11,"clone","","",18,[[],["modifychannelinformationbody",3]]],[11,"clone","","",22,[[],["modifychannelinformation",4]]],[11,"clone","twitch_api2::helix::channels::start_commercial","",23,[[],["commerciallength",4]]],[11,"clone","","",25,[[],["startcommercialrequest",3]]],[11,"clone","","",21,[[],["startcommercialbody",3]]],[11,"clone","","",20,[[],["startcommercial",3]]],[11,"clone","twitch_api2::helix::clips::get_clips","",27,[[],["getclipsrequest",3]]],[11,"clone","","",26,[[],["clip",3]]],[11,"clone","twitch_api2::helix::games","",76,[[],["twitchgame",3]]],[11,"clone","twitch_api2::helix::games::get_games","",29,[[],["getgamesrequest",3]]],[11,"clone","twitch_api2::helix::games::get_top_games","",28,[[],["gettopgamesrequest",3]]],[11,"clone","twitch_api2::helix::moderation::get_moderators","",39,[[],["getmoderatorsrequest",3]]],[11,"clone","","",77,[[],["moderators",3]]],[11,"clone","twitch_api2::helix::moderation::get_moderator_events","",37,[[],["getmoderatoreventsrequest",3]]],[11,"clone","","",38,[[],["moderatorevents",3]]],[11,"clone","twitch_api2::helix::moderation::get_banned_users","",36,[[],["getbannedusersrequest",3]]],[11,"clone","","",35,[[],["bannedusers",3]]],[11,"clone","twitch_api2::helix::moderation::get_banned_events","",34,[[],["getbannedeventsrequest",3]]],[11,"clone","","",33,[[],["bannedevents",3]]],[11,"clone","twitch_api2::helix::moderation::check_automod_status","",32,[[],["checkautomodstatusrequest",3]]],[11,"clone","","",31,[[],["checkautomodstatusbody",3]]],[11,"clone","","",30,[[],["checkautomodstatus",3]]],[11,"clone","twitch_api2::helix::streams","",43,[[],["streamtype",4]]],[11,"clone","twitch_api2::helix::streams::get_streams","",40,[[],["getstreamsrequest",3]]],[11,"clone","","",41,[[],["stream",3]]],[11,"clone","twitch_api2::helix::streams::get_stream_tags","",42,[[],["getstreamtagsrequest",3]]],[11,"clone","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",45,[[],["getbroadcastersubscriptionsrequest",3]]],[11,"clone","","",44,[[],["broadcastersubscriptions",3]]],[11,"clone","twitch_api2::helix::tags","",48,[[],["autogenerated",4]]],[11,"clone","","",47,[[],["twitchtag",3]]],[11,"clone","twitch_api2::helix::tags::get_all_stream_tags","",46,[[],["getallstreamtagsrequest",3]]],[11,"clone","twitch_api2::helix::users::get_users","",49,[[],["getusersrequest",3]]],[11,"clone","","",50,[[],["user",3]]],[11,"clone","twitch_api2::helix::users::get_users_follows","",51,[[],["getusersfollowsrequest",3]]],[11,"clone","","",52,[[],["usersfollows",3]]],[11,"clone","twitch_api2::helix::users::delete_user_follows","",53,[[],["deleteuserfollowsrequest",3]]],[11,"clone","","",55,[[],["deleteuserfollows",4]]],[11,"clone","twitch_api2::helix::users::create_user_follows","",57,[[],["createuserfollowsrequest",3]]],[11,"clone","","",54,[[],["createuserfollowsbody",3]]],[11,"clone","","",56,[[],["createuserfollows",4]]],[11,"clone","twitch_api2::helix","",64,[[],["helixclient",3]]],[11,"clone","twitch_api2::tmi","",71,[[],["tmiclient",3]]],[11,"clone","twitch_api2::client","",78,[[],["dummyhttpclient",3]]],[11,"clone","twitch_api2","",0,[[],["twitchclient",3]]],[11,"default","twitch_api2::helix::channels::start_commercial","",25,[[]]],[11,"default","twitch_api2::helix::moderation::check_automod_status","",31,[[],["checkautomodstatusbody",3]]],[11,"default","twitch_api2::helix::users::create_user_follows","",57,[[],["createuserfollowsrequest",3]]],[11,"default","","",54,[[],["createuserfollowsbody",3]]],[11,"default","twitch_api2::helix","",64,[[],["helixclient",3]]],[11,"default","twitch_api2::tmi","",71,[[],["tmiclient",3]]],[11,"default","twitch_api2::client","",78,[[],["dummyhttpclient",3]]],[11,"default","twitch_api2","",0,[[],["twitchclient",3]]],[11,"eq","twitch_api2::helix::channels::get_channel_information","",17,[[["getchannelinformationrequest",3]]]],[11,"ne","","",17,[[["getchannelinformationrequest",3]]]],[11,"eq","","",16,[[["channelinformation",3]]]],[11,"ne","","",16,[[["channelinformation",3]]]],[11,"eq","twitch_api2::helix::channels::modify_channel_information","",19,[[["modifychannelinformationrequest",3]]]],[11,"ne","","",19,[[["modifychannelinformationrequest",3]]]],[11,"eq","","",18,[[["modifychannelinformationbody",3]]]],[11,"ne","","",18,[[["modifychannelinformationbody",3]]]],[11,"eq","","",22,[[["modifychannelinformation",4]]]],[11,"eq","twitch_api2::helix::channels::start_commercial","",23,[[["commerciallength",4]]]],[11,"eq","","",25,[[["startcommercialrequest",3]]]],[11,"eq","","",21,[[["startcommercialbody",3]]]],[11,"ne","","",21,[[["startcommercialbody",3]]]],[11,"eq","","",20,[[["startcommercial",3]]]],[11,"ne","","",20,[[["startcommercial",3]]]],[11,"eq","twitch_api2::helix::clips::get_clips","",27,[[["getclipsrequest",3]]]],[11,"ne","","",27,[[["getclipsrequest",3]]]],[11,"eq","","",26,[[["clip",3]]]],[11,"ne","","",26,[[["clip",3]]]],[11,"eq","twitch_api2::helix::games","",76,[[["twitchgame",3]]]],[11,"ne","","",76,[[["twitchgame",3]]]],[11,"eq","twitch_api2::helix::games::get_games","",29,[[["getgamesrequest",3]]]],[11,"ne","","",29,[[["getgamesrequest",3]]]],[11,"eq","twitch_api2::helix::games::get_top_games","",28,[[["gettopgamesrequest",3]]]],[11,"ne","","",28,[[["gettopgamesrequest",3]]]],[11,"eq","twitch_api2::helix::moderation::get_moderators","",39,[[["getmoderatorsrequest",3]]]],[11,"ne","","",39,[[["getmoderatorsrequest",3]]]],[11,"eq","","",77,[[["moderators",3]]]],[11,"ne","","",77,[[["moderators",3]]]],[11,"eq","twitch_api2::helix::moderation::get_moderator_events","",37,[[["getmoderatoreventsrequest",3]]]],[11,"ne","","",37,[[["getmoderatoreventsrequest",3]]]],[11,"eq","","",38,[[["moderatorevents",3]]]],[11,"ne","","",38,[[["moderatorevents",3]]]],[11,"eq","twitch_api2::helix::moderation::get_banned_users","",36,[[["getbannedusersrequest",3]]]],[11,"ne","","",36,[[["getbannedusersrequest",3]]]],[11,"eq","","",35,[[["bannedusers",3]]]],[11,"ne","","",35,[[["bannedusers",3]]]],[11,"eq","twitch_api2::helix::moderation::get_banned_events","",34,[[["getbannedeventsrequest",3]]]],[11,"ne","","",34,[[["getbannedeventsrequest",3]]]],[11,"eq","","",33,[[["bannedevents",3]]]],[11,"ne","","",33,[[["bannedevents",3]]]],[11,"eq","twitch_api2::helix::moderation::check_automod_status","",32,[[["checkautomodstatusrequest",3]]]],[11,"ne","","",32,[[["checkautomodstatusrequest",3]]]],[11,"eq","","",31,[[["checkautomodstatusbody",3]]]],[11,"ne","","",31,[[["checkautomodstatusbody",3]]]],[11,"eq","","",30,[[["checkautomodstatus",3]]]],[11,"ne","","",30,[[["checkautomodstatus",3]]]],[11,"eq","twitch_api2::helix::streams","",43,[[["streamtype",4]]]],[11,"eq","twitch_api2::helix::streams::get_streams","",40,[[["getstreamsrequest",3]]]],[11,"ne","","",40,[[["getstreamsrequest",3]]]],[11,"eq","","",41,[[["stream",3]]]],[11,"ne","","",41,[[["stream",3]]]],[11,"eq","twitch_api2::helix::streams::get_stream_tags","",42,[[["getstreamtagsrequest",3]]]],[11,"ne","","",42,[[["getstreamtagsrequest",3]]]],[11,"eq","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",45,[[["getbroadcastersubscriptionsrequest",3]]]],[11,"ne","","",45,[[["getbroadcastersubscriptionsrequest",3]]]],[11,"eq","","",44,[[["broadcastersubscriptions",3]]]],[11,"ne","","",44,[[["broadcastersubscriptions",3]]]],[11,"eq","twitch_api2::helix::tags","",48,[[["autogenerated",4]]]],[11,"eq","","",47,[[["twitchtag",3]]]],[11,"ne","","",47,[[["twitchtag",3]]]],[11,"eq","twitch_api2::helix::tags::get_all_stream_tags","",46,[[["getallstreamtagsrequest",3]]]],[11,"ne","","",46,[[["getallstreamtagsrequest",3]]]],[11,"eq","twitch_api2::helix::users::get_users","",49,[[["getusersrequest",3]]]],[11,"ne","","",49,[[["getusersrequest",3]]]],[11,"eq","","",50,[[["user",3]]]],[11,"ne","","",50,[[["user",3]]]],[11,"eq","twitch_api2::helix::users::get_users_follows","",51,[[["getusersfollowsrequest",3]]]],[11,"ne","","",51,[[["getusersfollowsrequest",3]]]],[11,"eq","","",52,[[["usersfollows",3]]]],[11,"ne","","",52,[[["usersfollows",3]]]],[11,"eq","twitch_api2::helix::users::delete_user_follows","",53,[[["deleteuserfollowsrequest",3]]]],[11,"ne","","",53,[[["deleteuserfollowsrequest",3]]]],[11,"eq","","",55,[[["deleteuserfollows",4]]]],[11,"eq","twitch_api2::helix::users::create_user_follows","",57,[[["createuserfollowsrequest",3]]]],[11,"eq","","",54,[[["createuserfollowsbody",3]]]],[11,"ne","","",54,[[["createuserfollowsbody",3]]]],[11,"eq","","",56,[[["createuserfollows",4]]]],[11,"eq","twitch_api2::helix","",1,[[["response",3]]]],[11,"ne","","",1,[[["response",3]]]],[11,"partial_cmp","twitch_api2::helix::tags","",48,[[["autogenerated",4]],[["option",4],["ordering",4]]]],[11,"fmt","twitch_api2::helix::channels::get_channel_information","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::channels::modify_channel_information","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::channels::start_commercial","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::clips::get_clips","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::games","",76,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::games::get_games","",29,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::games::get_top_games","",28,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_moderators","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_moderator_events","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_banned_users","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_banned_events","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::check_automod_status","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::streams","",43,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::streams::get_streams","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::streams::get_stream_tags","",42,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::tags","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::tags::get_all_stream_tags","",46,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::users::get_users","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::users::get_users_follows","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::users::delete_user_follows","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::users::create_user_follows","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::tmi","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::client","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::channels::start_commercial","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::tmi","",70,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::client","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"try_from","twitch_api2::helix::channels::modify_channel_information","",22,[[["statuscode",3]],["result",4]]],[11,"try_from","twitch_api2::helix::channels::start_commercial","",23,[[],["result",4]]],[11,"try_from","twitch_api2::helix::users::delete_user_follows","",55,[[["statuscode",3]],["result",4]]],[11,"try_from","twitch_api2::helix::users::create_user_follows","",56,[[["statuscode",3]],["result",4]]],[11,"source","twitch_api2::helix","",7,[[],[["error",8],["option",4]]]],[11,"source","","",8,[[],[["error",8],["option",4]]]],[11,"source","","",9,[[],[["error",8],["option",4]]]],[11,"source","","",10,[[],[["error",8],["option",4]]]],[11,"source","","",12,[[],[["error",8],["option",4]]]],[11,"source","twitch_api2::tmi","",70,[[],[["error",8],["option",4]]]],[11,"source","twitch_api2::client","",72,[[],[["error",8],["option",4]]]],[11,"custom","twitch_api2::helix","",2,[[["display",8]]]],[11,"serialize","twitch_api2::helix::channels::get_channel_information","",17,[[],["result",4]]],[11,"serialize","twitch_api2::helix::channels::modify_channel_information","",19,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","twitch_api2::helix::channels::start_commercial","",23,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","twitch_api2::helix::clips::get_clips","",27,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","twitch_api2::helix::games::get_games","",29,[[],["result",4]]],[11,"serialize","twitch_api2::helix::games::get_top_games","",28,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_moderators","",39,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_moderator_events","",37,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_banned_users","",36,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_banned_events","",34,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::check_automod_status","",32,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","twitch_api2::helix::streams::get_streams","",40,[[],["result",4]]],[11,"serialize","twitch_api2::helix::streams::get_stream_tags","",42,[[],["result",4]]],[11,"serialize","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",45,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","twitch_api2::helix::tags","",48,[[],["result",4]]],[11,"serialize","twitch_api2::helix::tags::get_all_stream_tags","",46,[[],["result",4]]],[11,"serialize","twitch_api2::helix::users::get_users","",49,[[],["result",4]]],[11,"serialize","twitch_api2::helix::users::get_users_follows","",51,[[],["result",4]]],[11,"serialize","twitch_api2::helix::users::delete_user_follows","",53,[[],["result",4]]],[11,"serialize","twitch_api2::helix::users::create_user_follows","",57,[[],["result",4]]],[11,"serialize","","",54,[[],["result",4]]],[11,"serialize","twitch_api2::tmi","",65,[[],["result",4]]],[11,"serialize","","",66,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","","",68,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::channels::get_channel_information","",17,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::channels::modify_channel_information","",19,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::channels::start_commercial","",23,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::clips::get_clips","",27,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::games","",76,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::games::get_games","",29,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::games::get_top_games","",28,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_moderators","",39,[[],["result",4]]],[11,"deserialize","","",77,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_moderator_events","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_banned_users","",36,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_banned_events","",34,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::check_automod_status","",32,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::streams","",43,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::streams::get_streams","",40,[[],["result",4]]],[11,"deserialize","","",41,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::streams::get_stream_tags","",42,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",45,[[],["result",4]]],[11,"deserialize","","",44,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::tags","",48,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::tags::get_all_stream_tags","",46,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::users::get_users","",49,[[],["result",4]]],[11,"deserialize","","",50,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::users::get_users_follows","",51,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::users::delete_user_follows","",53,[[],["result",4]]],[11,"deserialize","","",55,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::users::create_user_follows","",57,[[],["result",4]]],[11,"deserialize","","",54,[[],["result",4]]],[11,"deserialize","","",56,[[],["result",4]]],[11,"deserialize","twitch_api2::tmi","",65,[[],["result",4]]],[11,"deserialize","","",66,[[],["result",4]]],[11,"deserialize","","",67,[[],["result",4]]],[11,"deserialize","","",68,[[],["result",4]]]],"p":[[3,"TwitchClient"],[3,"Response"],[4,"SerializeError"],[13,"TopLevelNotSupported"],[13,"FieldNotSupported"],[13,"PairNotSupported"],[13,"ValueNotSupported"],[4,"ClientRequestError"],[4,"CreateRequestError"],[4,"InvalidUri"],[4,"HelixRequestGetError"],[13,"Error"],[4,"HelixRequestPostError"],[13,"Error"],[4,"HelixRequestDeleteError"],[13,"Error"],[3,"ChannelInformation"],[3,"GetChannelInformationRequest"],[3,"ModifyChannelInformationBody"],[3,"ModifyChannelInformationRequest"],[3,"StartCommercial"],[3,"StartCommercialBody"],[4,"ModifyChannelInformation"],[4,"CommercialLength"],[4,"CommercialLengthParseError"],[3,"StartCommercialRequest"],[3,"Clip"],[3,"GetClipsRequest"],[3,"GetTopGamesRequest"],[3,"GetGamesRequest"],[3,"CheckAutoModStatus"],[3,"CheckAutoModStatusBody"],[3,"CheckAutoModStatusRequest"],[3,"BannedEvents"],[3,"GetBannedEventsRequest"],[3,"BannedUsers"],[3,"GetBannedUsersRequest"],[3,"GetModeratorEventsRequest"],[3,"ModeratorEvents"],[3,"GetModeratorsRequest"],[3,"GetStreamsRequest"],[3,"Stream"],[3,"GetStreamTagsRequest"],[4,"StreamType"],[3,"BroadcasterSubscriptions"],[3,"GetBroadcasterSubscriptionsRequest"],[3,"GetAllStreamTagsRequest"],[3,"TwitchTag"],[4,"AutoGenerated"],[3,"GetUsersRequest"],[3,"User"],[3,"GetUsersFollowsRequest"],[3,"UsersFollows"],[3,"DeleteUserFollowsRequest"],[3,"CreateUserFollowsBody"],[4,"DeleteUserFollows"],[4,"CreateUserFollows"],[3,"CreateUserFollowsRequest"],[8,"Request"],[8,"RequestPost"],[8,"RequestPatch"],[8,"RequestDelete"],[8,"RequestGet"],[8,"Paginated"],[3,"HelixClient"],[3,"GetChatters"],[3,"Chatters"],[3,"GetHosts"],[3,"Host"],[4,"HostsRequestId"],[4,"RequestError"],[3,"TMIClient"],[4,"SurfError"],[8,"Client"],[3,"HelixRequestPutError"],[3,"HelixRequestPatchError"],[3,"TwitchGame"],[3,"Moderators"],[3,"DummyHttpClient"]]},\
"twitch_oauth2":{"doc":"github crates-io docs-rs","i":[[3,"AppAccessToken","twitch_oauth2","An App Access Token from the OAuth client credentials flow",null,null],[3,"UserToken","","An User Token from the OAuth implicit code flow or OAuth…",null,null],[3,"ValidatedToken","","Token validation returned from…",null,null],[12,"client_id","","Client ID associated with the token. Twitch requires this…",0,null],[12,"login","","Username associated with the token",0,null],[12,"user_id","","User ID associated with the token",0,null],[12,"scopes","","Scopes attached to the token.",0,null],[4,"Scope","","Scopes for twitch.",null,null],[13,"AnalyticsReadExtensions","","View analytics data for your extensions.",1,null],[13,"AnalyticsReadGames","","View analytics data for your games.",1,null],[13,"BitsRead","","View bits information for your channel.",1,null],[13,"ChannelEditCommercial","","Start a commercial on authorized channels",1,null],[13,"ChannelManageBroadcast","","Manage your channel’s broadcast configuration, including…",1,null],[13,"ChannelManageExtension","","Manage your channel’s extension configuration, including…",1,null],[13,"ChannelModerate","","Perform moderation actions in a channel",1,null],[13,"ChannelReadHypeTrain","","Read hype trains",1,null],[13,"ChannelReadRedemptions","","View your channel points custom reward redemptions",1,null],[13,"ChannelReadSubscriptions","","Get a list of all subscribers to your channel and check if…",1,null],[13,"ChatEdit","","Send live Stream Chat and Rooms messages",1,null],[13,"ChatRead","","View live Stream Chat and Rooms messages",1,null],[13,"ClipsEdit","","Create and edit clips as a specific user.",1,null],[13,"ModerationRead","","View your channel\'s moderation data including Moderators,…",1,null],[13,"UserEdit","","Manage a user object.",1,null],[13,"UserEditBroadcast","","Edit your channel\'s broadcast configuration, including…",1,null],[13,"UserEditFollows","","Edit your follows.",1,null],[13,"UserReadBroadcast","","View your broadcasting configuration, including extension…",1,null],[13,"UserReadEmail","","Read authorized user\'s email address.",1,null],[13,"UserReadStreamKey","","Read authorized user’s stream key.",1,null],[13,"WhispersEdit","","Send whisper messages.",1,null],[13,"WhispersRead","","View your whisper messages.",1,null],[13,"Other","","Other scope that is not implemented.",1,null],[5,"validate_token","","Validate this token.",null,[[["accesstoken",3]]]],[5,"revoke_token","","Revoke the token.",null,[[["accesstoken",3],["clientid",3]]]],[5,"refresh_token","","Refresh the token, call if it has expired.",null,[[["clientsecret",3],["clientid",3],["refreshtoken",3]]]],[0,"client","","Provides different http clients",null,null],[5,"reqwest_http_client","twitch_oauth2::client","Asynchronous HTTP client.",null,[[["httprequest",3]]]],[4,"SurfError","","Possible errors for [surf_http_client][http_client]",null,null],[13,"Surf","","surf failed to do the request: {0}",2,null],[13,"InvalidHeaderValue","","could not construct header value",2,null],[13,"InvalidHeaderName","","could not construct header name",2,null],[5,"surf_http_client","","Asynchronous HTTP client using [Surf][surf::Client]",null,[[["httprequest",3]]]],[0,"id","twitch_oauth2","Representation of oauth2 flow in `id.twitch.tv`",null,null],[3,"TwitchTokenResponse","twitch_oauth2::id","Twitch\'s representation of the oauth flow.",null,null],[12,"access_token","","Access token",3,null],[12,"token_type","","Token type",3,null],[12,"expires_in","","Time (in seconds) until token expires",3,null],[12,"refresh_token","","Token that can be used to refresh",3,null],[12,"scopes","","Scopes attached to token",3,null],[12,"extra_fields","","Extras",3,null],[3,"TwitchTokenErrorResponse","","Twitch\'s representation of the oauth flow for errors",null,null],[12,"status","","Status code of error",4,null],[12,"message","","Message attached to error",4,null],[6,"TwitchClient","","Client for Twitch OAuth2",null,null],[0,"scopes","twitch_oauth2","Module for all possible scopes in twitch.",null,null],[4,"Scope","twitch_oauth2::scopes","Scopes for twitch.",null,null],[13,"AnalyticsReadExtensions","","View analytics data for your extensions.",1,null],[13,"AnalyticsReadGames","","View analytics data for your games.",1,null],[13,"BitsRead","","View bits information for your channel.",1,null],[13,"ChannelEditCommercial","","Start a commercial on authorized channels",1,null],[13,"ChannelManageBroadcast","","Manage your channel’s broadcast configuration, including…",1,null],[13,"ChannelManageExtension","","Manage your channel’s extension configuration, including…",1,null],[13,"ChannelModerate","","Perform moderation actions in a channel",1,null],[13,"ChannelReadHypeTrain","","Read hype trains",1,null],[13,"ChannelReadRedemptions","","View your channel points custom reward redemptions",1,null],[13,"ChannelReadSubscriptions","","Get a list of all subscribers to your channel and check if…",1,null],[13,"ChatEdit","","Send live Stream Chat and Rooms messages",1,null],[13,"ChatRead","","View live Stream Chat and Rooms messages",1,null],[13,"ClipsEdit","","Create and edit clips as a specific user.",1,null],[13,"ModerationRead","","View your channel\'s moderation data including Moderators,…",1,null],[13,"UserEdit","","Manage a user object.",1,null],[13,"UserEditBroadcast","","Edit your channel\'s broadcast configuration, including…",1,null],[13,"UserEditFollows","","Edit your follows.",1,null],[13,"UserReadBroadcast","","View your broadcasting configuration, including extension…",1,null],[13,"UserReadEmail","","Read authorized user\'s email address.",1,null],[13,"UserReadStreamKey","","Read authorized user’s stream key.",1,null],[13,"WhispersEdit","","Send whisper messages.",1,null],[13,"WhispersRead","","View your whisper messages.",1,null],[13,"Other","","Other scope that is not implemented.",1,null],[11,"all","","Get a vec of all defined twitch [Scopes][Scope].",1,[[],[["vec",3],["scope",4]]]],[11,"parse","","Make a scope from string",1,[[],["scope",4]]],[11,"as_oauth_scope","","Get [Scope] as an oauth2 Scope",1,[[],["scope",3]]],[0,"tokens","twitch_oauth2","Twitch token types",null,null],[3,"AppAccessToken","twitch_oauth2::tokens","An App Access Token from the OAuth client credentials flow",null,null],[3,"UserToken","","An User Token from the OAuth implicit code flow or OAuth…",null,null],[3,"ValidatedToken","","Token validation returned from…",null,null],[12,"client_id","","Client ID associated with the token. Twitch requires this…",0,null],[12,"login","","Username associated with the token",0,null],[12,"user_id","","User ID associated with the token",0,null],[12,"scopes","","Scopes attached to the token.",0,null],[11,"from_existing_unchecked","twitch_oauth2","Assemble token without checks.",5,[[["vec",3],["option",4],["accesstoken",3],["string",3],["option",4]],["appaccesstoken",3]]],[11,"from_existing","","Assemble token and validate it. Retrieves `client_id` and…",5,[[["accesstoken",3],["clientsecret",3]]]],[11,"get_app_access_token","","Generate app access token via OAuth client credentials flow",5,[[["vec",3],["clientid",3],["scope",4],["clientsecret",3]]]],[0,"errors","twitch_oauth2::tokens","Errors",null,null],[4,"TokenError","twitch_oauth2::tokens::errors","General errors for talking with twitch, currently only…",null,null],[13,"Request","","request for token failed. {0}",6,null],[13,"ParseError","","could not parse url",6,null],[13,"ValidationError","","could not get validation for token",6,null],[4,"ValidationError","","Errors for [validate_token][crate::validate_token]",null,null],[13,"DeserializeError","","deserializations failed",7,null],[13,"NotAuthorized","","token is not authorized for use",7,null],[13,"TwitchError","","twitch returned an unexpected status: {0}",7,null],[13,"Request","","failed to request validation: {0}",7,null],[4,"RevokeTokenError","","Errors for [revoke_token][crate::revoke_token]",null,null],[13,"BadRequest","","400 Bad Request: {0}",8,null],[13,"RequestError","","failed to do revokation: {0}",8,null],[13,"Other","","got unexpected return: {0:?}",8,null],[4,"RefreshTokenError","","Errors for…",null,null],[13,"RequestError","","request for token failed. {0}",9,null],[13,"ParseError","","could not parse url",9,null],[13,"NoRefreshToken","","no refresh token found",9,null],[11,"from_existing_unchecked","twitch_oauth2","Assemble token without checks.",10,[[["vec",3],["option",4],["option",4],["string",3]],["usertoken",3]]],[11,"from_existing","","Assemble token and validate it. Retrieves `login`,…",10,[[["accesstoken",3]]]],[8,"TwitchToken","twitch_oauth2::tokens","Trait for twitch tokens to get fields and generalize over…",null,null],[10,"client_id","","Get the client-id. Twitch requires this in all helix api…",11,[[],["clientid",3]]],[10,"token","","Get the [AccessToken] for authenticating",11,[[],["accesstoken",3]]],[10,"login","","Get the username associated to this token",11,[[],["option",4]]],[10,"refresh_token","","Refresh this token, changing the token to a newer one",11,[[],[["pin",3],["box",3]]]],[10,"expires","","Get instant when token will expire.",11,[[],[["option",4],["instant",3]]]],[10,"scopes","","Retrieve scopes attached to the token",11,[[],["option",4]]],[11,"validate_token","","Validate this token. Should be checked on regularly,…",11,[[],[["pin",3],["box",3]]]],[11,"revoke_token","","Revoke the token. See…",11,[[],[["box",3],["pin",3]]]],[8,"TwitchToken","twitch_oauth2","Trait for twitch tokens to get fields and generalize over…",null,null],[10,"client_id","","Get the client-id. Twitch requires this in all helix api…",11,[[],["clientid",3]]],[10,"token","","Get the [AccessToken] for authenticating",11,[[],["accesstoken",3]]],[10,"login","","Get the username associated to this token",11,[[],["option",4]]],[10,"refresh_token","","Refresh this token, changing the token to a newer one",11,[[],[["pin",3],["box",3]]]],[10,"expires","","Get instant when token will expire.",11,[[],[["option",4],["instant",3]]]],[10,"scopes","","Retrieve scopes attached to the token",11,[[],["option",4]]],[11,"validate_token","","Validate this token. Should be checked on regularly,…",11,[[],[["pin",3],["box",3]]]],[11,"revoke_token","","Revoke the token. See…",11,[[],[["box",3],["pin",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","twitch_oauth2::tokens","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","twitch_oauth2::scopes","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","twitch_oauth2::client","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","twitch_oauth2::id","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","twitch_oauth2::tokens::errors","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"client_id","twitch_oauth2","",5,[[],["clientid",3]]],[11,"token","","",5,[[],["accesstoken",3]]],[11,"login","","",5,[[],["option",4]]],[11,"refresh_token","","",5,[[],[["pin",3],["box",3]]]],[11,"expires","","",5,[[],[["option",4],["instant",3]]]],[11,"scopes","","",5,[[],["option",4]]],[11,"client_id","","",10,[[],["clientid",3]]],[11,"token","","",10,[[],["accesstoken",3]]],[11,"login","","",10,[[],["option",4]]],[11,"refresh_token","","",10,[[],[["pin",3],["box",3]]]],[11,"expires","","",10,[[],[["option",4],["instant",3]]]],[11,"scopes","","",10,[[],["option",4]]],[11,"from","twitch_oauth2::client","",2,[[["invalidheadervalue",3]]]],[11,"from","","",2,[[["invalidheadername",3]]]],[11,"from","twitch_oauth2::scopes","",1,[[["scope",3]]]],[11,"from","","",1,[[["string",3]]]],[11,"from","twitch_oauth2::tokens::errors","",6,[[["parseerror",4]]]],[11,"from","","",6,[[["validationerror",4]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",9,[[["parseerror",4]]]],[11,"clone","twitch_oauth2::id","",3,[[],["twitchtokenresponse",3]]],[11,"clone","","",4,[[],["twitchtokenerrorresponse",3]]],[11,"clone","twitch_oauth2::scopes","",1,[[],["scope",4]]],[11,"clone","twitch_oauth2","",5,[[],["appaccesstoken",3]]],[11,"clone","","",10,[[],["usertoken",3]]],[11,"clone","twitch_oauth2::tokens","",0,[[],["validatedtoken",3]]],[11,"eq","twitch_oauth2::scopes","",1,[[["scope",4]]]],[11,"ne","","",1,[[["scope",4]]]],[11,"fmt","twitch_oauth2::client","",2,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::id","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::scopes","",1,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2","",5,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::tokens::errors","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2","",10,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::tokens","",0,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::client","",2,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::id","",4,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::scopes","",1,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::tokens::errors","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"source","twitch_oauth2::client","",2,[[],[["error",8],["option",4]]]],[11,"source","twitch_oauth2::tokens::errors","",6,[[],[["error",8],["option",4]]]],[11,"source","","",7,[[],[["error",8],["option",4]]]],[11,"source","","",9,[[],[["error",8],["option",4]]]],[11,"serialize","twitch_oauth2::id","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","twitch_oauth2::scopes","",1,[[],["result",4]]],[11,"deserialize","twitch_oauth2::id","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","twitch_oauth2::scopes","",1,[[],["result",4]]],[11,"deserialize","twitch_oauth2::tokens","",0,[[],["result",4]]],[11,"access_token","twitch_oauth2::id","",3,[[],["accesstoken",3]]],[11,"token_type","","",3,[[]]],[11,"expires_in","","",3,[[],[["option",4],["duration",3]]]],[11,"refresh_token","","",3,[[],[["refreshtoken",3],["option",4]]]],[11,"scopes","","",3,[[],[["vec",3],["option",4]]]]],"p":[[3,"ValidatedToken"],[4,"Scope"],[4,"SurfError"],[3,"TwitchTokenResponse"],[3,"TwitchTokenErrorResponse"],[3,"AppAccessToken"],[4,"TokenError"],[4,"ValidationError"],[4,"RevokeTokenError"],[4,"RefreshTokenError"],[3,"UserToken"],[8,"TwitchToken"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);