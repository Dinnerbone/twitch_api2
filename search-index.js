var searchIndex = JSON.parse('{\
"twitch_api2":{"doc":"![github] ![crates-io] ![docs-rs]","i":[[3,"HelixClient","twitch_api2","Client for Helix or the New Twitch API",null,null],[3,"TMIClient","","Client for the twitch TMI endpoint, almost entirely…",null,null],[3,"TwitchClient","","Client for Twitch APIs.",null,null],[12,"helix","","Helix endpoint. See [helix]",0,null],[12,"tmi","","TMI endpoint. See [tmi]",0,null],[0,"helix","","Helix endpoints or the New Twitch API",null,null],[3,"HelixClient","twitch_api2::helix","Client for Helix or the New Twitch API",null,null],[3,"Response","","Response retrieved from endpoint. Data is the type in…",null,null],[12,"data","","Twitch\'s response field for `data`.",1,null],[12,"pagination","","A cursor value, to be used in a subsequent request to…",1,null],[12,"request","","The request that was sent, used for [Paginated]",1,null],[3,"Pagination","","A cursor for pagination. This is needed because of how…",null,null],[4,"Error","","Errors from the query serializer",null,null],[13,"Custom","","{0}",2,null],[13,"TopLevelNotSupported","","serializer only supports structs and maps on top-level",2,null],[12,"location","twitch_api2::helix::Error","Location where this was triggered",3,null],[13,"FieldNotSupported","twitch_api2::helix","field serializer only supports strings, sequences,…",2,null],[12,"location","twitch_api2::helix::Error","Location where this was triggered",4,null],[13,"PairNotSupported","twitch_api2::helix","pair serializer only supports strings, integers, floats,…",2,null],[12,"location","twitch_api2::helix::Error","Location where this was triggered",5,null],[13,"ValueNotSupported","twitch_api2::helix","value serializer only supports primitive types",2,null],[12,"location","twitch_api2::helix::Error","Location where this was triggered",6,null],[4,"RequestError","twitch_api2::helix","Errors for [HelixClient::req_get] and similar functions.",null,null],[13,"HttpError","","http crate returned an error",7,null],[13,"Utf8Error","","could not parse body as utf8: {1}",7,null],[13,"UrlParseError","","url could not be parsed",7,null],[13,"IOError","","io error",7,null],[13,"DeserializeError","","deserialization failed when processing request result",7,null],[13,"QuerySerializeError","","Could not serialize request to query",7,null],[13,"RequestError","","request failed from reqwests side",7,null],[13,"NoPage","","no pagination found",7,null],[13,"PatchParseError","","could not parse response from patch:  {0}",7,null],[13,"Custom","","{0}",7,null],[13,"HelixRequestGetError","","helix returned error {status:?} - {error}: {message:?}…",7,null],[12,"error","twitch_api2::helix::RequestError","Error message related to status code",8,null],[12,"status","","Status code of error, usually 400-499",8,null],[12,"message","","Error message from Twitch",8,null],[12,"url","","URL to the endpoint",8,null],[13,"HelixRequestPutError","twitch_api2::helix","helix returned error {status:?} - {error}: {message:?}…",7,null],[12,"error","twitch_api2::helix::RequestError","Error message related to status code",9,null],[12,"status","","Status code of error, usually 400-499",9,null],[12,"message","","Error message from Twitch",9,null],[12,"url","","URL to the endpoint",9,null],[12,"body","","Body sent with PUT",9,null],[13,"HelixRequestPatchError","twitch_api2::helix","helix returned error {status:?}: {message:?} when calling…",7,null],[12,"status","twitch_api2::helix::RequestError","Status code of error, usually 400-499",10,null],[12,"message","","Error message from Twitch",10,null],[12,"url","","URL to the endpoint",10,null],[12,"body","","Body sent with PUT",10,null],[5,"repeat_query","twitch_api2::helix","Repeat url query items with name",null,[[],["string",3]]],[0,"channels","","Endpoints regarding channels",null,null],[3,"GetChannelInformation","twitch_api2::helix::channels","Return Values for Get Channel Information",null,null],[12,"broadcaster_id","","Twitch User ID of this channel owner",11,null],[12,"game_id","","Current game ID being played on the channel",11,null],[12,"broadcaster_language","","Language of the channel",11,null],[12,"title","","Title of the stream",11,null],[12,"description","","Description of the stream",11,null],[3,"GetChannelInformationRequest","","Query Parameters for Get Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",12,null],[3,"ModifyChannelInformationBody","","Body Parameters for Modify Channel Information",null,null],[12,"game_id","","Current game ID being played on the channel",13,null],[12,"broadcaster_language","","Language of the channel",13,null],[12,"title","","Title of the stream",13,null],[3,"ModifyChannelInformationRequest","","Query Parameters for Modify Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",14,null],[3,"StartCommercial","","Return Values for Start Commercial",null,null],[12,"length","","Length of the triggered commercial",15,null],[12,"message","","Provides contextual information on why the request failed",15,null],[12,"retry_after","","Seconds until the next commercial can be served on this…",15,null],[3,"StartCommercialBody","","Body Parameters for Start Commercial",null,null],[12,"broadcaster_id","","ID of the channel requesting a commercial",16,null],[12,"length","","Desired length of the commercial in seconds. Valid options…",16,null],[3,"StartCommercialRequest","","Query Parameters for Start Commercial",null,null],[4,"ModifyChannelInformation","","Return Values for Modify Channel Information",null,null],[13,"Success","","204 - Channel/Stream updated successfully",17,null],[4,"CommercialLength","","Length of the commercial in seconds",null,null],[13,"Length30","","30s",18,null],[13,"Length60","","60s",18,null],[13,"Length90","","90s",18,null],[13,"Length120","","120s",18,null],[13,"Length150","","150s",18,null],[13,"Length180","","180s",18,null],[0,"get_channel_information","","Gets channel information for users.…",null,null],[3,"GetChannelInformationRequest","twitch_api2::helix::channels::get_channel_information","Query Parameters for Get Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",12,null],[3,"GetChannelInformation","","Return Values for Get Channel Information",null,null],[12,"broadcaster_id","","Twitch User ID of this channel owner",11,null],[12,"game_id","","Current game ID being played on the channel",11,null],[12,"broadcaster_language","","Language of the channel",11,null],[12,"title","","Title of the stream",11,null],[12,"description","","Description of the stream",11,null],[11,"builder","","Create a builder for building…",12,[[],["getchannelinformationrequestbuilder",3]]],[0,"modify_channel_information","twitch_api2::helix::channels","Gets channel information for users.…",null,null],[3,"ModifyChannelInformationRequest","twitch_api2::helix::channels::modify_channel_information","Query Parameters for Modify Channel Information",null,null],[12,"broadcaster_id","","ID of the channel",14,null],[3,"ModifyChannelInformationBody","","Body Parameters for Modify Channel Information",null,null],[12,"game_id","","Current game ID being played on the channel",13,null],[12,"broadcaster_language","","Language of the channel",13,null],[12,"title","","Title of the stream",13,null],[4,"ModifyChannelInformation","","Return Values for Modify Channel Information",null,null],[13,"Success","","204 - Channel/Stream updated successfully",17,null],[11,"builder","","Create a builder for building…",14,[[],["modifychannelinformationrequestbuilder",3]]],[11,"builder","","Create a builder for building…",13,[[],["modifychannelinformationbodybuilder",3]]],[0,"start_commercial","twitch_api2::helix::channels","Starts a commercial on a specified channel.…",null,null],[3,"StartCommercialRequest","twitch_api2::helix::channels::start_commercial","Query Parameters for Start Commercial",null,null],[3,"StartCommercialBody","","Body Parameters for Start Commercial",null,null],[12,"broadcaster_id","","ID of the channel requesting a commercial",16,null],[12,"length","","Desired length of the commercial in seconds. Valid options…",16,null],[3,"StartCommercial","","Return Values for Start Commercial",null,null],[12,"length","","Length of the triggered commercial",15,null],[12,"message","","Provides contextual information on why the request failed",15,null],[12,"retry_after","","Seconds until the next commercial can be served on this…",15,null],[4,"CommercialLength","","Length of the commercial in seconds",null,null],[13,"Length30","","30s",18,null],[13,"Length60","","60s",18,null],[13,"Length90","","90s",18,null],[13,"Length120","","120s",18,null],[13,"Length150","","150s",18,null],[13,"Length180","","180s",18,null],[4,"CommercialLengthParseError","","Error for the `TryFrom` on [CommercialLength]",null,null],[13,"InvalidLength","","invalid length of {0}",19,null],[11,"new","","Create a new [StartCommercialRequest]",20,[[]]],[11,"builder","","Create a builder for building `StartCommercialBody`. On…",16,[[],["startcommercialbodybuilder",3]]],[0,"clips","twitch_api2::helix","Endpoints regarding clips",null,null],[3,"GetClips","twitch_api2::helix::clips","Return Values for Get Clips",null,null],[12,"broadcaster_id","","User ID of the stream from which the clip was created.",21,null],[12,"broadcaster_name","","Display name corresponding to broadcaster_id.",21,null],[12,"created_at","","Date when the clip was created.",21,null],[12,"creator_id","","ID of the user who created the clip.",21,null],[12,"creator_name","","Display name corresponding to creator_id.",21,null],[12,"embed_url","","URL to embed the clip.",21,null],[12,"game_id","","ID of the game assigned to the stream when the clip was…",21,null],[12,"id","","ID of the clip being queried.",21,null],[12,"language","","Language of the stream from which the clip was created.",21,null],[12,"thumbnail_url","","URL of the clip thumbnail.",21,null],[12,"title","","Title of the clip.",21,null],[12,"url","","URL where the clip can be viewed.",21,null],[12,"video_id","","ID of the video from which the clip was created.",21,null],[12,"view_count","","Number of times the clip has been viewed.",21,null],[3,"GetClipsRequest","","Query Parameters for Get Clips",null,null],[12,"broadcaster_id","","ID of the broadcaster for whom clips are returned. The…",22,null],[12,"game_id","","ID of the game for which clips are returned. The number of…",22,null],[12,"id","","ID of the clip being queried. Limit: 100.",22,null],[12,"after","","Cursor for forward pagination: tells the server where to…",22,null],[12,"before","","Cursor for backward pagination: tells the server where to…",22,null],[12,"ended_at","","Ending date/time for returned clips, in RFC3339 format.…",22,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",22,null],[12,"started_at","","Starting date/time for returned clips, in RFC3339 format.…",22,null],[0,"get_clips","","Gets clip information by clip ID (one or more),…",null,null],[3,"GetClipsRequest","twitch_api2::helix::clips::get_clips","Query Parameters for Get Clips",null,null],[12,"broadcaster_id","","ID of the broadcaster for whom clips are returned. The…",22,null],[12,"game_id","","ID of the game for which clips are returned. The number of…",22,null],[12,"id","","ID of the clip being queried. Limit: 100.",22,null],[12,"after","","Cursor for forward pagination: tells the server where to…",22,null],[12,"before","","Cursor for backward pagination: tells the server where to…",22,null],[12,"ended_at","","Ending date/time for returned clips, in RFC3339 format.…",22,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",22,null],[12,"started_at","","Starting date/time for returned clips, in RFC3339 format.…",22,null],[3,"GetClips","","Return Values for Get Clips",null,null],[12,"broadcaster_id","","User ID of the stream from which the clip was created.",21,null],[12,"broadcaster_name","","Display name corresponding to broadcaster_id.",21,null],[12,"created_at","","Date when the clip was created.",21,null],[12,"creator_id","","ID of the user who created the clip.",21,null],[12,"creator_name","","Display name corresponding to creator_id.",21,null],[12,"embed_url","","URL to embed the clip.",21,null],[12,"game_id","","ID of the game assigned to the stream when the clip was…",21,null],[12,"id","","ID of the clip being queried.",21,null],[12,"language","","Language of the stream from which the clip was created.",21,null],[12,"thumbnail_url","","URL of the clip thumbnail.",21,null],[12,"title","","Title of the clip.",21,null],[12,"url","","URL where the clip can be viewed.",21,null],[12,"video_id","","ID of the video from which the clip was created.",21,null],[12,"view_count","","Number of times the clip has been viewed.",21,null],[11,"builder","","Create a builder for building `GetClipsRequest`. On the…",22,[[],["getclipsrequestbuilder",3]]],[0,"moderation","twitch_api2::helix","Endpoints regarding moderation",null,null],[3,"CheckAutoModStatus","twitch_api2::helix::moderation","Return Values for Check AutoMod Status",null,null],[12,"msg_id","","The msg_id passed in the body of the POST message. Maps…",23,null],[12,"is_permitted","","Indicates if this message meets AutoMod requirements.",23,null],[3,"CheckAutoModStatusBody","","Body Parameters for Check AutoMod Status",null,null],[12,"msg_id","","Developer-generated identifier for mapping messages to…",24,null],[12,"msg_text","","Message text.",24,null],[12,"user_id","","User ID of the sender.",24,null],[3,"CheckAutoModStatusRequest","","Query Parameters for Check AutoMod Status",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",25,null],[3,"GetBannedEvents","","Return Values for Get Banned Events",null,null],[12,"id","","Event ID",26,null],[12,"event_type","","Displays `moderation.user.ban` or `moderation.user.unban`",26,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",26,null],[12,"version","","Returns the version of the endpoint.",26,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",26,null],[3,"GetBannedEventsRequest","","Query Parameters for Get Banned Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",27,null],[12,"user_id","","Filters the results and only returns a status object for…",27,null],[12,"after","","Cursor for forward pagination: tells the server where to…",27,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",27,null],[3,"GetBannedUsers","","Return Values for Get Banned Users",null,null],[12,"user_id","","User ID of a user who has been banned.",28,null],[12,"user_name","","Display name of a user who has been banned.",28,null],[12,"expires_at","","RFC3339 formatted timestamp for timeouts; empty string for…",28,null],[3,"GetBannedUsersRequest","","Query Parameters for Get Banned Users",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",29,null],[12,"user_id","","Filters the results and only returns a status object for…",29,null],[12,"after","","Cursor for forward pagination: tells the server where to…",29,null],[3,"GetModeratorEvents","","Return Values for Get Moderators Events",null,null],[12,"id","","Event ID",30,null],[12,"event_type","","Displays `moderation.moderator.add` or…",30,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",30,null],[12,"version","","Returns the version of the endpoint.",30,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",30,null],[3,"GetModeratorEventsRequest","","Query Parameters for Get Moderators Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",31,null],[12,"user_id","","Filters the results and only returns a status object for…",31,null],[12,"after","","Cursor for forward pagination: tells the server where to…",31,null],[3,"GetModerators","","Return Values for Get Moderators",null,null],[3,"GetModeratorsRequest","","Query Parameters for Get Moderators",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",32,null],[12,"after","","Cursor for forward pagination: tells the server where to…",32,null],[0,"get_moderators","","Returns all moderators in a channel. `get-moderators`",null,null],[3,"GetModeratorsRequest","twitch_api2::helix::moderation::get_moderators","Query Parameters for Get Moderators",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",32,null],[12,"after","","Cursor for forward pagination: tells the server where to…",32,null],[3,"GetModerators","","Return Values for Get Moderators",null,null],[11,"builder","","Create a builder for building `GetModeratorsRequest`. On…",32,[[],["getmoderatorsrequestbuilder",3]]],[0,"get_moderator_events","twitch_api2::helix::moderation","Returns a list of moderators or users added and removed as…",null,null],[3,"GetModeratorEventsRequest","twitch_api2::helix::moderation::get_moderator_events","Query Parameters for Get Moderators Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",31,null],[12,"user_id","","Filters the results and only returns a status object for…",31,null],[12,"after","","Cursor for forward pagination: tells the server where to…",31,null],[3,"GetModeratorEvents","","Return Values for Get Moderators Events",null,null],[12,"id","","Event ID",30,null],[12,"event_type","","Displays `moderation.moderator.add` or…",30,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",30,null],[12,"version","","Returns the version of the endpoint.",30,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",30,null],[11,"builder","","Create a builder for building `GetModeratorEventsRequest`.…",31,[[],["getmoderatoreventsrequestbuilder",3]]],[0,"get_banned_users","twitch_api2::helix::moderation","Returns all banned and timed-out users in a channel.…",null,null],[3,"GetBannedUsersRequest","twitch_api2::helix::moderation::get_banned_users","Query Parameters for Get Banned Users",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",29,null],[12,"user_id","","Filters the results and only returns a status object for…",29,null],[12,"after","","Cursor for forward pagination: tells the server where to…",29,null],[3,"GetBannedUsers","","Return Values for Get Banned Users",null,null],[12,"user_id","","User ID of a user who has been banned.",28,null],[12,"user_name","","Display name of a user who has been banned.",28,null],[12,"expires_at","","RFC3339 formatted timestamp for timeouts; empty string for…",28,null],[11,"builder","","Create a builder for building `GetBannedUsersRequest`. On…",29,[[],["getbannedusersrequestbuilder",3]]],[0,"get_banned_events","twitch_api2::helix::moderation","Returns all banned and timed-out users in a channel.…",null,null],[3,"GetBannedEventsRequest","twitch_api2::helix::moderation::get_banned_events","Query Parameters for Get Banned Events",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",27,null],[12,"user_id","","Filters the results and only returns a status object for…",27,null],[12,"after","","Cursor for forward pagination: tells the server where to…",27,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",27,null],[3,"GetBannedEvents","","Return Values for Get Banned Events",null,null],[12,"id","","Event ID",26,null],[12,"event_type","","Displays `moderation.user.ban` or `moderation.user.unban`",26,null],[12,"event_timestamp","","RFC3339 formatted timestamp for events.",26,null],[12,"version","","Returns the version of the endpoint.",26,null],[12,"event_data","","Returns `broadcaster_id`, `broadcaster_name`, `user_id`,…",26,null],[11,"builder","","Create a builder for building `GetBannedEventsRequest`. On…",27,[[],["getbannedeventsrequestbuilder",3]]],[0,"check_automod_status","twitch_api2::helix::moderation","Determines whether a string message meets the channel’s…",null,null],[3,"CheckAutoModStatusRequest","twitch_api2::helix::moderation::check_automod_status","Query Parameters for Check AutoMod Status",null,null],[12,"broadcaster_id","","Must match the User ID in the Bearer token.",25,null],[3,"CheckAutoModStatusBody","","Body Parameters for Check AutoMod Status",null,null],[12,"msg_id","","Developer-generated identifier for mapping messages to…",24,null],[12,"msg_text","","Message text.",24,null],[12,"user_id","","User ID of the sender.",24,null],[3,"CheckAutoModStatus","","Return Values for Check AutoMod Status",null,null],[12,"msg_id","","The msg_id passed in the body of the POST message. Maps…",23,null],[12,"is_permitted","","Indicates if this message meets AutoMod requirements.",23,null],[11,"builder","","Create a builder for building `CheckAutoModStatusRequest`.…",25,[[],["checkautomodstatusrequestbuilder",3]]],[11,"builder","","Create a builder for building `CheckAutoModStatusBody`. On…",24,[[],["checkautomodstatusbodybuilder",3]]],[0,"streams","twitch_api2::helix","Endpoints regarding streams",null,null],[3,"GetStreams","twitch_api2::helix::streams","Return Values for Get Streams",null,null],[12,"game_id","","ID of the game being played on the stream.",33,null],[12,"id","","Stream ID.",33,null],[12,"language","","Stream language.",33,null],[12,"started_at","","UTC timestamp.",33,null],[12,"tag_ids","","Shows tag IDs that apply to the stream.",33,null],[12,"thumbnail_url","","Thumbnail URL of the stream. All image URLs have variable…",33,null],[12,"title","","Stream title.",33,null],[12,"type_","","Stream type: \\\"live\\\" or \\\"\\\" (in case of error).",33,null],[12,"user_id","","ID of the user who is streaming.",33,null],[12,"user_name","","Display name corresponding to user_id.",33,null],[12,"viewer_count","","Number of viewers watching the stream at the time of the…",33,null],[3,"GetStreamsRequest","","Query Parameters for Get Streams",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",34,null],[12,"before","","Cursor for backward pagination: tells the server where to…",34,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",34,null],[12,"game_id","","Returns streams broadcasting a specified game ID. You can…",34,null],[12,"language","","Stream language. You can specify up to 100 languages.",34,null],[12,"user_id","","Returns streams broadcast by one or more specified user…",34,null],[12,"user_login","","Returns streams broadcast by one or more specified user…",34,null],[4,"StreamType","","Gotten from GetStreams.type_",null,null],[13,"Live","","Stream is live.",35,null],[13,"NotLive","","Stream not live",35,null],[0,"get_streams","","Gets information about active streams. `get-streams`",null,null],[3,"GetStreamsRequest","twitch_api2::helix::streams::get_streams","Query Parameters for Get Streams",null,null],[12,"after","","Cursor for forward pagination: tells the server where to…",34,null],[12,"before","","Cursor for backward pagination: tells the server where to…",34,null],[12,"first","","Maximum number of objects to return. Maximum: 100.…",34,null],[12,"game_id","","Returns streams broadcasting a specified game ID. You can…",34,null],[12,"language","","Stream language. You can specify up to 100 languages.",34,null],[12,"user_id","","Returns streams broadcast by one or more specified user…",34,null],[12,"user_login","","Returns streams broadcast by one or more specified user…",34,null],[3,"GetStreams","","Return Values for Get Streams",null,null],[12,"game_id","","ID of the game being played on the stream.",33,null],[12,"id","","Stream ID.",33,null],[12,"language","","Stream language.",33,null],[12,"started_at","","UTC timestamp.",33,null],[12,"tag_ids","","Shows tag IDs that apply to the stream.",33,null],[12,"thumbnail_url","","Thumbnail URL of the stream. All image URLs have variable…",33,null],[12,"title","","Stream title.",33,null],[12,"type_","","Stream type: \\\"live\\\" or \\\"\\\" (in case of error).",33,null],[12,"user_id","","ID of the user who is streaming.",33,null],[12,"user_name","","Display name corresponding to user_id.",33,null],[12,"viewer_count","","Number of viewers watching the stream at the time of the…",33,null],[11,"builder","","Create a builder for building `GetStreamsRequest`. On the…",34,[[],["getstreamsrequestbuilder",3]]],[11,"is_live","twitch_api2::helix::streams","Check if the stream is live or not",35,[[]]],[0,"subscriptions","twitch_api2::helix","Endpoints regarding subscriptions",null,null],[3,"GetBroadcasterSubscriptions","twitch_api2::helix::subscriptions","Return Values for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster.",36,null],[12,"broadcaster_name","","Display name of the broadcaster.",36,null],[12,"is_gift","","Determines if the subscription is a gift subscription.",36,null],[12,"tier","","Type of subscription (Tier 1, Tier 2, Tier 3). 1000 = Tier…",36,null],[12,"plan_name","","Name of the subscription.",36,null],[12,"user_id","","ID of the subscribed user.",36,null],[12,"user_name","","Display name of the subscribed user.",36,null],[3,"GetBroadcasterSubscriptionsRequest","","Query Parameters for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster. Must match the User ID in the…",37,null],[12,"user_id","","Unique identifier of account to get subscription status…",37,null],[12,"after","","Cursor for forward pagination: tells the server where to…",37,null],[0,"get_broadcaster_subscriptions","","Get all of a broadcaster’s subscriptions.…",null,null],[3,"GetBroadcasterSubscriptionsRequest","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","Query Parameters for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster. Must match the User ID in the…",37,null],[12,"user_id","","Unique identifier of account to get subscription status…",37,null],[12,"after","","Cursor for forward pagination: tells the server where to…",37,null],[3,"GetBroadcasterSubscriptions","","Return Values for Get Broadcaster Subscriptions",null,null],[12,"broadcaster_id","","User ID of the broadcaster.",36,null],[12,"broadcaster_name","","Display name of the broadcaster.",36,null],[12,"is_gift","","Determines if the subscription is a gift subscription.",36,null],[12,"tier","","Type of subscription (Tier 1, Tier 2, Tier 3). 1000 = Tier…",36,null],[12,"plan_name","","Name of the subscription.",36,null],[12,"user_id","","ID of the subscribed user.",36,null],[12,"user_name","","Display name of the subscribed user.",36,null],[11,"builder","","Create a builder for building…",37,[[],["getbroadcastersubscriptionsrequestbuilder",3]]],[0,"users","twitch_api2::helix","Endpoints regarding users",null,null],[3,"GetUsers","twitch_api2::helix::users","Return Values for Get Users",null,null],[12,"broadcaster_type","","User’s broadcaster type: \\\"partner\\\", \\\"affiliate\\\", or \\\"\\\".",38,null],[12,"description","","User’s channel description.",38,null],[12,"display_name","","User’s display name.",38,null],[12,"email","","User’s email address. Returned if the request includes the…",38,null],[12,"id","","User’s ID.",38,null],[12,"login","","User’s login name.",38,null],[12,"offline_image_url","","URL of the user’s offline image.",38,null],[12,"profile_image_url","","URL of the user’s profile image.",38,null],[12,"type_","","User’s type: \\\"staff\\\", \\\"admin\\\", \\\"global_mod\\\", or \\\"\\\".",38,null],[12,"view_count","","Total number of views of the user’s channel.",38,null],[3,"GetUsersRequest","","Query Parameters for Get Users",null,null],[12,"id","","User ID. Multiple user IDs can be specified. Limit: 100.",39,null],[12,"login","","User login name. Multiple login names can be specified.…",39,null],[0,"get_users","","Gets information about one or more specified Twitch users.…",null,null],[3,"GetUsersRequest","twitch_api2::helix::users::get_users","Query Parameters for Get Users",null,null],[12,"id","","User ID. Multiple user IDs can be specified. Limit: 100.",39,null],[12,"login","","User login name. Multiple login names can be specified.…",39,null],[3,"GetUsers","","Return Values for Get Users",null,null],[12,"broadcaster_type","","User’s broadcaster type: \\\"partner\\\", \\\"affiliate\\\", or \\\"\\\".",38,null],[12,"description","","User’s channel description.",38,null],[12,"display_name","","User’s display name.",38,null],[12,"email","","User’s email address. Returned if the request includes the…",38,null],[12,"id","","User’s ID.",38,null],[12,"login","","User’s login name.",38,null],[12,"offline_image_url","","URL of the user’s offline image.",38,null],[12,"profile_image_url","","URL of the user’s profile image.",38,null],[12,"type_","","User’s type: \\\"staff\\\", \\\"admin\\\", \\\"global_mod\\\", or \\\"\\\".",38,null],[12,"view_count","","Total number of views of the user’s channel.",38,null],[11,"builder","","Create a builder for building `GetUsersRequest`. On the…",39,[[],["getusersrequestbuilder",3]]],[6,"Cursor","twitch_api2::helix","A cursor is a pointer to the current \\\"page\\\" in the twitch…",null,null],[8,"Request","","A request is a Twitch endpoint, see New Twitch API reference",null,null],[18,"PATH","","The path to the endpoint relative to the helix root. eg.…",40,null],[18,"SCOPE","","Scopes needed by this endpoint",40,null],[18,"OPT_SCOPE","","Optional scopes needed by this endpoint",40,null],[16,"Response","","Response type. twitch\'s response will  deserialize to this.",40,null],[11,"query","","Defines layout of the url parameters.",40,[[],[["string",3],["result",4],["error",4]]]],[8,"RequestPost","","Helix endpoint POSTs information",null,null],[16,"Body","","Body parameters",41,null],[11,"body","","Create body text from [RequestPost::Body]",41,[[],[["string",3],["result",4],["error",3]]]],[8,"RequestPatch","","Helix endpoint PATCHs information",null,null],[16,"Body","","Body parameters",42,null],[11,"body","","Create body text from [RequestPost::Body]",42,[[],[["string",3],["result",4],["error",3]]]],[8,"RequestGet","","Helix endpoint GETs information",null,null],[8,"Paginated","","Request can be paginated with a cursor",null,null],[10,"set_pagination","","Should returns the current pagination cursor.",43,[[["cursor",6]]]],[11,"with_client","","Create a new client with an existing client",44,[[],["helixclient",3]]],[11,"new","","Create a new [HelixClient] with a default…",44,[[],["helixclient",3]]],[11,"clone_client","","Retrieve a clone of the [HttpClient][crate::HttpClient]…",44,[[]]],[11,"req_get","","Request on a valid [RequestGet] endpoint",44,[[]]],[11,"req_post","","Request on a valid [RequestPost] endpoint",44,[[]]],[11,"req_patch","","Request on a valid [RequestPatch] endpoint",44,[[]]],[11,"get_next","","Get the next page in the responses.",1,[[["helixclient",3]]]],[0,"tmi","twitch_api2","TMI Endpoint, twitch\'s unsupported api for better chatters…",null,null],[3,"TMIClient","twitch_api2::tmi","Client for the twitch TMI endpoint, almost entirely…",null,null],[3,"GetChatters","","Returned by TMI at…",null,null],[12,"chatter_count","","Amount of connected users",45,null],[12,"chatters","","Lists of users in their \\\"rank\\\"",45,null],[3,"Chatters","","List of \\\"rank\\\"s and what users are in them. A user can…",null,null],[12,"broadcaster","","Broadcaster, can (probably) only be one",46,null],[12,"vips","","VIPS in the chat, have the VIP badge and are set with…",46,null],[12,"moderators","","Moderators in the chat, have a moderator badge and are set…",46,null],[12,"staff","","Twitch Staff in the chat, have a staff badge.",46,null],[12,"admins","","Twitch Admins in the chat, have an admin badge, akin to…",46,null],[12,"global_mods","","Twitch Global Moderators in the chat, have an admin badge,…",46,null],[12,"viewers","","Regular viewer in the chat, includes followers and…",46,null],[4,"RequestError","","Errors for [TMIClient] requests",null,null],[13,"HttpError","","http crate returned an error",47,null],[13,"DeserializeError","","deserialization failed",47,null],[13,"RequestError","","request failed",47,null],[13,"Utf8Error","","could not parse body as utf8: {1}",47,null],[6,"Nickname","","Nickname",null,null],[11,"new","","Create a new client with a default",48,[[],["tmiclient",3]]],[11,"with_client","","Create a new [TMIClient] with an existing…",48,[[],["tmiclient",3]]],[11,"clone_client","","Retrieve a clone of the [HttpClient][crate::HttpClient]…",48,[[]]],[11,"get_chatters","","Get all the chatters in the chat",48,[[]]],[0,"client","twitch_api2","Different clients you can use with this crate to call the…",null,null],[3,"DummyHttpClient","twitch_api2::client","A client that will never work, used to trick documentation…",null,null],[4,"SurfError","","Possible errors from [Client::req()] when using…",null,null],[13,"Surf","","surf failed to do the request: {0}",49,null],[13,"InvalidHeaderValue","","could not construct header value",49,null],[13,"InvalidHeaderName","","could not construct header name",49,null],[13,"UrlError","","uri could not be translated into an url.",49,null],[6,"BoxedFuture","","A boxed future, mimics `futures::future::BoxFuture`",null,null],[6,"Req","","The request type we\'re expecting with body.",null,null],[6,"Response","","The response type we\'re expecting with body",null,null],[8,"Client","","A client that can do requests",null,null],[16,"Error","","Error returned by the client",50,null],[10,"req","","Send a request",50,[[["req",6]],[["boxedfuture",6],["result",4]]]],[11,"new","twitch_api2","Create a new [TwitchClient]",0,[[],["twitchclient",3]]],[11,"with_client","","Create a new [TwitchClient] with an existing [HttpClient]",0,[[],["twitchclient",3]]],[11,"from","twitch_api2::helix","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","twitch_api2::tmi","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","twitch_api2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","twitch_api2::helix","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","twitch_api2::helix::channels::get_channel_information","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","twitch_api2::helix::channels::modify_channel_information","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","twitch_api2::helix::channels::start_commercial","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","twitch_api2::helix::channels::modify_channel_information","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","twitch_api2::helix::channels::start_commercial","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"equivalent","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","twitch_api2::helix::clips::get_clips","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","twitch_api2::helix::moderation::check_automod_status","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","twitch_api2::helix::moderation::get_banned_events","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","twitch_api2::helix::moderation::get_banned_users","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","twitch_api2::helix::moderation::get_moderator_events","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","twitch_api2::helix::moderation::get_moderators","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","twitch_api2::helix::streams::get_streams","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","twitch_api2::helix::streams","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","twitch_api2::helix::users::get_users","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","twitch_api2::tmi","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","twitch_api2::client","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"body","twitch_api2::helix::moderation::check_automod_status","",25,[[],[["string",3],["result",4],["error",3]]]],[11,"set_pagination","twitch_api2::helix::clips::get_clips","",22,[[["cursor",6]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_moderators","",32,[[["cursor",6]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_moderator_events","",31,[[["cursor",6]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_banned_users","",29,[[["cursor",6]]]],[11,"set_pagination","twitch_api2::helix::moderation::get_banned_events","",27,[[["cursor",6]]]],[11,"set_pagination","twitch_api2::helix::streams::get_streams","",34,[[["cursor",6]]]],[11,"set_pagination","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",37,[[["cursor",6]]]],[11,"req","twitch_api2::client","",53,[[["req",6]],[["result",4],["boxedfuture",6]]]],[11,"from","twitch_api2::helix","",7,[[["error",3]]]],[11,"from","","",7,[[["parseerror",4]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",7,[[["error",4]]]],[11,"from","twitch_api2::tmi","",47,[[["error",3]]]],[11,"from","","",47,[[["error",3]]]],[11,"from","","",47,[[["box",3]]]],[11,"from","twitch_api2::client","",49,[[["invalidheadervalue",3]]]],[11,"from","","",49,[[["invalidheadername",3]]]],[11,"from","","",49,[[["parseerror",4]]]],[11,"clone","twitch_api2::helix::channels::get_channel_information","",12,[[],["getchannelinformationrequest",3]]],[11,"clone","","",11,[[],["getchannelinformation",3]]],[11,"clone","twitch_api2::helix::channels::modify_channel_information","",14,[[],["modifychannelinformationrequest",3]]],[11,"clone","","",13,[[],["modifychannelinformationbody",3]]],[11,"clone","","",17,[[],["modifychannelinformation",4]]],[11,"clone","twitch_api2::helix::channels::start_commercial","",18,[[],["commerciallength",4]]],[11,"clone","","",20,[[],["startcommercialrequest",3]]],[11,"clone","","",16,[[],["startcommercialbody",3]]],[11,"clone","","",15,[[],["startcommercial",3]]],[11,"clone","twitch_api2::helix::clips::get_clips","",22,[[],["getclipsrequest",3]]],[11,"clone","","",21,[[],["getclips",3]]],[11,"clone","twitch_api2::helix::moderation::get_moderators","",32,[[],["getmoderatorsrequest",3]]],[11,"clone","","",52,[[],["getmoderators",3]]],[11,"clone","twitch_api2::helix::moderation::get_moderator_events","",31,[[],["getmoderatoreventsrequest",3]]],[11,"clone","","",30,[[],["getmoderatorevents",3]]],[11,"clone","twitch_api2::helix::moderation::get_banned_users","",29,[[],["getbannedusersrequest",3]]],[11,"clone","","",28,[[],["getbannedusers",3]]],[11,"clone","twitch_api2::helix::moderation::get_banned_events","",27,[[],["getbannedeventsrequest",3]]],[11,"clone","","",26,[[],["getbannedevents",3]]],[11,"clone","twitch_api2::helix::moderation::check_automod_status","",25,[[],["checkautomodstatusrequest",3]]],[11,"clone","","",24,[[],["checkautomodstatusbody",3]]],[11,"clone","","",23,[[],["checkautomodstatus",3]]],[11,"clone","twitch_api2::helix::streams","",35,[[],["streamtype",4]]],[11,"clone","twitch_api2::helix::streams::get_streams","",34,[[],["getstreamsrequest",3]]],[11,"clone","","",33,[[],["getstreams",3]]],[11,"clone","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",37,[[],["getbroadcastersubscriptionsrequest",3]]],[11,"clone","","",36,[[],["getbroadcastersubscriptions",3]]],[11,"clone","twitch_api2::helix::users::get_users","",39,[[],["getusersrequest",3]]],[11,"clone","","",38,[[],["getusers",3]]],[11,"clone","twitch_api2::helix","",44,[[],["helixclient",3]]],[11,"clone","","",51,[[],["pagination",3]]],[11,"clone","twitch_api2::tmi","",48,[[],["tmiclient",3]]],[11,"clone","twitch_api2::client","",53,[[],["dummyhttpclient",3]]],[11,"clone","twitch_api2","",0,[[],["twitchclient",3]]],[11,"default","twitch_api2::helix::channels::start_commercial","",20,[[]]],[11,"default","twitch_api2::helix::moderation::check_automod_status","",24,[[],["checkautomodstatusbody",3]]],[11,"default","twitch_api2::helix","",44,[[],["helixclient",3]]],[11,"default","","",51,[[],["pagination",3]]],[11,"default","twitch_api2::tmi","",48,[[],["tmiclient",3]]],[11,"default","twitch_api2::client","",53,[[],["dummyhttpclient",3]]],[11,"default","twitch_api2","",0,[[],["twitchclient",3]]],[11,"eq","twitch_api2::helix::channels::get_channel_information","",12,[[["getchannelinformationrequest",3]]]],[11,"ne","","",12,[[["getchannelinformationrequest",3]]]],[11,"eq","","",11,[[["getchannelinformation",3]]]],[11,"ne","","",11,[[["getchannelinformation",3]]]],[11,"eq","twitch_api2::helix::channels::modify_channel_information","",14,[[["modifychannelinformationrequest",3]]]],[11,"ne","","",14,[[["modifychannelinformationrequest",3]]]],[11,"eq","","",13,[[["modifychannelinformationbody",3]]]],[11,"ne","","",13,[[["modifychannelinformationbody",3]]]],[11,"eq","","",17,[[["modifychannelinformation",4]]]],[11,"eq","twitch_api2::helix::channels::start_commercial","",18,[[["commerciallength",4]]]],[11,"eq","","",20,[[["startcommercialrequest",3]]]],[11,"eq","","",16,[[["startcommercialbody",3]]]],[11,"ne","","",16,[[["startcommercialbody",3]]]],[11,"eq","","",15,[[["startcommercial",3]]]],[11,"ne","","",15,[[["startcommercial",3]]]],[11,"eq","twitch_api2::helix::clips::get_clips","",22,[[["getclipsrequest",3]]]],[11,"ne","","",22,[[["getclipsrequest",3]]]],[11,"eq","","",21,[[["getclips",3]]]],[11,"ne","","",21,[[["getclips",3]]]],[11,"eq","twitch_api2::helix::moderation::get_moderators","",32,[[["getmoderatorsrequest",3]]]],[11,"ne","","",32,[[["getmoderatorsrequest",3]]]],[11,"eq","","",52,[[["getmoderators",3]]]],[11,"ne","","",52,[[["getmoderators",3]]]],[11,"eq","twitch_api2::helix::moderation::get_moderator_events","",31,[[["getmoderatoreventsrequest",3]]]],[11,"ne","","",31,[[["getmoderatoreventsrequest",3]]]],[11,"eq","","",30,[[["getmoderatorevents",3]]]],[11,"ne","","",30,[[["getmoderatorevents",3]]]],[11,"eq","twitch_api2::helix::moderation::get_banned_users","",29,[[["getbannedusersrequest",3]]]],[11,"ne","","",29,[[["getbannedusersrequest",3]]]],[11,"eq","","",28,[[["getbannedusers",3]]]],[11,"ne","","",28,[[["getbannedusers",3]]]],[11,"eq","twitch_api2::helix::moderation::get_banned_events","",27,[[["getbannedeventsrequest",3]]]],[11,"ne","","",27,[[["getbannedeventsrequest",3]]]],[11,"eq","","",26,[[["getbannedevents",3]]]],[11,"ne","","",26,[[["getbannedevents",3]]]],[11,"eq","twitch_api2::helix::moderation::check_automod_status","",25,[[["checkautomodstatusrequest",3]]]],[11,"ne","","",25,[[["checkautomodstatusrequest",3]]]],[11,"eq","","",24,[[["checkautomodstatusbody",3]]]],[11,"ne","","",24,[[["checkautomodstatusbody",3]]]],[11,"eq","","",23,[[["checkautomodstatus",3]]]],[11,"ne","","",23,[[["checkautomodstatus",3]]]],[11,"eq","twitch_api2::helix::streams","",35,[[["streamtype",4]]]],[11,"eq","twitch_api2::helix::streams::get_streams","",34,[[["getstreamsrequest",3]]]],[11,"ne","","",34,[[["getstreamsrequest",3]]]],[11,"eq","","",33,[[["getstreams",3]]]],[11,"ne","","",33,[[["getstreams",3]]]],[11,"eq","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",37,[[["getbroadcastersubscriptionsrequest",3]]]],[11,"ne","","",37,[[["getbroadcastersubscriptionsrequest",3]]]],[11,"eq","","",36,[[["getbroadcastersubscriptions",3]]]],[11,"ne","","",36,[[["getbroadcastersubscriptions",3]]]],[11,"eq","twitch_api2::helix::users::get_users","",39,[[["getusersrequest",3]]]],[11,"ne","","",39,[[["getusersrequest",3]]]],[11,"eq","","",38,[[["getusers",3]]]],[11,"ne","","",38,[[["getusers",3]]]],[11,"eq","twitch_api2::helix","",1,[[["response",3]]]],[11,"ne","","",1,[[["response",3]]]],[11,"eq","","",51,[[["pagination",3]]]],[11,"ne","","",51,[[["pagination",3]]]],[11,"fmt","twitch_api2::helix::channels::get_channel_information","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::channels::modify_channel_information","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::channels::start_commercial","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::clips::get_clips","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_moderators","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_moderator_events","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_banned_users","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::get_banned_events","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::moderation::check_automod_status","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::streams","",35,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::streams::get_streams","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::users::get_users","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::tmi","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::client","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix::channels::start_commercial","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::helix","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::tmi","",47,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_api2::client","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"try_from","twitch_api2::helix::channels::modify_channel_information","",17,[[["statuscode",3]],["result",4]]],[11,"try_from","twitch_api2::helix::channels::start_commercial","",18,[[],["result",4]]],[11,"source","twitch_api2::helix","",7,[[],[["option",4],["error",8]]]],[11,"source","twitch_api2::tmi","",47,[[],[["option",4],["error",8]]]],[11,"source","twitch_api2::client","",49,[[],[["option",4],["error",8]]]],[11,"custom","twitch_api2::helix","",2,[[["display",8]]]],[11,"serialize","twitch_api2::helix::channels::get_channel_information","",12,[[],["result",4]]],[11,"serialize","twitch_api2::helix::channels::modify_channel_information","",14,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","twitch_api2::helix::channels::start_commercial","",18,[[],["result",4]]],[11,"serialize","","",20,[[],["result",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"serialize","twitch_api2::helix::clips::get_clips","",22,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_moderators","",32,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_moderator_events","",31,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_banned_users","",29,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::get_banned_events","",27,[[],["result",4]]],[11,"serialize","twitch_api2::helix::moderation::check_automod_status","",25,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","twitch_api2::helix::streams::get_streams","",34,[[],["result",4]]],[11,"serialize","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",37,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","twitch_api2::helix::users::get_users","",39,[[],["result",4]]],[11,"serialize","twitch_api2::helix","",51,[[],["result",4]]],[11,"serialize","twitch_api2::tmi","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::channels::get_channel_information","",12,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::channels::modify_channel_information","",14,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::channels::start_commercial","",18,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",16,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::clips::get_clips","",22,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_moderators","",32,[[],["result",4]]],[11,"deserialize","","",52,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_moderator_events","",31,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_banned_users","",29,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::get_banned_events","",27,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::moderation::check_automod_status","",25,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::streams","",35,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::streams::get_streams","",34,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::subscriptions::get_broadcaster_subscriptions","",37,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","twitch_api2::helix::users::get_users","",39,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","twitch_api2::helix","",51,[[],["result",4]]],[11,"deserialize","twitch_api2::tmi","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]]],"p":[[3,"TwitchClient"],[3,"Response"],[4,"Error"],[13,"TopLevelNotSupported"],[13,"FieldNotSupported"],[13,"PairNotSupported"],[13,"ValueNotSupported"],[4,"RequestError"],[13,"HelixRequestGetError"],[13,"HelixRequestPutError"],[13,"HelixRequestPatchError"],[3,"GetChannelInformation"],[3,"GetChannelInformationRequest"],[3,"ModifyChannelInformationBody"],[3,"ModifyChannelInformationRequest"],[3,"StartCommercial"],[3,"StartCommercialBody"],[4,"ModifyChannelInformation"],[4,"CommercialLength"],[4,"CommercialLengthParseError"],[3,"StartCommercialRequest"],[3,"GetClips"],[3,"GetClipsRequest"],[3,"CheckAutoModStatus"],[3,"CheckAutoModStatusBody"],[3,"CheckAutoModStatusRequest"],[3,"GetBannedEvents"],[3,"GetBannedEventsRequest"],[3,"GetBannedUsers"],[3,"GetBannedUsersRequest"],[3,"GetModeratorEvents"],[3,"GetModeratorEventsRequest"],[3,"GetModeratorsRequest"],[3,"GetStreams"],[3,"GetStreamsRequest"],[4,"StreamType"],[3,"GetBroadcasterSubscriptions"],[3,"GetBroadcasterSubscriptionsRequest"],[3,"GetUsers"],[3,"GetUsersRequest"],[8,"Request"],[8,"RequestPost"],[8,"RequestPatch"],[8,"Paginated"],[3,"HelixClient"],[3,"GetChatters"],[3,"Chatters"],[4,"RequestError"],[3,"TMIClient"],[4,"SurfError"],[8,"Client"],[3,"Pagination"],[3,"GetModerators"],[3,"DummyHttpClient"]]},\
"twitch_oauth2":{"doc":"![github] ![crates-io] ![docs-rs]","i":[[3,"AppAccessToken","twitch_oauth2","An App Access Token from the OAuth client credentials flow",null,null],[3,"UserToken","","An User Token from the OAuth implicit code flow or OAuth…",null,null],[3,"ValidatedToken","","Token validation returned from…",null,null],[12,"client_id","","Client ID associated with the token. Twitch requires this…",0,null],[12,"login","","Username associated with the token",0,null],[12,"user_id","","User ID associated with the token",0,null],[12,"scopes","","Scopes attached to the token.",0,null],[4,"Scope","","Scopes for twitch.",null,null],[13,"AnalyticsReadExtensions","","View analytics data for your extensions.",1,null],[13,"UserEdit","","Manage a user object.",1,null],[13,"UserReadEmail","","Read authorized user\'s email address.",1,null],[13,"UserReadStreamKey","","Read authorized user’s stream key.",1,null],[13,"ClipsEdit","","Create and edit clips as a specific user.",1,null],[13,"BitsRead","","View bits information for your channel.",1,null],[13,"AnalyticsReadGames","","View analytics data for your games.",1,null],[13,"UserEditBroadcast","","Edit your channel\'s broadcast configuration, including…",1,null],[13,"UserReadBroadcast","","View your broadcasting configuration, including extension…",1,null],[13,"ChatRead","","View live Stream Chat and Rooms messages",1,null],[13,"ChatEdit","","Send live Stream Chat and Rooms messages",1,null],[13,"ChannelModerate","","Perform moderation actions in a channel",1,null],[13,"ChannelReadSubscriptions","","Get a list of all subscribers to your channel and check if…",1,null],[13,"ChannelReadHypeTrain","","",1,null],[13,"WhispersRead","","View your whisper messages.",1,null],[13,"WhispersEdit","","Send whisper messages.",1,null],[13,"ModerationRead","","View your channel\'s moderation data including Moderators,…",1,null],[13,"ChannelReadRedemptions","","View your channel points custom reward redemptions",1,null],[13,"ChannelEditCommercial","","Start a commercial on authorized channels",1,null],[13,"Other","","Other scope that is not implemented.",1,null],[5,"validate_token","","Validate this token.",null,[[["accesstoken",3]]]],[5,"revoke_token","","Revoke the token.",null,[[["accesstoken",3],["clientid",3]]]],[5,"refresh_token","","Refresh the token, call if it has expired.",null,[[["clientsecret",3],["clientid",3],["refreshtoken",3]]]],[0,"client","","Provides different http clients",null,null],[5,"reqwest_http_client","twitch_oauth2::client","Asynchronous HTTP client.",null,[[["httprequest",3]]]],[4,"SurfError","","Possible errors for [surf_http_client][http_client]",null,null],[13,"Surf","","surf failed to do the request: {0}",2,null],[13,"InvalidHeaderValue","","could not construct header value",2,null],[13,"InvalidHeaderName","","could not construct header name",2,null],[5,"surf_http_client","","Asynchronous HTTP client using [Surf][surf::Client]",null,[[["httprequest",3]]]],[0,"id","twitch_oauth2","Representation of oauth2 flow in `id.twitch.tv`",null,null],[3,"TwitchTokenResponse","twitch_oauth2::id","Twitch\'s representation of the oauth flow.",null,null],[12,"access_token","","Access token",3,null],[12,"token_type","","Token type",3,null],[12,"expires_in","","Time (in seconds) until token expires",3,null],[12,"refresh_token","","Token that can be used to refresh",3,null],[12,"scopes","","Scopes attached to token",3,null],[12,"extra_fields","","Extras",3,null],[3,"TwitchTokenErrorResponse","","Twitch\'s representation of the oauth flow for errors",null,null],[12,"status","","Status code of error",4,null],[12,"message","","Message attached to error",4,null],[6,"TwitchClient","","Client for Twitch OAuth2",null,null],[0,"scopes","twitch_oauth2","Module for all possible scopes in twitch.",null,null],[4,"Scope","twitch_oauth2::scopes","Scopes for twitch.",null,null],[13,"AnalyticsReadExtensions","","View analytics data for your extensions.",1,null],[13,"UserEdit","","Manage a user object.",1,null],[13,"UserReadEmail","","Read authorized user\'s email address.",1,null],[13,"UserReadStreamKey","","Read authorized user’s stream key.",1,null],[13,"ClipsEdit","","Create and edit clips as a specific user.",1,null],[13,"BitsRead","","View bits information for your channel.",1,null],[13,"AnalyticsReadGames","","View analytics data for your games.",1,null],[13,"UserEditBroadcast","","Edit your channel\'s broadcast configuration, including…",1,null],[13,"UserReadBroadcast","","View your broadcasting configuration, including extension…",1,null],[13,"ChatRead","","View live Stream Chat and Rooms messages",1,null],[13,"ChatEdit","","Send live Stream Chat and Rooms messages",1,null],[13,"ChannelModerate","","Perform moderation actions in a channel",1,null],[13,"ChannelReadSubscriptions","","Get a list of all subscribers to your channel and check if…",1,null],[13,"ChannelReadHypeTrain","","",1,null],[13,"WhispersRead","","View your whisper messages.",1,null],[13,"WhispersEdit","","Send whisper messages.",1,null],[13,"ModerationRead","","View your channel\'s moderation data including Moderators,…",1,null],[13,"ChannelReadRedemptions","","View your channel points custom reward redemptions",1,null],[13,"ChannelEditCommercial","","Start a commercial on authorized channels",1,null],[13,"Other","","Other scope that is not implemented.",1,null],[11,"as_oauth_scope","","Get [Scope] as [oauth2::Scope]",1,[[],["scope",3]]],[11,"all","","Get a vec of all defined twitch [Scopes][Scope]",1,[[],[["scope",4],["vec",3]]]],[0,"tokens","twitch_oauth2","Twitch token types",null,null],[3,"AppAccessToken","twitch_oauth2::tokens","An App Access Token from the OAuth client credentials flow",null,null],[3,"UserToken","","An User Token from the OAuth implicit code flow or OAuth…",null,null],[3,"ValidatedToken","","Token validation returned from…",null,null],[12,"client_id","","Client ID associated with the token. Twitch requires this…",0,null],[12,"login","","Username associated with the token",0,null],[12,"user_id","","User ID associated with the token",0,null],[12,"scopes","","Scopes attached to the token.",0,null],[11,"from_existing_unchecked","twitch_oauth2","Assemble token without checks.",5,[[["string",3],["accesstoken",3],["vec",3],["option",4],["option",4]],["appaccesstoken",3]]],[11,"from_existing","","Assemble token and validate it. Retrieves `client_id` and…",5,[[["accesstoken",3],["clientsecret",3]]]],[11,"get_app_access_token","","Generate app access token via OAuth client credentials flow",5,[[["clientid",3],["scope",4],["clientsecret",3],["vec",3]]]],[0,"errors","twitch_oauth2::tokens","Errors",null,null],[4,"TokenError","twitch_oauth2::tokens::errors","General errors for talking with twitch, currently only…",null,null],[13,"Request","","request for token failed. {0}",6,null],[13,"ParseError","","could not parse url",6,null],[13,"ValidationError","","could not get validation for token",6,null],[4,"ValidationError","","Errors for [validate_token][crate::validate_token]",null,null],[13,"DeserializeError","","deserializations failed",7,null],[13,"NotAuthorized","","token is not authorized for use",7,null],[13,"TwitchError","","twitch returned an unexpected status: {0}",7,null],[13,"Request","","failed to request validation: {0}",7,null],[4,"RevokeTokenError","","Errors for [revoke_token][crate::revoke_token]",null,null],[13,"BadRequest","","400 Bad Request: {0}",8,null],[13,"RequestError","","failed to do revokation: {0}",8,null],[13,"Other","","got unexpected return: {0:?}",8,null],[4,"RefreshTokenError","","Errors for…",null,null],[13,"RequestError","","request for token failed. {0}",9,null],[13,"ParseError","","could not parse url",9,null],[13,"NoRefreshToken","","no refresh token found",9,null],[11,"from_existing_unchecked","twitch_oauth2","Assemble token without checks.",10,[[["string",3],["vec",3],["option",4],["option",4]],["usertoken",3]]],[11,"from_existing","","Assemble token and validate it. Retrieves `login`,…",10,[[["accesstoken",3]]]],[8,"TwitchToken","twitch_oauth2::tokens","Trait for twitch tokens to get fields and generalize over…",null,null],[10,"client_id","","Get the client-id. Twitch requires this in all helix api…",11,[[],["clientid",3]]],[10,"token","","Get the [AccessToken] for authenticating",11,[[],["accesstoken",3]]],[10,"login","","Get the username associated to this token",11,[[],["option",4]]],[10,"refresh_token","","Refresh this token, changing the token to a newer one",11,[[],[["pin",3],["box",3]]]],[10,"expires","","Get instant when token will expire.",11,[[],[["instant",3],["option",4]]]],[10,"scopes","","Retrieve scopes attached to the token",11,[[],["option",4]]],[11,"validate_token","","Validate this token. Should be checked on regularly,…",11,[[],[["box",3],["pin",3]]]],[11,"revoke_token","","Revoke the token. See…",11,[[],[["box",3],["pin",3]]]],[8,"TwitchToken","twitch_oauth2","Trait for twitch tokens to get fields and generalize over…",null,null],[10,"client_id","","Get the client-id. Twitch requires this in all helix api…",11,[[],["clientid",3]]],[10,"token","","Get the [AccessToken] for authenticating",11,[[],["accesstoken",3]]],[10,"login","","Get the username associated to this token",11,[[],["option",4]]],[10,"refresh_token","","Refresh this token, changing the token to a newer one",11,[[],[["pin",3],["box",3]]]],[10,"expires","","Get instant when token will expire.",11,[[],[["instant",3],["option",4]]]],[10,"scopes","","Retrieve scopes attached to the token",11,[[],["option",4]]],[11,"validate_token","","Validate this token. Should be checked on regularly,…",11,[[],[["box",3],["pin",3]]]],[11,"revoke_token","","Revoke the token. See…",11,[[],[["box",3],["pin",3]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","twitch_oauth2::tokens","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","twitch_oauth2::scopes","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","twitch_oauth2::client","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","twitch_oauth2::id","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","twitch_oauth2::tokens::errors","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"client_id","twitch_oauth2","",5,[[],["clientid",3]]],[11,"token","","",5,[[],["accesstoken",3]]],[11,"login","","",5,[[],["option",4]]],[11,"refresh_token","","",5,[[],[["pin",3],["box",3]]]],[11,"expires","","",5,[[],[["instant",3],["option",4]]]],[11,"scopes","","",5,[[],["option",4]]],[11,"client_id","","",10,[[],["clientid",3]]],[11,"token","","",10,[[],["accesstoken",3]]],[11,"login","","",10,[[],["option",4]]],[11,"refresh_token","","",10,[[],[["pin",3],["box",3]]]],[11,"expires","","",10,[[],[["instant",3],["option",4]]]],[11,"scopes","","",10,[[],["option",4]]],[11,"from","twitch_oauth2::client","",2,[[["invalidheadervalue",3]]]],[11,"from","","",2,[[["invalidheadername",3]]]],[11,"from","twitch_oauth2::scopes","",1,[[["scope",3]]]],[11,"from","twitch_oauth2::tokens::errors","",6,[[["parseerror",4]]]],[11,"from","","",6,[[["validationerror",4]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",9,[[["parseerror",4]]]],[11,"clone","twitch_oauth2::id","",3,[[],["twitchtokenresponse",3]]],[11,"clone","","",4,[[],["twitchtokenerrorresponse",3]]],[11,"clone","twitch_oauth2::scopes","",1,[[],["scope",4]]],[11,"clone","twitch_oauth2","",5,[[],["appaccesstoken",3]]],[11,"clone","","",10,[[],["usertoken",3]]],[11,"clone","twitch_oauth2::tokens","",0,[[],["validatedtoken",3]]],[11,"fmt","twitch_oauth2::client","",2,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::id","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::scopes","",1,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2","",5,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::tokens::errors","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2","",10,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::tokens","",0,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::client","",2,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::id","",4,[[["formatter",3]],["result",6]]],[11,"fmt","twitch_oauth2::tokens::errors","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"source","twitch_oauth2::client","",2,[[],[["option",4],["error",8]]]],[11,"source","twitch_oauth2::tokens::errors","",6,[[],[["option",4],["error",8]]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"source","","",9,[[],[["option",4],["error",8]]]],[11,"serialize","twitch_oauth2::id","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","twitch_oauth2::scopes","",1,[[],["result",4]]],[11,"deserialize","twitch_oauth2::id","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","twitch_oauth2::scopes","",1,[[],["result",4]]],[11,"deserialize","twitch_oauth2::tokens","",0,[[],["result",4]]],[11,"access_token","twitch_oauth2::id","",3,[[],["accesstoken",3]]],[11,"token_type","","",3,[[]]],[11,"expires_in","","",3,[[],[["duration",3],["option",4]]]],[11,"refresh_token","","",3,[[],[["option",4],["refreshtoken",3]]]],[11,"scopes","","",3,[[],[["vec",3],["option",4]]]]],"p":[[3,"ValidatedToken"],[4,"Scope"],[4,"SurfError"],[3,"TwitchTokenResponse"],[3,"TwitchTokenErrorResponse"],[3,"AppAccessToken"],[4,"TokenError"],[4,"ValidationError"],[4,"RevokeTokenError"],[4,"RefreshTokenError"],[3,"UserToken"],[8,"TwitchToken"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);