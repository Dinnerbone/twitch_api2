(function() {var implementors = {};
implementors["twitch_api2"] = [{"text":"impl&lt;'a, C&gt; UnwindSafe for HelixClient&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; UnwindSafe for TMIClient&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; UnwindSafe for TwitchClient&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, D&gt; UnwindSafe for Response&lt;R, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Pagination","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; !UnwindSafe for RequestError&lt;RE&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetChannelInformation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetChannelInformationRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModifyChannelInformationBody","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModifyChannelInformationRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StartCommercial","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StartCommercialBody","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StartCommercialRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ModifyChannelInformation","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommercialLength","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommercialLengthParseError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetClips","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetClipsRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckAutoModStatus","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckAutoModStatusBody","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CheckAutoModStatusRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetBannedEvents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetBannedEventsRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetBannedUsers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetBannedUsersRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetModeratorEvents","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetModeratorEventsRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetModerators","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetModeratorsRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetStreams","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetStreamsRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StreamType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetBroadcasterSubscriptions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetBroadcasterSubscriptionsRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetUsers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetUsersRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GetChatters","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Chatters","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; !UnwindSafe for RequestError&lt;RE&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DummyHttpClient","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurfError","synthetic":true,"types":[]}];
implementors["twitch_oauth2"] = [{"text":"impl UnwindSafe for AppAccessToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UserToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ValidatedToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Scope","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;EF, TT&gt; UnwindSafe for TwitchTokenResponse&lt;EF, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EF: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TwitchTokenErrorResponse","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; !UnwindSafe for TokenError&lt;RE&gt;","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; !UnwindSafe for ValidationError&lt;RE&gt;","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; UnwindSafe for RevokeTokenError&lt;RE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RE: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; !UnwindSafe for RefreshTokenError&lt;RE&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()