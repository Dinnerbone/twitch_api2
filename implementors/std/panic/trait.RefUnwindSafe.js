(function() {var implementors = {};
implementors["twitch_api2"] = [{"text":"impl&lt;'a, C&gt; RefUnwindSafe for HelixClient&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; RefUnwindSafe for TMIClient&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; RefUnwindSafe for TwitchClient&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, D&gt; RefUnwindSafe for Response&lt;R, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HelixRequestPutError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HelixRequestPatchError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; !RefUnwindSafe for ClientRequestError&lt;RE&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CreateRequestError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvalidUri","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for HelixRequestGetError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for HelixRequestPostError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HelixRequestDeleteError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChannelInformation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetChannelInformationRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModifyChannelInformationBody","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModifyChannelInformationRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StartCommercial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StartCommercialBody","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StartCommercialRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModifyChannelInformation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommercialLength","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommercialLengthParseError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Clip","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetClipsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetGamesRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetTopGamesRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TwitchGame","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckAutoModStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckAutoModStatusBody","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckAutoModStatusRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BannedEvents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetBannedEventsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BannedUsers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetBannedUsersRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetModeratorEventsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModeratorEvents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetModeratorsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Moderators","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetStreamsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetStreamTagsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StreamType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BroadcasterSubscriptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetBroadcasterSubscriptionsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetAllStreamTagsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TwitchTag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AutoGenerated","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetUsersRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for User","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetUsersFollowsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UsersFollows","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeleteUserFollowsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateUserFollowsBody","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateUserFollowsRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeleteUserFollows","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateUserFollows","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetChatters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Chatters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetHosts","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Host","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HostsRequestId","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; !RefUnwindSafe for RequestError&lt;RE&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DummyHttpClient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SurfError","synthetic":true,"types":[]}];
implementors["twitch_oauth2"] = [{"text":"impl RefUnwindSafe for AppAccessToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UserToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ValidatedToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Scope","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl&lt;EF, TT&gt; RefUnwindSafe for TwitchTokenResponse&lt;EF, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EF: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TwitchTokenErrorResponse","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; !RefUnwindSafe for TokenError&lt;RE&gt;","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; !RefUnwindSafe for ValidationError&lt;RE&gt;","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; RefUnwindSafe for RevokeTokenError&lt;RE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RE: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; !RefUnwindSafe for RefreshTokenError&lt;RE&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()