(function() {var implementors = {};
implementors["twitch_api2"] = [{"text":"impl&lt;'a, C&gt; Freeze for HelixClient&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; Freeze for TMIClient&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; Freeze for TwitchClient&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, D&gt; Freeze for Response&lt;R, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Pagination","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; Freeze for RequestError&lt;RE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RE: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ChannelInformation","synthetic":true,"types":[]},{"text":"impl Freeze for GetChannelInformationRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ModifyChannelInformationBody","synthetic":true,"types":[]},{"text":"impl Freeze for ModifyChannelInformationRequest","synthetic":true,"types":[]},{"text":"impl Freeze for StartCommercial","synthetic":true,"types":[]},{"text":"impl Freeze for StartCommercialBody","synthetic":true,"types":[]},{"text":"impl Freeze for StartCommercialRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ModifyChannelInformation","synthetic":true,"types":[]},{"text":"impl Freeze for CommercialLength","synthetic":true,"types":[]},{"text":"impl Freeze for CommercialLengthParseError","synthetic":true,"types":[]},{"text":"impl Freeze for Clip","synthetic":true,"types":[]},{"text":"impl Freeze for GetClipsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for GetGamesRequest","synthetic":true,"types":[]},{"text":"impl Freeze for GetTopGamesRequest","synthetic":true,"types":[]},{"text":"impl Freeze for TwitchGame","synthetic":true,"types":[]},{"text":"impl Freeze for CheckAutoModStatus","synthetic":true,"types":[]},{"text":"impl Freeze for CheckAutoModStatusBody","synthetic":true,"types":[]},{"text":"impl Freeze for CheckAutoModStatusRequest","synthetic":true,"types":[]},{"text":"impl Freeze for BannedEvents","synthetic":true,"types":[]},{"text":"impl Freeze for GetBannedEventsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for BannedUsers","synthetic":true,"types":[]},{"text":"impl Freeze for GetBannedUsersRequest","synthetic":true,"types":[]},{"text":"impl Freeze for GetModeratorEventsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ModeratorEvents","synthetic":true,"types":[]},{"text":"impl Freeze for GetModeratorsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for Moderators","synthetic":true,"types":[]},{"text":"impl Freeze for GetStreamsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for Stream","synthetic":true,"types":[]},{"text":"impl Freeze for GetStreamTagsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for StreamType","synthetic":true,"types":[]},{"text":"impl Freeze for BroadcasterSubscriptions","synthetic":true,"types":[]},{"text":"impl Freeze for GetBroadcasterSubscriptionsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for GetAllStreamTagsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for TwitchTag","synthetic":true,"types":[]},{"text":"impl Freeze for AutoGenerated","synthetic":true,"types":[]},{"text":"impl Freeze for GetUsersRequest","synthetic":true,"types":[]},{"text":"impl Freeze for User","synthetic":true,"types":[]},{"text":"impl Freeze for GetUsersFollowsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for UsersFollows","synthetic":true,"types":[]},{"text":"impl Freeze for GetChatters","synthetic":true,"types":[]},{"text":"impl Freeze for Chatters","synthetic":true,"types":[]},{"text":"impl Freeze for GetHosts","synthetic":true,"types":[]},{"text":"impl Freeze for Host","synthetic":true,"types":[]},{"text":"impl Freeze for HostsRequestId","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; Freeze for RequestError&lt;RE&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DummyHttpClient","synthetic":true,"types":[]},{"text":"impl Freeze for SurfError","synthetic":true,"types":[]}];
implementors["twitch_oauth2"] = [{"text":"impl Freeze for AppAccessToken","synthetic":true,"types":[]},{"text":"impl Freeze for UserToken","synthetic":true,"types":[]},{"text":"impl Freeze for ValidatedToken","synthetic":true,"types":[]},{"text":"impl Freeze for Scope","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;EF, TT&gt; Freeze for TwitchTokenResponse&lt;EF, TT&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EF: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;TT: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for TwitchTokenErrorResponse","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; Freeze for TokenError&lt;RE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RE: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; Freeze for ValidationError&lt;RE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RE: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; Freeze for RevokeTokenError&lt;RE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RE: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;RE&gt; Freeze for RefreshTokenError&lt;RE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RE: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()